(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8 data ("org-projectile-file" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-args" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-exchange" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-unimpaired" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-indent-plus" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "highlight" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "vi-tilde-fringe" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setting" (((:file "/Users/bing/.spacemacs.d/init.el") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "setq-default") . 1)) "provide" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/Users/bing/.spacemacs.d/lisp/init-cpp.el") . 1) ((:keyword "require") . 1)) "~/OpenProjects/" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/OpenProjects/linux/" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/OpenProjects/linux/README" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "mxnet" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/OpenProjects/mxnet/" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/OpenProjects/mxnet/README.md" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "zeromq" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/OpenProjects/libzmq/" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/OpenProjects/libzmq/README.md" (((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "N_SCALE" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 3) ((:symbol "Status") . 1) (c++-mode . 3) (nil . 3)) "setScale" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "Status") . 1) (c++-mode . 1) (nil . 1)) "input" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "Status") . 1) (c++-mode . 1) (nil . 1)) "output" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "Status") . 1) (c++-mode . 1) (nil . 1)) "Astar" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "Status") . 1) (c++-mode . 1) (nil . 1)) "printpath" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "Status") . 1) (c++-mode . 1) (nil . 1)) "checkvalid" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) (c++-mode . 1) (nil . 1)) "operator" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) (c++-mode . 1) (nil . 1)) "iterator" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/test.cpp") . 2) ((:symbol "nil") . 3) (c++-mode . 3) (nil . 3) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) "exclude" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/test.cpp") . 1) (c++-mode . 1) (nil . 1)) "erase" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "open") . 1) (c++-mode . 1) (nil . 1)) "begin" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 2) ((:symbol "open") . 2) (c++-mode . 2) (nil . 2)) "push_back" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "close") . 1) (c++-mode . 1) (nil . 1)) "source" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "cur") . 1) (c++-mode . 1) (nil . 1)) "movx" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) (c++-mode . 1) (nil . 1)) "serialization" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 2) (c++-mode . 2) (nil . 2)) "multiset" (((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1) ((:symbol "std") . 1) (c++-mode . 1) (nil . 1)) "set_id" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "person") . 1) (c++-mode . 1) (nil . 1)) "ignore" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "cin") . 1) (c++-mode . 1) (nil . 1)) "Enter" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 2) (c++-mode . 2) (nil . 2)) "mutable_name" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "person") . 1) (c++-mode . 1) (nil . 1)) "empty" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 2) ((:symbol "email") . 1) (c++-mode . 2) (nil . 2) ((:symbol "number") . 1)) "set_email" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "person") . 1) (c++-mode . 1) (nil . 1)) "number" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) (c++-mode . 1) (nil . 1)) "PhoneNumber" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "Person") . 1) (c++-mode . 1) (nil . 1)) "add_phones" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "person") . 1) (c++-mode . 1) (nil . 1)) "set_number" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "phone_number") . 1) (c++-mode . 1) (nil . 1)) "cout" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 3) ((:symbol "std") . 3) (c++-mode . 3) (nil . 3) ((:keyword "if") . 1)) "phone" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) (c++-mode . 1) (nil . 1)) "phone_number" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) (c++-mode . 1) (nil . 1)) "set_type" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 3) ((:symbol "phone_number") . 3) (c++-mode . 3) (nil . 3)) "Person" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 3) ((:symbol "tutorial") . 3) (c++-mode . 3) (nil . 3)) "MOBILE" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "Person") . 1) (c++-mode . 1) (nil . 1)) "HOME" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "Person") . 1) (c++-mode . 1) (nil . 1)) "WORK" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "Person") . 1) (c++-mode . 1) (nil . 1)) "variable" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "moe-light" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "GOOGLE_PROTOBUF_VERIFY_VERSION" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:keyword "else") . 1) (c++-mode . 1) (nil . 1)) "AddressBook" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "tutorial") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "binary" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 2) ((:symbol "ios") . 2) ((:keyword "return") . 2) (c++-mode . 2) (nil . 2)) "address_book" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 3) ((:symbol "nil") . 2) ((:keyword "if") . 2) (c++-mode . 3) (nil . 3) ((:keyword "return") . 1)) "ParseFromIstream" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "address_book") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "cerr" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "std") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "PromptForAddress" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "add_people" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "address_book") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "SerializeToOstream" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "address_book") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "Failed" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "addressbook" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "protobuf" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "google") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "ShutdownProtobufLibrary" (((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1) ((:symbol "protobuf") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "color" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "moe-theme-set-color" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "light" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "require" (((:file "/Users/bing/.spacemacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/Users/bing/.spacemacs.d/lisp/init-cpp.el") . 1)) "\"unp.h" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) (c-mode . 1) (nil . 1)) "sockaddr_in" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:keyword "struct") . 4) (c-mode . 4) (nil . 4) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) "err_quit" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "SOCK_STREAM" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "err_sys" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 3) ((:keyword "if") . 2) (c-mode . 3) (nil . 3) ((:keyword "sizeof") . 1)) "servaddr" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 3) ((:symbol "nil") . 1) ((:keyword "if") . 1) (c-mode . 3) (nil . 3) ((:keyword "sizeof") . 2)) "sin_family" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:symbol "servaddr") . 4) ((:keyword "sizeof") . 4) (c-mode . 4) (nil . 4) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) "AF_INET" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 2) ((:keyword "sizeof") . 2) (c-mode . 4) (nil . 4) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2) ((:keyword "struct") . 1)) "sin_port" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:symbol "servaddr") . 2) ((:keyword "sizeof") . 3) (c-mode . 3) (nil . 3) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2) ((:symbol "cliaddr") . 1)) "inet_pton" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "sin_addr" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:symbol "servaddr") . 4) ((:keyword "if") . 1) (c-mode . 5) (nil . 5) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2) ((:keyword "sizeof") . 4) ((:symbol "cliaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) "connect" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) ((:keyword "sizeof") . 1) (c-mode . 1) (nil . 1)) "recvline" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 2) ((:keyword "while") . 2) (c-mode . 2) (nil . 2)) "<unpv13e/" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 2) (c-mode . 10) (nil . 10) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/byteorder.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 2)) "<unpv13e/unp.h" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) (c-mode . 6) (nil . 6) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/byteorder.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) "<unpv13e/apueerror.h" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1) (c-mode . 4) (nil . 4) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) "endian" (((:file "/Users/bing/Desktop/CPP/unpv1/byteorder.c") . 1) ((:symbol "little") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "<time.h" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) (c-mode . 1) (nil . 1)) "socklen_t" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) (c-mode . 1) (nil . 1)) "s_addr" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) ((:symbol "sin_addr") . 2) ((:keyword "sizeof") . 2) (c-mode . 2) (nil . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) "INADDR_ANY" (((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1) ((:keyword "sizeof") . 2) (c-mode . 2) (nil . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)))) company-statistics--log [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ("org-projectile-file" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("evil-args" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("evil-exchange" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("evil-unimpaired" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("evil-indent-plus" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("highlight" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("vi-tilde-fringe" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("setting" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("~/OpenProjects/" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("~/OpenProjects/linux/" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("~/OpenProjects/linux/README" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("mxnet" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("~/OpenProjects/mxnet/" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("~/OpenProjects/mxnet/README.md" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("zeromq" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("~/OpenProjects/libzmq/" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("~/OpenProjects/libzmq/README.md" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-misc.el") . 1)) ("N_SCALE" (nil . 2) (c++-mode . 2) ((:symbol "Status") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 2)) ("N_SCALE" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("setScale" (nil . 1) (c++-mode . 1) ((:symbol "Status") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("input" (nil . 1) (c++-mode . 1) ((:symbol "Status") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("output" (nil . 1) (c++-mode . 1) ((:symbol "Status") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("N_SCALE" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("Astar" (nil . 1) (c++-mode . 1) ((:symbol "Status") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("printpath" (nil . 1) (c++-mode . 1) ((:symbol "Status") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("checkvalid" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("operator" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("iterator" (nil . 3) (c++-mode . 3) ((:symbol "nil") . 3) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/test.cpp") . 2)) ("exclude" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/test.cpp") . 1)) ("iterator" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/test.cpp") . 1)) ("erase" (nil . 1) (c++-mode . 1) ((:symbol "open") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("begin" (nil . 2) (c++-mode . 2) ((:symbol "open") . 2) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 2)) ("push_back" (nil . 1) (c++-mode . 1) ((:symbol "close") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("source" (nil . 1) (c++-mode . 1) ((:symbol "cur") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("movx" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("serialization" (nil . 2) (c++-mode . 2) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 2)) ("serialization" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("multiset" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("iterator" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("begin" (nil . 1) (c++-mode . 1) ((:symbol "open") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/npuzzle/npuzzle.cpp") . 1)) ("set_id" (nil . 1) (c++-mode . 1) ((:symbol "person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("ignore" (nil . 1) (c++-mode . 1) ((:symbol "cin") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("Enter" (nil . 2) (c++-mode . 2) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 2)) ("mutable_name" (nil . 1) (c++-mode . 1) ((:symbol "person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("Enter" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("empty" (nil . 2) (c++-mode . 2) ((:symbol "email") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 2)) ("set_email" (nil . 1) (c++-mode . 1) ((:symbol "person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("number" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("empty" (nil . 1) (c++-mode . 1) ((:symbol "number") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("PhoneNumber" (nil . 1) (c++-mode . 1) ((:symbol "Person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("add_phones" (nil . 1) (c++-mode . 1) ((:symbol "person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("set_number" (nil . 1) (c++-mode . 1) ((:symbol "phone_number") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("cout" (nil . 2) (c++-mode . 2) ((:symbol "std") . 2) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 2)) ("phone" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("phone_number" (nil . 1) (c++-mode . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("set_type" (nil . 3) (c++-mode . 3) ((:symbol "phone_number") . 3) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 3)) ("Person" (nil . 3) (c++-mode . 3) ((:symbol "tutorial") . 3) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 3)) ("MOBILE" (nil . 1) (c++-mode . 1) ((:symbol "Person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("set_type" (nil . 1) (c++-mode . 1) ((:symbol "phone_number") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:symbol "tutorial") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("HOME" (nil . 1) (c++-mode . 1) ((:symbol "Person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("set_type" (nil . 1) (c++-mode . 1) ((:symbol "phone_number") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:symbol "tutorial") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("WORK" (nil . 1) (c++-mode . 1) ((:symbol "Person") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("cout" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("variable" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("moe-light" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("GOOGLE_PROTOBUF_VERIFY_VERSION" (nil . 1) (c++-mode . 1) ((:keyword "else") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("AddressBook" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "tutorial") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("binary" (nil . 2) (c++-mode . 2) ((:keyword "return") . 2) ((:symbol "ios") . 2) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 2)) ("cout" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "std") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("address_book" (nil . 3) (c++-mode . 3) ((:keyword "if") . 2) ((:symbol "nil") . 2) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 3)) ("ParseFromIstream" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "address_book") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("cerr" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "std") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("PromptForAddress" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("address_book" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("add_people" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "address_book") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("binary" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "ios") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("address_book" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "nil") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("SerializeToOstream" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "address_book") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("Failed" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("addressbook" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("protobuf" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "google") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("ShutdownProtobufLibrary" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "protobuf") . 1) ((:file "/Users/bing/Desktop/fun-algrithms/protobuf-tutorial/add_new.cc") . 1)) ("color" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("setting" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("moe-theme-set-color" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("light" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("require" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "require") . 1) ((:file "/Users/bing/.spacemacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-cpp.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/bing/.spacemacs.d/lisp/init-cpp.el") . 1)) ("\"unp.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("sockaddr_in" (nil . 1) (c-mode . 1) ((:keyword "struct") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("err_quit" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("SOCK_STREAM" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("err_sys" (nil . 3) (c-mode . 3) ((:keyword "if") . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 3)) ("servaddr" (nil . 3) (c-mode . 3) ((:keyword "if") . 1) ((:symbol "nil") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 3)) ("servaddr" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("sin_family" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("AF_INET" (nil . 2) (c-mode . 2) ((:keyword "sizeof") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 2)) ("servaddr" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("sin_port" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("inet_pton" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("AF_INET" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("sin_addr" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("err_sys" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("connect" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("recvline" (nil . 2) (c-mode . 2) ((:keyword "while") . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 2)) ("recvline" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("err_sys" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("<unpv13e/" (nil . 3) (c-mode . 3) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 2)) ("<unpv13e/unp.h" (nil . 2) (c-mode . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("<unpv13e/apueerror.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpcli.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv.c") . 1)) ("<unpv13e/unp.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/byteorder.c") . 1)) ("<unpv13e/unp.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/byteorder.c") . 1)) ("endian" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:symbol "little") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/byteorder.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2)) ("<unpv13e/unp.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("<time.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("socklen_t" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("sockaddr_in" (nil . 1) (c-mode . 1) ((:keyword "struct") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("AF_INET" (nil . 1) (c-mode . 1) ((:keyword "struct") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2)) ("sin_family" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("AF_INET" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("sin_addr" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 4) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2)) ("s_addr" (nil . 2) (c-mode . 2) ((:keyword "sizeof") . 2) ((:symbol "sin_addr") . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("INADDR_ANY" (nil . 2) (c-mode . 2) ((:keyword "sizeof") . 2) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("sin_port" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 2)) ("sin_addr" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "cliaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("sin_port" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "cliaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("<unpv13e/apueerror.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/daytimetcpsrv1.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 2)) ("<unpv13e/unp.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) ("sockaddr_in" (nil . 1) (c-mode . 1) ((:keyword "struct") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) ("sin_family" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) ("sin_addr" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) ("s_addr" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "sin_addr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) ("INADDR_ANY" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 2)) ("<unpv13e/unp.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) ("sockaddr_in" (nil . 1) (c-mode . 1) ((:keyword "struct") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) ("sin_family" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) ("sin_addr" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "servaddr") . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) ("<unpv13e/apueerror.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpcli01.c") . 1)) ("<unpv13e/" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1)) ("<unpv13e/apueerror.h" (nil . 1) (c-mode . 1) ((:file "/Users/bing/Desktop/CPP/unpv1/echo/tcpserv01.c") . 1))] company-statistics--index 0)
