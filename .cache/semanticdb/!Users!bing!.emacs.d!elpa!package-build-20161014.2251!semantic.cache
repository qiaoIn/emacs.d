;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1617 1634])
            ("package" include nil nil [1636 1654])
            ("lisp-mnt" include nil nil [1655 1674])
            ("json" include nil nil [1675 1690])
            ("package-build--melpa-base" variable
               (:constant-flag t
                :default-value (file-name-directory (directory-file-name (file-name-directory (or load-file-name (buffer-file-name))))))
                nil [1692 1842])
            ("package-build" customgroup (:user-visible-flag t) nil [1844 1979])
            ("package-build-working-dir" variable (:default-value (expand-file-name "working/" package-build--melpa-base)) nil [1981 2156])
            ("package-build-archive-dir" variable (:default-value (expand-file-name "packages/" package-build--melpa-base)) nil [2158 2342])
            ("package-build-recipes-dir" variable (:default-value (expand-file-name "recipes/" package-build--melpa-base)) nil [2344 2516])
            ("package-build-verbose" variable (:default-value t) nil [2518 2680])
            ("package-build-stable" variable nil nil [2682 2844])
            ("package-build-timeout-executable" variable (:default-value (let ((prog (or (executable-find "timeout") (executable-find "gtimeout")))) (when (and prog (string-match-p "^ *-k" (shell-command-to-string (concat prog " --help")))) prog))) nil [2846 3283])
            ("package-build-timeout-secs" variable (:default-value 600) nil [3285 3667])
            ("package-build-tar-executable" variable (:default-value (or (executable-find "gtar") (executable-find "tar"))) nil [3669 3942])
            ("package-build-write-melpa-badge-images" variable nil nil [3944 4131])
            ("package-build-version-regexp" variable (:default-value "^[rRvV]?\\(.*\\)$") nil [4133 4392])
            ("package-build--recipe-alist" variable nil nil [4418 4571])
            ("package-build--recipe-alist-initialized" variable nil nil [4573 4695])
            ("package-build--archive-alist" variable nil nil [4697 4917])
            ("package-build--archive-alist-initialized" variable nil nil [4919 5041])
            ("package-build-default-files-spec" variable
               (:constant-flag t
                :default-value (quote ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el"))))
                nil [5043 5333])
            ("package-build--message" function (:arguments ("format-string" "args")) nil [5335 5528])
            ("package-build--slurp-file" function (:arguments ("file-name")) nil [5530 5816])
            ("package-build--string-rtrim" function (:arguments ("str")) nil [5818 5952])
            ("package-build--valid-version" function (:arguments ("str" "regexp")) nil [5955 6287])
            ("package-build--parse-time" function (:arguments ("str")) nil [6289 7002])
            ("package-build--find-parse-time" function (:arguments ("regex" "bound")) nil [7004 7326])
            ("package-build--find-parse-time-newest" function (:arguments ("regex" "bound")) nil [7328 7725])
            ("package-build--find-version-newest" function (:arguments ("regex" "bound")) nil [7727 9617])
            ("package-build--run-process" function (:arguments ("dir" "command" "args")) nil [9619 10612])
            ("package-build--run-process-match" function (:arguments ("regex" "dir" "prog" "args")) nil [10614 10947])
            ("package-build-checkout" function (:arguments ("package-name" "config" "working-dir")) nil [10949 11678])
            ("package-build--last-wiki-fetch-time" variable nil nil [11680 11913])
            ("package-build--wiki-min-request-interval" variable (:default-value 3) nil [11915 12052])
            ("package-build--with-wiki-rate-limit" function (:arguments ("body")) nil [12054 12736])
            ("mm-decode" include nil nil [12738 12758])
            ("url-http-response-status" variable nil nil [12759 12792])
            ("url-http-end-of-headers" variable nil nil [12793 12825])
            ("package-build--url-copy-file" function (:arguments ("url" "newname" "ok-if-already-exists")) nil [12827 14007])
            ("package-build--grab-wiki-file" function (:arguments ("filename")) nil [14009 14610])
            ("package-build--checkout-wiki" function (:arguments ("name" "config" "dir")) nil [14612 15142])
            ("package-build--darcs-repo" function (:arguments ("dir")) nil [15144 15313])
            ("package-build--checkout-darcs" function (:arguments ("name" "config" "dir")) nil [15315 17020])
            ("package-build--fossil-repo" function (:arguments ("dir")) nil [17022 17177])
            ("package-build--checkout-fossil" function (:arguments ("name" "config" "dir")) nil [17179 18386])
            ("package-build--svn-repo" function (:arguments ("dir")) nil [18388 18533])
            ("package-build--trim" function (:arguments ("str" "chr")) nil [18535 18764])
            ("package-build--princ-exists" function (:arguments ("dir")) nil [18766 18914])
            ("package-build--princ-checkout" function (:arguments ("repo" "dir")) nil [18916 19079])
            ("package-build--checkout-svn" function (:arguments ("name" "config" "dir")) nil [19081 20229])
            ("package-build--cvs-repo" function (:arguments ("dir")) nil [20232 20604])
            ("package-build--checkout-cvs" function (:arguments ("name" "config" "dir")) nil [20606 23803])
            ("package-build--git-repo" function (:arguments ("dir")) nil [23805 23982])
            ("package-build--git-head-branch" function (:arguments ("dir")) nil [23984 24215])
            ("package-build--checkout-git" function (:arguments ("name" "config" "dir")) nil [24217 26369])
            ("package-build--update-git-to-ref" function (:arguments ("dir" "ref")) nil [26371 26694])
            ("package-build--checkout-github" function (:arguments ("name" "config" "dir")) nil [26696 26984])
            ("package-build--checkout-gitlab" function (:arguments ("name" "config" "dir")) nil [26986 27274])
            ("package-build--checkout-bitbucket" function (:arguments ("name" "config" "dir")) nil [27276 27568])
            ("package-build--bzr-expand-repo" function (:arguments ("repo")) nil [27570 27754])
            ("package-build--bzr-repo" function (:arguments ("dir")) nil [27756 27911])
            ("package-build--checkout-bzr" function (:arguments ("name" "config" "dir")) nil [27913 29756])
            ("package-build--hg-repo" function (:arguments ("dir")) nil [29758 29906])
            ("package-build--checkout-hg" function (:arguments ("name" "config" "dir")) nil [29908 32420])
            ("package-build--dump" function (:arguments ("data" "file" "pretty-print")) nil [32422 32719])
            ("package-build--write-pkg-file" function (:arguments ("pkg-file" "pkg-info")) nil [32721 33889])
            ("package-build--read-from-file" function (:arguments ("file-name")) nil [33891 34128])
            ("package-build--create-tar" function (:arguments ("file" "dir" "files")) nil [34130 34826])
            ("package-build--find-package-commentary" function (:arguments ("file-path")) nil [34829 35049])
            ("package-build--write-pkg-readme" function (:arguments ("target-dir" "commentary" "file-name")) nil [35051 35877])
            ("package-build--readme-file-name" function (:arguments ("target-dir" "file-name")) nil [35879 36095])
            ("package-build--update-or-insert-version" function (:arguments ("version")) nil [36097 36757])
            ("package-build--ensure-ends-here-line" function (:arguments ("file-path")) nil [36759 37171])
            ("package-build--get-package-info" function (:arguments ("file-path")) nil [37173 37725])
            ("package-build--get-pkg-file-info" function (:arguments ("file-path")) nil [37727 39460])
            ("package-build--merge-package-info" function (:arguments ("pkg-info" "name" "version")) nil [39462 39843])
            ("package-build--archive-entry" function (:arguments ("pkg-info" "type")) nil [39845 40394])
            ("package-build--archive-file-name" function (:arguments ("archive-entry")) nil [40396 40838])
            ("package-build--entry-file-name" function (:arguments ("archive-entry")) nil [40840 41209])
            ("package-build--delete-file-if-exists" function (:arguments ("file")) nil [41211 41345])
            ("package-build--remove-archive-files" function (:arguments ("archive-entry")) nil [41347 41902])
            ("package-build--read-recipe" function (:arguments ("file-name")) nil [41904 43886])
            ("package-build--read-recipes" function nil nil [43888 44153])
            ("package-build--read-recipes-ignore-errors" function nil nil [44155 44800])
            ("package-build-expand-file-specs" function (:arguments ("dir" "specs" "subdir" "allow-empty")) nil [44803 46504])
            ("package-build--config-file-list" function (:arguments ("config")) nil [46507 46887])
            ("package-build--expand-source-file-list" function (:arguments ("dir" "config")) nil [46889 47119])
            ("package-build--generate-info-files" function (:arguments ("files" "source-dir" "target-dir")) nil [47121 48346])
            ("package-build--generate-dir-file" function (:arguments ("files" "target-dir")) nil [48348 49173])
            ("package-build--copy-package-files" function (:arguments ("files" "source-dir" "target-dir")) nil [49175 49556])
            ("package-build--copy-file" function (:arguments ("file" "newname")) nil [49558 50044])
            ("package-build--package-name-completing-read" function nil nil [50047 50222])
            ("package-build--find-source-file" function (:arguments ("target" "files")) nil [50224 50390])
            ("package-build--find-package-file" function (:arguments ("name")) nil [50392 50587])
            ("package-build--package-buffer-info-vec" function nil nil [50589 51960])
            ("package-build--this-file" variable
               (:constant-flag t
                :default-value load-file-name)
                nil [51962 52012])
            ("package-build--up-to-date-p" function (:arguments ("name" "version")) nil [52305 52954])
            ("package-build-archive" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [52993 54934])
            ("package-build-package" function (:arguments ("package-name" "version" "file-specs" "source-dir" "target-dir")) nil [54951 56542])
            ("package-build--build-single-file-package" function (:arguments ("package-name" "version" "file" "source-dir" "target-dir")) nil [56544 58151])
            ("package-build--build-multi-file-package" function (:arguments ("package-name" "version" "files" "source-dir" "target-dir")) nil [58153 60586])
            ("package-build--write-melpa-badge-image" function (:arguments ("package-name" "version" "target-dir")) nil [60792 61793])
            ("package-build-minor-mode-map" variable (:default-value (let ((m (make-sparse-keymap))) (define-key m (kbd "C-c C-c") (quote package-build-current-recipe)) m)) nil [61829 62015])
            ("define-minor-mode" code nil nil [62017 62243])
            ("package-build-create-recipe" function
               (:user-visible-flag t
                :arguments ("name" "fetcher"))
                nil [62260 63252])
            ("package-build-current-recipe" function (:user-visible-flag t) nil [63269 64570])
            ("package-build-archive-ignore-errors" function
               (:user-visible-flag t
                :arguments ("pkg"))
                nil [64572 65198])
            ("package-build-all" function (:user-visible-flag t) nil [65218 65754])
            ("package-build-cleanup" function (:user-visible-flag t) nil [65756 66265])
            ("package-build-recipe-alist" function nil nil [66267 66564])
            ("package-build-archive-alist" function nil nil [66566 66771])
            ("package-build-reinitialize" function (:user-visible-flag t) nil [66773 66952])
            ("package-build-dump-archive-contents" function (:arguments ("file-name" "pretty-print")) nil [66954 67388])
            ("package-build--archive-entries" function nil nil [67390 68116])
            ("package-build-recipe-alist-as-json" function
               (:user-visible-flag t
                :arguments ("file-name"))
                nil [68149 68351])
            ("package-build--sym-to-keyword" function (:arguments ("s")) nil [68353 68482])
            ("package-build--pkg-info-for-json" function (:arguments ("info")) nil [68484 69079])
            ("package-build--archive-alist-for-json" function nil nil [69081 69404])
            ("package-build-archive-alist-as-json" function
               (:user-visible-flag t
                :arguments ("file-name"))
                nil [69406 69628])
            ("package-build" package nil nil [69631 69655]))          
      :file "package-build.el"
      :pointmax 69760
      :fsize 69763
      :lastmodtime '(22659 32312 0 0)
      :unmatched-syntax nil))
  :file "!Users!bing!.emacs.d!elpa!package-build-20161014.2251!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
