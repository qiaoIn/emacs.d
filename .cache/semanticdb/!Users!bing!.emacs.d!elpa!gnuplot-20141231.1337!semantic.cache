;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("comint" include nil nil [17258 17275])
            ("easymenu" include nil nil [17276 17295])
            ("cl" include nil nil [17315 17328])
            ("declare-function" code nil nil [17331 17376])
            ("custom" include nil nil [17507 17524])
            ("info" include nil nil [17555 17570])
            ("condition-case" code nil nil [17593 17655])
            ("if" code nil nil [17719 18142])
            ("if" code nil nil [18190 18551])
            ("if" code nil nil [18605 18819])
            ("if" code nil nil [18869 19190])
            ("gnuplot-xemacs-p" variable
               (:constant-flag t
                :default-value (string-match "XEmacs" (emacs-version)))
                nil [19199 19266])
            ("gnuplot-ntemacs-p" variable
               (:constant-flag t
                :default-value (string-match "msvc" (emacs-version)))
                nil [19267 19333])
            ("gnuplot-three-eight-p" variable nil nil [19334 19369])
            ("gnuplot-maintainer" variable
               (:constant-flag t
                :default-value "Bruce Ravel")
                nil [19371 19414])
            ("gnuplot-maintainer-email" variable
               (:constant-flag t
                :default-value "bruceravel1@gmail.com>")
                nil [19415 19475])
            ("gnuplot-maintainer-url" variable
               (:constant-flag t
                :default-value "http://github.com/bruceravel/gnuplot-mode/")
                nil [19476 19556])
            ("gnuplot-version" variable
               (:constant-flag t
                :default-value "0.7-beta")
                nil [19557 19594])
            ("gnuplot" customgroup (:user-visible-flag t) nil [19596 19977])
            ("gnuplot-insertions" customgroup (:user-visible-flag t) nil [19978 20125])
            ("gnuplot-hooks" customgroup (:user-visible-flag t) nil [20126 20236])
            ("gnuplot-mode-hook" variable (:user-visible-flag t) nil [20238 20355])
            ("gnuplot-load-hook" variable (:user-visible-flag t) nil [20356 20474])
            ("gnuplot-after-plot-hook" variable (:user-visible-flag t) nil [20475 20694])
            ("gnuplot-info-hook" variable (:user-visible-flag t) nil [20697 22428])
            ("gnuplot-comint-setup-hook" variable (:user-visible-flag t) nil [22463 22660])
            ("gnuplot-comint-mode-hook" variable (:user-visible-flag t) nil [22662 22907])
            ("gnuplot-recently-sent" variable nil nil [22909 23142])
            ("make-variable-buffer-local" code nil nil [23143 23194])
            ("gnuplot-program" variable
               (:user-visible-flag t
                :default-value "gnuplot")
                nil [23196 23308])
            ("gnuplot-program-version" variable nil nil [23309 23422])
            ("gnuplot-program-major-version" variable nil nil [23423 23554])
            ("gnuplot-program-minor-version" variable nil nil [23555 23686])
            ("gnuplot-process-name" variable (:default-value "gnuplot") nil [23688 23814])
            ("gnuplot-buffer" variable (:user-visible-flag t) nil [23815 23902])
            ("gnuplot-process" variable nil nil [23903 23972])
            ("gnuplot-process-frame" variable nil nil [23973 24121])
            ("gnuplot-comint-recent-buffer" variable nil nil [24122 24346])
            ("gnuplot-gnuplot-buffer" variable
               (:user-visible-flag t
                :default-value "plot.gp")
                nil [24348 24503])
            ("gnuplot-display-process" variable (:default-value (quote window)) nil [24505 24978])
            ("gnuplot-info-display" variable
               (:user-visible-flag t
                :default-value (quote window))
                nil [24979 25409])
            ("gnuplot-echo-command-line-flag" variable
               (:user-visible-flag t
                :default-value (not gnuplot-ntemacs-p))
                nil [25411 26067])
            ("gnuplot-insertions-show-help-flag" variable (:user-visible-flag t) nil [26068 26297])
            ("gnuplot-delay" variable
               (:user-visible-flag t
                :default-value 0.01)
                nil [26299 26604])
            ("gnuplot-buffer-max-size" variable
               (:user-visible-flag t
                :default-value 1000)
                nil [26605 27042])
            ("gnuplot-quote-character" variable
               (:user-visible-flag t
                :default-value "'")
                nil [27043 27439])
            ("gnuplot-basic-offset" variable (:default-value 4) nil [27440 27797])
            ("gnuplot-info-frame" variable nil nil [28061 28092])
            ("gnuplot-info-nodes" variable (:default-value (quote nil)) nil [28093 28124])
            ("gnuplot-first-call" variable (:default-value t) nil [28126 28155])
            ("gnuplot-keywords" variable nil nil [28322 28476])
            ("gnuplot-keywords-alist" variable nil nil [28477 28512])
            ("gnuplot-keywords-pending" variable (:default-value t) nil [28536 28642])
            ("gnuplot-keywords-when" variable (:default-value (quote deferred)) nil [28643 29032])
            ("gnuplot-set-context-sensitive-completion" function (:arguments ("_variable" "value")) nil [29034 29373])
            ("gnuplot-use-context-sensitive-completion" variable (:default-value t) nil [29375 29811])
            ("gnuplot-eldoc-mode" variable nil nil [29813 30023])
            ("gnuplot-tab-completion" variable nil nil [30027 30279])
            ("gnuplot-set-display-mode" function (:arguments ("variable" "value" "args")) nil [30281 30679])
            ("gnuplot-inline-image-mode" variable nil nil [30681 31523])
            ("gnuplot-image-format" variable (:default-value "png") nil [31525 31932])
            ("gnuplot-faces" customgroup (:user-visible-flag t) nil [31934 32038])
            ("gnuplot-prompt-face" variable
               (:default-value (quote ((((class color)) (:foreground "firebrick")) (t (:bold t :underline t))))
                :type "face")
                nil [32040 32322])
            ("gnuplot-mode-map" variable (:default-value (let ((map (make-sparse-keymap)) (completion-function (if (fboundp (quote completion-at-point)) (quote completion-at-point) (quote gnuplot-xemacs-completion-at-point)))) (define-key map "" (quote gnuplot-send-buffer-to-gnuplot)) (define-key map "" (quote comment-region)) (define-key map "" (quote gnuplot-gui-set-options-and-insert)) (define-key map "" (quote gnuplot-show-version)) (define-key map "" (quote gnuplot-show-gnuplot-buffer)) (define-key map "" (quote gnuplot-send-file-to-gnuplot)) (define-key map "" (quote gnuplot-info-lookup-symbol)) (define-key map "	" (quote gnuplot-insert-filename)) (define-key map "
" (quote gnuplot-forward-script-line)) (define-key map "" (quote gnuplot-kill-gnuplot-buffer)) (define-key map "" (quote gnuplot-send-line-to-gnuplot)) (define-key map "" (quote gnuplot-negate-option)) (define-key map "" (quote gnuplot-show-gnuplot-version)) (define-key map "" (quote gnuplot-send-region-to-gnuplot)) (define-key map (kbd "C-M-x") (quote gnuplot-send-line-to-gnuplot)) (define-key map "" (quote gnuplot-bug-report)) (define-key map "" (quote gnuplot-send-line-and-forward)) (define-key map "" (quote gnuplot-customize)) (define-key map "	" (quote indent-for-tab-command)) (define-key map "" (quote newline-and-indent)) (define-key map "\351" (quote gnuplot-inline-image-mode)) (define-key map (kbd "}") (quote gnuplot-electric-insert)) (define-key map "\215" completion-function) (define-key map "\211" completion-function) (if gnuplot-xemacs-p (define-key map (quote (shift button2)) (quote gnuplot-gui-mouse-set)) (define-key map [S-mouse-2] (quote gnuplot-gui-mouse-set))) map)) nil [32358 34203])
            ("gnuplot-mode-menu" variable nil nil [34205 34235])
            ("gnuplot-display-options-menu" variable (:default-value (flet ((make-image-setter (type) (\` [(\, (concat (upcase type) " images")) (lambda nil (interactive) (gnuplot-set-image-format (\, type))) :style toggle :selected (eq gnuplot-image-format (\, type))]))) (\` ("Display plot output" ["Externally" gnuplot-external-display-mode :style toggle :selected (null gnuplot-inline-image-mode)] ["In Comint buffer" gnuplot-inline-display-mode :active (gnuplot-display-images-p) :style toggle :selected (eq gnuplot-inline-image-mode (quote comint))] ["In dedicated buffer" gnuplot-dedicated-display-mode :style toggle :selected (eq gnuplot-inline-image-mode (quote dedicated))] "---" (\,@ (mapcar (function make-image-setter) (list "png" "jpeg" "svg"))) ["Other image type..." gnuplot-set-image-format])))) nil [34237 35113])
            ("gnuplot-menu" variable (:default-value (\` ("Gnuplot" ["Send line to gnuplot" gnuplot-send-line-to-gnuplot t] ["Send line & move forward" gnuplot-send-line-and-forward (not (eobp))] ["Send region to gnuplot" gnuplot-send-region-to-gnuplot (gnuplot-mark-active)] ["Send buffer to gnuplot" gnuplot-send-buffer-to-gnuplot t] ["Send file to gnuplot" gnuplot-send-file-to-gnuplot t] "---" (\, gnuplot-display-options-menu) ["Contextual completion and help" gnuplot-context-sensitive-mode :style toggle :selected gnuplot-context-sensitive-mode] ["Echo area help (eldoc-mode)" eldoc-mode :active gnuplot-context-sensitive-mode :style toggle :selected eldoc-mode] "---" ["Insert filename at point" gnuplot-insert-filename t] ["Negate set option" gnuplot-negate-option t] ["Keyword help" gnuplot-info-lookup-symbol (or gnuplot-keywords gnuplot-keywords-pending)] ["Quick help for thing at point" gnuplot-help-function gnuplot-context-sensitive-mode] ["Info documentation on thing at point" gnuplot-info-at-point gnuplot-context-sensitive-mode] ["Show gnuplot process buffer" gnuplot-show-gnuplot-buffer t] ["Set arguments at point" gnuplot-gui-set-options-and-insert (fboundp (quote gnuplot-gui-set-options-and-insert))] ["Swap plot/splot/fit lists in GUI" gnuplot-gui-swap-simple-complete (fboundp (quote gnuplot-gui-swap-simple-complete))] "---" ["Customize gnuplot" gnuplot-customize t] ["Submit bug report" gnuplot-bug-report t] ["Show gnuplot-mode version" gnuplot-show-version t] ["Show gnuplot version" gnuplot-show-gnuplot-version t] "---" ["Kill gnuplot" gnuplot-kill-gnuplot-buffer t]))) nil [35115 37128])
            ("gnuplot-mode-insertions-menu" variable nil nil [37211 37252])
            ("gnuplot-insertions-menu" variable nil nil [37253 38884])
            ("gnuplot-insertions-top" variable nil nil [38886 39007])
            ("gnuplot-insertions-menu-flag" variable
               (:user-visible-flag t
                :default-value t)
                nil [39009 39323])
            ("gnuplot-insertions-adornments" variable (:default-value (if gnuplot-three-eight-p (quote ("adornments" ["arrow" (gnuplot-insert "set arrow ") t] ["bar" (gnuplot-insert "set bar") t] ["border" (gnuplot-insert "set border") t] ["boxwidth" (gnuplot-insert "set boxwidth ") t] ["format" (gnuplot-insert "set format ") t] ["grid" (gnuplot-insert "set grid") t] ["key" (gnuplot-insert "set key ") t] ["label" (gnuplot-insert "set label ") t] ["pointsize" (gnuplot-insert "set pointsize ") t] ["samples" (gnuplot-insert "set samples ") t] ["size" (gnuplot-insert "set size ") t] ["style" (gnuplot-insert "set style ") t] ["tics" (gnuplot-insert "set tics ") t] ["timefmt" (gnuplot-insert "set timefmt ") t] ["timestamp" (gnuplot-insert "set timestamp ") t] ["title" (gnuplot-insert "set title ") t] ["zeroaxis" (gnuplot-insert "set zeroaxis") t])) (quote ("adornments" ["data style" (gnuplot-insert "set data style ") t] ["function style" (gnuplot-insert "set function style ") t] ["arrow" (gnuplot-insert "set arrow ") t] ["bar" (gnuplot-insert "set bar") t] ["border" (gnuplot-insert "set border") t] ["boxwidth" (gnuplot-insert "set boxwidth ") t] ["format" (gnuplot-insert "set format ") t] ["grid" (gnuplot-insert "set grid") t] ["key" (gnuplot-insert "set key ") t] ["label" (gnuplot-insert "set label ") t] ["pointsize" (gnuplot-insert "set pointsize ") t] ["samples" (gnuplot-insert "set samples ") t] ["size" (gnuplot-insert "set size ") t] ["tics" (gnuplot-insert "set tics ") t] ["timefmt" (gnuplot-insert "set timefmt ") t] ["timestamp" (gnuplot-insert "set timestamp ") t] ["title" (gnuplot-insert "set title ") t] ["zeroaxis" (gnuplot-insert "set zeroaxis") t])))) nil [39325 42022])
            ("gnuplot-insertions-plot-options" variable (:default-value (quote ("plot options" ["autoscale" (gnuplot-insert "set autoscale ") t] ["clip" (gnuplot-insert "set clip ") t] ["encoding" (gnuplot-insert "set encoding ") t] ["locale" (gnuplot-insert "set locale ") t] ["logscale" (gnuplot-insert "set logscale ") t] ["multiplot" (gnuplot-insert "set multiplot") t] ["missing" (gnuplot-insert "set missing \"\"") t] ["palette" (gnuplot-insert "set palette ") t] ["pm3d" (gnuplot-insert "set pm3d ") t] ["offsets" (gnuplot-insert "set offsets ") t] ["output" (gnuplot-insert "set output ") t] ["zero" (gnuplot-insert "set zero ") t]))) nil [42026 43274])
            ("gnuplot-insertions-terminal" variable (:default-value (quote ("terminal" ["eepic" (gnuplot-insert "set terminal eepic") t] ["fig" (gnuplot-insert "set terminal fig") t] ["gpic" (gnuplot-insert "set terminal gpic") t] ["latex" (gnuplot-insert "set terminal latex") t] ["linux" (gnuplot-insert "set terminal linux") t] ["pbm" (gnuplot-insert "set terminal pbm") t] ["png" (gnuplot-insert "set terminal png") t] ["postscript" (gnuplot-insert "set terminal postscript") t] ["pslatex" (gnuplot-insert "set terminal pslatex") t] ["table" (gnuplot-insert "set terminal table") t] ["tek40xx" (gnuplot-insert "set terminal tek40xx") t] ["tkcanvas" (gnuplot-insert "set terminal tkcanvas") t] ["tpic" (gnuplot-insert "set terminal tpic") t] ["vgagl" (gnuplot-insert "set terminal vgagl") t] ["vttek" (gnuplot-insert "set terminal vttek") t] ["x11" (gnuplot-insert "set terminal x11") t]))) nil [43277 44846])
            ("gnuplot-insertions-x-axis" variable (:default-value (quote ("x-axis" ["xdata" (gnuplot-insert "set xdata ") t] ["xlabel" (gnuplot-insert "set xlabel ") t] ["xrange" (gnuplot-insert "set xrange [:]") t] ["xtics" (gnuplot-insert "set xtics ") t] ["mxtics" (gnuplot-insert "set mxtics ") t] ["xzeroaxis" (gnuplot-insert "set xzeroaxis ") t] ["xdtics" (gnuplot-insert "set xdtics ") t] ["xmtics" (gnuplot-insert "set xmtics ") t]))) nil [44849 45816])
            ("gnuplot-insertions-x2-axis" variable (:default-value (quote ("x2-axis" ["x2data" (gnuplot-insert "set xdata ") t] ["x2label" (gnuplot-insert "set xlabel ") t] ["x2range" (gnuplot-insert "set xrange [:]") t] ["x2tics" (gnuplot-insert "set xtics ") t] ["mx2tics" (gnuplot-insert "set mxtics ") t] ["x2zeroaxis" (gnuplot-insert "set xzeroaxis ") t] ["x2dtics" (gnuplot-insert "set xdtics ") t] ["x2mtics" (gnuplot-insert "set xmtics ") t]))) nil [45819 46796])
            ("gnuplot-insertions-y-axis" variable (:default-value (quote ("y-axis" ["ydata" (gnuplot-insert "set ydata ") t] ["ylabel" (gnuplot-insert "set ylabel ") t] ["ymtics" (gnuplot-insert "set ymtics ") t] ["yrange" (gnuplot-insert "set yrange [:]") t] ["ytics" (gnuplot-insert "set ytics ") t] ["yzeroaxis" (gnuplot-insert "set yzeroaxis ") t] ["ydtics" (gnuplot-insert "set ydtics ") t] ["mytics" (gnuplot-insert "set mytics ") t]))) nil [46799 47766])
            ("gnuplot-insertions-y2-axis" variable (:default-value (quote ("y2-axis" ["y2data" (gnuplot-insert "set ydata ") t] ["y2label" (gnuplot-insert "set ylabel ") t] ["y2range" (gnuplot-insert "set yrange [:]") t] ["y2tics" (gnuplot-insert "set ytics ") t] ["my2tics" (gnuplot-insert "set mytics ") t] ["y2zeroaxis" (gnuplot-insert "set yzeroaxis ") t] ["y2mtics" (gnuplot-insert "set ymtics ") t] ["y2dtics" (gnuplot-insert "set ydtics ") t]))) nil [47768 48746])
            ("gnuplot-insertions-z-axis" variable (:default-value (quote ("z-axis" ["zdata" (gnuplot-insert "set zdata ") t] ["zlabel" (gnuplot-insert "set zlabel ") t] ["zrange" (gnuplot-insert "set zrange [:]") t] ["ztics" (gnuplot-insert "set ztics ") t] ["mztics" (gnuplot-insert "set mztics ") t] ["zdtics" (gnuplot-insert "set zdtics ") t] ["zmtics" (gnuplot-insert "set zmtics ") t]))) nil [48750 49665])
            ("gnuplot-insertions-parametric-plots" variable (:default-value (quote ("parametric plots" ["parametric" (gnuplot-insert "set parametric") t] ["isosamples" (gnuplot-insert "set isosamples ") t] ["dummy" (gnuplot-insert "set dummy ") t] ["trange" (gnuplot-insert "set trange [:]") t] ["urange" (gnuplot-insert "set urange [:]") t] ["vrange" (gnuplot-insert "set vrange [:]") t]))) nil [49668 50569])
            ("gnuplot-insertions-polar-plots" variable (:default-value (quote ("polar plots" ["polar" (gnuplot-insert "set polar") t] ["angles" (gnuplot-insert "set angles ") t] ["rrange" (gnuplot-insert "set rrange [:]") t]))) nil [50572 51275])
            ("gnuplot-insertions-surface-plots" variable (:default-value (quote ("surface plots" ["clabel" (gnuplot-insert "set clabel ") t] ["cntrparam" (gnuplot-insert "set cntrparam ") t] ["contour" (gnuplot-insert "set contour") t] ["dgrid3d" (gnuplot-insert "set dgrid3d ") t] ["hidden3d" (gnuplot-insert "set hidden3d ") t] ["mapping" (gnuplot-insert "set mapping ") t] ["surface" (gnuplot-insert "set surface ") t] ["view" (gnuplot-insert "set view ") t]))) nil [51278 52274])
            ("gnuplot-insertions-bottom" variable nil nil [52278 52451])
            ("setq" code nil nil [52452 52834])
            ("gnuplot-setup-menubar" function nil nil [53629 54969])
            ("gnuplot-mark-active" function nil nil [55174 55353])
            ("gnuplot-toolbar" customgroup (:user-visible-flag t) nil [55381 55486])
            ("gnuplot-toolbar-display-flag" variable
               (:user-visible-flag t
                :default-value gnuplot-xemacs-p)
                nil [55488 55647])
            ("gnuplot-toolbar-use-toolbar" variable
               (:user-visible-flag t
                :default-value (if (featurep (quote toolbar)) (quote left-toolbar) nil))
                nil [55649 56516])
            ("gnuplot-toolbar-location" variable nil nil [56518 56554])
            ("gnuplot-toolbar-setup-toolbar" function (:arguments ("toolbar")) nil [56556 57824])
            ("gnuplot-line-xpm" variable (:default-value (if (featurep (quote xpm)) (toolbar-make-button-list "/* XPM */
static char *line[] = {
/* width height num_colors chars_per_pixel */
\"    40    40        5           1\",
/* colors */
\". c #000000\",
\"a c #bebebe s backgroundToolBarColor\",
\"b c #2f4f4f\",
\"c c #ff6347\",
\"d c #0000ff\",
/* pixels */
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaa..a..aaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaa..aaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaa..a..a....aaa...aaaaaaaaaaaa\",
\"aaaaaaaaaaaa..a..a..a..a..a..aaaaaaaaaaa\",
\"aaaaaaaaaaaa..a..a.aa..a.....aaaaaaaaaaa\",
\"aaaaaaaaaaa..a..a..a..a..aaaaaaaaaaaaaaa\",
\"aaaaaaaaaaa..a..a..a..a..a..aaaaaaaaaaaa\",
\"aaaaaaaaaaa..a..a..a..aa...aaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaa..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaadaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaadaaaaaaaaa\",
\"aaaaaaa..aaaaaaaaaaaaaaaaaaaadaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaadaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaacaaaadaadaaaaaaaaaaaa\",
\"aaaaaaaa.caaadaaaccaccadaddaaaaaccaaaaaa\",
\"aaaaaaa..accdaddcaaaaaccaaaaaaccaaaaaaaa\",
\"aaaaaaaa.aadcaccdaaaadaaccaaccaaaaaaaaaa\",
\"aaaaaaaa.adaacaaaddadaaaaaccaaaaaaaaaaaa\",
\"aaaaaaaa.daaaaaaaaadaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaa..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaa............................aaaaaa\",
\"aaaaaaaa.aaaa.aaaa.aaaa.aaaa.aaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"};") "XPM format image used for the \"plot line\" button")) nil [57826 60067])
            ("gnuplot-region-xpm" variable (:default-value (if (featurep (quote xpm)) (toolbar-make-button-list "/* XPM */
static char *region[] = {
/* width height num_colors chars_per_pixel */
\"    40    40        5           1\",
/* colors */
\". c #000000\",
\"a c #bebebe s backgroundToolBarColor\",
\"b c #2f4f4f\",
\"c c #ff6347\",
\"d c #0000ff\",
/* pixels */
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaa..aaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaa.a..a...aaa....a..aa...aa....aaaaa\",
\"aaaaaa...a..a..a..a..a..a..a..a..a..aaaa\",
\"aaaaaa..aa.....a.aa..a....aa..a.aa..aaaa\",
\"aaaaa..a...aaaa..aa.a..a..aa....a..aaaaa\",
\"aaaaa..a...a..a..a..a..a..a..a..a..aaaaa\",
\"aaaa..aaaa...aaa....a..aa...aa..a..aaaaa\",
\"aaaaaaaaaaaaaaaaa..aaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaa...aaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaadaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaadaaaaaaaaa\",
\"aaaaaaa..aaaaaaaaaaaaaaaaaaaadaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaadaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaacaaaadaadaaaaaaaaaaaa\",
\"aaaaaaaa.caaadaaaccaccadaddaaaaaccaaaaaa\",
\"aaaaaaa..accdaddcaaaaaccaaaaaaccaaaaaaaa\",
\"aaaaaaaa.aadcaccdaaaadaaccaaccaaaaaaaaaa\",
\"aaaaaaaa.adaacaaaddadaaaaaccaaaaaaaaaaaa\",
\"aaaaaaaa.daaaaaaaaadaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaa..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaa............................aaaaaa\",
\"aaaaaaaa.aaaa.aaaa.aaaa.aaaa.aaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"};") "XPM format image used for the \"plot region\" button")) nil [60069 62316])
            ("gnuplot-buffer-xpm" variable (:default-value (if (featurep (quote xpm)) (toolbar-make-button-list "/* XPM */
static char *buffer[] = {
/* width height num_colors chars_per_pixel */
\"    40    40        5           1\",
/* colors */
\". c #000000\",
\"a c #bebebe s backgroundToolBarColor\",
\"b c #2f4f4f\",
\"c c #ff6347\",
\"d c #0000ff\",
/* pixels */
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa..aaaaaaaaaa......aaaaaaaaaaaaaa\",
\"aaaaaaaa..aaaaaaaaa..a..aaaaaaaaaaaaaaaa\",
\"aaaaaaa....aa..a.........a...aa.a.aaaaaa\",
\"aaaaaaa..a..a..a..a..a..a..a..a...aaaaaa\",
\"aaaaaaa.aa....aa..a..a..a.....a..aaaaaaa\",
\"aaaaaa...a.a..a..a..a..a..aaaa..aaaaaaaa\",
\"aaaaaa.....a..a..a..a..a..a..a..aaaaaaaa\",
\"aaaaaa....aaa..a.a..a..aa...aa..aaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaadaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaadaaaaaaaaa\",
\"aaaaaaa..aaaaaaaaaaaaaaaaaaaadaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaadaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaacaaaadaadaaaaaaaaaaaa\",
\"aaaaaaaa.caaadaaaccaccadaddaaaaaccaaaaaa\",
\"aaaaaaa..accdaddcaaaaaccaaaaaaccaaaaaaaa\",
\"aaaaaaaa.aadcaccdaaaadaaccaaccaaaaaaaaaa\",
\"aaaaaaaa.adaacaaaddadaaaaaccaaaaaaaaaaaa\",
\"aaaaaaaa.daaaaaaaaadaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaa..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaa............................aaaaaa\",
\"aaaaaaaa.aaaa.aaaa.aaaa.aaaa.aaaaaaaaaaa\",
\"aaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"};") "XPM format image used for the \"plot buffer\" button")) nil [62318 64565])
            ("gnuplot-doc-xpm" variable (:default-value (if (featurep (quote xpm)) (toolbar-make-button-list "/* XPM */
static char *book_index[] = {
/* width height num_colors chars_per_pixel */
\"    40    40        6            1\",
/* colors */
\". c #000000\",
\"a c #bebebe s backgroundToolBarColor\",
\"b c #2f4f4f\",
\"c c #ff0000\",
\"d c #ffffff\",
\"e c #708090\",
/* pixels */
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaa.........bbeaaaebb..........aaaaaa\",
\"aaaaaa.ddddddddaaebebeaaddddddddd.aaaaaa\",
\"aaaa...dab.bddeebadbdaeebedeeeeed...aaaa\",
\"aaaa.c.dbaddddebeedbdeebeedebebed.c.aaaa\",
\"aaaa.c.d.de.edeebeabdbbeeddebbbed.c.aaaa\",
\"aaaa.c.dbad.ddebeadbdeeebeddeeeed.c.aaaa\",
\"aaaa.c.dab..ddeeeedbdebeeedebebed.c.aaaa\",
\"aaaa.c.dddddddeebeabdebebedeebedd.c.aaaa\",
\"aaaa.c.debebedebeedbdbebeedbeeeeb.c.aaaa\",
\"aaaa.c.debeeedeeeaabdaaddddebedbb.c.aaaa\",
\"aaaa.c.deebeddbebedbdbaa.adeeedeb.c.aaaa\",
\"aaaa.c.ddeebedeeebaba.dd.dddeeedd.c.aaaa\",
\"aaaa.c.debeebdbeeedbd....ddeebeed.c.aaaa\",
\"aaaa.c.deebeedeebadbd.dd.ddeeeedd.c.aaaa\",
\"aaaa.c.dbbebddeeeeabd.aa.adebebbd.c.aaaa\",
\"aaaa.c.deeeeedeebeabaedddddeeeedd.c.aaaa\",
\"aaaa.c.dbebbbdebeadbdaeeeedebeeed.c.aaaa\",
\"aaaa.c.deeebddeeebdbdeebeedeebeed.c.aaaa\",
\"aaaa.c.debeeedebeeabdebebedebeebd.c.aaaa\",
\"aaaa.c.deebbedeeeedbdeeeeddeeeeed.c.aaaa\",
\"aaaa.c.dddddddddaadbdaddddddddddd.c.aaaa\",
\"aaaa.c..........beabaeb...........c.aaaa\",
\"aaaa.c.bbbbbbbbbb.bbbbbbbbbbbbbbb.c.aaaa\",
\"aaaa.c.bbbbbbbbbb..e.bbbbbbbbbbbb.c.aaaa\",
\"aaaa.c.bbbbbbbbbb.b.bbbbbbbbbbbbb.c.aaaa\",
\"aaaa.c............e.e.............c.aaaa\",
\"aaaa.cccccccccccc.a.a.ccccccccccccc.aaaa\",
\"aaaa................................aaaa\",
\"aaaaaaaaaaaaaaaaaa...aaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"};") "XPM format image used for the \"document\" button")) nil [64567 66830])
            ("gnuplot-help-xpm" variable (:default-value (if (featurep (quote xpm)) (toolbar-make-button-list "/* XPM */
static char *help_btn[] = {
/* width height num_colors chars_per_pixel */
\"    40    40        3            1\",
/* colors */
\"a c #bebebe s backgroundToolBarColor\",
\"b c #000000\",
\"c c #ff0000\",
/* pixels */
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabbbbbbbbaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaabbbccccccccbbbaaaaaaaaaaaaa\",
\"aaaaaaaaaaabbccccccccccccccbbaaaaaaaaaaa\",
\"aaaaaaaaaabccccccccccccccccccbaaaaaaaaaa\",
\"aaaaaaaaabccccccccccccccccccccbaaaaaaaaa\",
\"aaaaaaaabcccccccbbbbbbbbcccccccbaaaaaaaa\",
\"aaaaaaaabccccbbbaaaaaaaabbbccccbaaaaaaaa\",
\"aaaaaaabccccbaaaaaaaaaaaaaabccccbaaaaaaa\",
\"aaaaaaabcccbaaaaaaaaaaaaaaaabcccbaaaaaaa\",
\"aaaaaaabcccbaaaaaaaaaaaaaaaabcccbaaaaaaa\",
\"aaaaaaabcccbaaaaaaaaaaaaaaaabcccbaaaaaaa\",
\"aaaaaaabbbbbaaaaaaaaaaaaaaabccccbaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaabbbccccbaaaaaaaa\",
\"aaaaaaaaaaaaaaaabbbbbbbbcccccccbaaaaaaaa\",
\"aaaaaaaaaaaaaaaabcccccccccccccbaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccccccccccbaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccccccccbbaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccbbbbbbaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabbbbbbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabbbbbbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabccccbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaabbbbbbaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",
\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"};") "XPM format image used for the \"help\" button")) nil [66832 69039])
            ("gnuplot-toolbar" variable (:default-value (quote ([gnuplot-line-xpm gnuplot-line-fn t "Plot the line under point"] [gnuplot-region-xpm gnuplot-region-fn t "Plot the selected region"] [gnuplot-buffer-xpm gnuplot-buffer-fn t "Plot the entire buffer"] [:style 3d :size 8] [gnuplot-help-xpm gnuplot-help-fn t "Look at the gnuplot process buffer"] [gnuplot-doc-xpm gnuplot-doc-fn t "Look at the gnuplot document"]))) nil [69041 69536])
            ("fset" code nil nil [69538 69594])
            ("fset" code nil nil [69595 69652])
            ("fset" code nil nil [69653 69710])
            ("fset" code nil nil [69711 69765])
            ("fset" code nil nil [69766 69819])
            ("gnuplot-all-buttons-defined" variable (:default-value (and (listp gnuplot-line-xpm) (listp gnuplot-region-xpm) (listp gnuplot-buffer-xpm) (listp gnuplot-doc-xpm) (listp gnuplot-help-xpm))) nil [69821 70009])
            ("gnuplot-make-toolbar-function" function nil nil [70012 70362])
            ("gnuplot-mode-syntax-table" variable (:default-value (let ((table (make-syntax-table))) (modify-syntax-entry 42 "." table) (modify-syntax-entry 43 "." table) (modify-syntax-entry 45 "." table) (modify-syntax-entry 47 "." table) (modify-syntax-entry 37 "." table) (modify-syntax-entry 61 "." table) (modify-syntax-entry 58 "." table) (modify-syntax-entry 38 "." table) (modify-syntax-entry 94 "." table) (modify-syntax-entry 124 "." table) (modify-syntax-entry 38 "." table) (modify-syntax-entry 63 "." table) (modify-syntax-entry 126 "." table) (modify-syntax-entry 95 "w" table) (if (not (boundp (quote syntax-propertize-function))) (progn (modify-syntax-entry 39 "\"" table) (modify-syntax-entry 35 "<" table) (modify-syntax-entry 10 ">" table) (modify-syntax-entry 92 "\\" table)) (modify-syntax-entry 34 "." table) (modify-syntax-entry 39 "." table) (modify-syntax-entry 96 "." table) (modify-syntax-entry 92 "." table)) table)) nil [70477 72242])
            ("gnuplot-make-regexp" function (:arguments ("list")) nil [72481 72547])
            ("gnuplot-keywords-builtin-functions" variable (:default-value (quote ("abs" "acosh" "acos" "arg" "asinh" "asin" "atan" "atanh" "atan2" "besj1" "besj0" "besy1" "besy0" "ceil" "column" "cosh" "cos" "erfc" "erf" "exp" "floor" "gamma" "ibeta" "igamma" "imag" "int" "inverf" "invnorm" "lgamma" "log" "log10" "norm" "rand" "real" "sgn" "sinh" "sin" "sqrt" "tanh" "tan" "tm_hour" "tm_mday" "tm_min" "tm_mon" "tm_sec" "tm_wday" "tm_yday" "tm_year" "valid" "EllipticPi" "EllipticE" "EllipticK" "words" "word" "value" "timecolumn" "substr" "strstrt" "strptime" "strlen" "stringcolumn" "strftime" "sprintf" "lambertw" "gprintf" "exists" "defined" "columnhead"))) nil [72603 73372])
            ("gnuplot-keywords-plotting" variable (:default-value (quote ("axes" "every" "index" "lw" "lt" "ls" "linestyle" "linetype" "linewidth" "notitle" "pt" "ps" "pointsize" "pointtype" "smooth" "thru" "title" "using" "with" "noautoscale" "volatile" "matrix" "nonuniform" "binary" "fillstyle" "linecolor" "pointinterval" "nosurface" "nocontours" "nohidden3d"))) nil [73374 73930])
            ("gnuplot-keywords-plotting-styles" variable (:default-value (quote ("boxerrorbars" "boxes" "boxxyerrorbars" "candlesticks" "dots" "errorbars" "financebars" "fsteps" "histeps" "impulses" "lines" "linespoints" "points" "steps" "vector" "xerrorbars" "xyerrorbars" "yerrorbars" "vectors" "filledcurves" "labels" "rgbalpha" "rgbimage" "image" "circles" "pm3d" "histograms" "xyerrorlines" "xerrorlines" "errorlines" "yerrorlines"))) nil [73932 74461])
            ("gnuplot-keywords-misc" variable (:default-value (quote ("bind" "cd" "clear" "exit" "fit" "help" "history" "load" "pause" "print" "pwd" "quit" "replot" "save" "set" "show" "unset" "if" "else" "do" "update" "undefine" "test" "system" "raise" "lower" "eval" "shell" "reset" "reread" "refresh" "call"))) nil [74463 74863])
            ("gnuplot-keywords-negatable-options" variable (:default-value (quote ("arrow" "autoscale" "border" "clabel" "clip" "contour" "dgrid3d" "grid" "hidden3d" "historysize" "key" "label" "linestyle" "logscale" "mouse" "multiplot" "mx2tics" "mxtics" "my2tics" "mytics" "mztics" "offsets" "polar" "surface" "timestamp" "title" "x2dtics" "x2mtics" "x2tics" "x2zeroaxis" "xdtics" "xmtics" "xtics" "xzeroaxis" "y2dtics" "y2mtics" "y2tics" "y2zeroaxis" "ydtics" "ymtics" "ytics" "yzeroaxis" "zdtics" "zmtics" "ztics" "zzeroaxis"))) nil [74865 75464])
            ("gnuplot-negatable-options-regexp" variable (:default-value (gnuplot-make-regexp gnuplot-keywords-negatable-options)) nil [75466 75566])
            ("gnuplot-font-lock-keywords" variable nil nil [75652 75691])
            ("gnuplot-font-lock-syntactic-keywords" variable nil nil [75692 75741])
            ("gnuplot-font-lock-defaults" variable nil nil [75742 75781])
            ("when" code nil nil [75783 77336])
            ("defalias" code nil nil [78369 79092])
            ("gnuplot-syntax-propertize-extend-region" function (:arguments ("start" "end")) nil [79094 79786])
            ("gnuplot-in-string" function (:arguments ("where")) nil [79854 80150])
            ("gnuplot-in-comment" function (:arguments ("where")) nil [80152 80450])
            ("gnuplot-in-string-or-comment" function (:arguments ("where")) nil [80452 80799])
            ("gnuplot-split-string" function (:arguments ("string")) nil [81104 81489])
            ("gnuplot-send-string-to-gnuplot" function (:arguments ("string" "text")) nil [81799 83556])
            ("gnuplot-display-and-recenter-gnuplot-buffer" function nil nil [83558 83901])
            ("gnuplot-send-region-to-gnuplot" function
               (:user-visible-flag t
                :arguments ("begin" "end" "text"))
                nil [83903 84750])
            ("gnuplot-send-line-to-gnuplot" function (:user-visible-flag t) nil [84752 85675])
            ("gnuplot-send-line-and-forward" function
               (:user-visible-flag t
                :arguments ("num"))
                nil [85864 86337])
            ("gnuplot-send-line-and-newline" function (:user-visible-flag t) nil [86339 86523])
            ("gnuplot-forward-script-line" function
               (:user-visible-flag t
                :arguments ("num"))
                nil [86525 86905])
            ("gnuplot-send-buffer-to-gnuplot" function (:user-visible-flag t) nil [86907 87240])
            ("gnuplot-send-file-to-gnuplot" function (:user-visible-flag t) nil [87242 87715])
            ("gnuplot-plot-from-comint" function (:user-visible-flag t) nil [87738 88556])
            ("gnuplot-save-and-plot-from-comint" function (:user-visible-flag t) nil [88558 89325])
            ("gnuplot-pop-to-recent-buffer" function (:user-visible-flag t) nil [89327 89548])
            ("gnuplot-trim-gnuplot-buffer" function nil nil [89550 90084])
            ("add-hook" code nil nil [90085 90157])
            ("gnuplot-comint-menu" variable (:default-value (\` ("Gnuplot" ["Plot most recent gnuplot buffer" gnuplot-plot-from-comint (buffer-live-p gnuplot-comint-recent-buffer)] ["Save and plot most recent gnuplot buffer" gnuplot-save-and-plot-from-comint (buffer-live-p gnuplot-comint-recent-buffer)] "---" (\, gnuplot-display-options-menu) ["Contextual completion and help" gnuplot-context-sensitive-mode :style toggle :selected gnuplot-context-sensitive-mode] ["Echo area help (eldoc-mode)" eldoc-mode :active gnuplot-context-sensitive-mode :style toggle :selected eldoc-mode] "---" ["Insert filename at point" gnuplot-insert-filename t] ["Negate set option" gnuplot-negate-option t] ["Keyword help" gnuplot-info-lookup-symbol (or gnuplot-keywords gnuplot-keywords-pending)] ["Quick help for thing at point" gnuplot-help-function gnuplot-context-sensitive-mode] ["Info documentation on thing at point" gnuplot-info-at-point gnuplot-context-sensitive-mode] ["Switch to recent gnuplot script buffer" gnuplot-pop-to-recent-buffer (buffer-live-p gnuplot-comint-recent-buffer)] "---" ["Customize gnuplot" gnuplot-customize t] ["Submit bug report" gnuplot-bug-report t] ["Show gnuplot-mode version" gnuplot-show-version t] ["Show gnuplot version" gnuplot-show-gnuplot-version t] "---" ["Kill gnuplot" gnuplot-kill-gnuplot-buffer t]))) nil [90247 91727])
            ("define-derived-mode" code nil nil [91792 93384])
            ("define-key" code nil nil [93426 93498])
            ("define-key" code nil nil [93499 93580])
            ("define-key" code nil nil [93581 93654])
            ("let" code nil nil [93655 93973])
            ("define-key" code nil nil [93974 94050])
            ("define-key" code nil nil [94051 94120])
            ("define-key" code nil nil [94121 94193])
            ("define-key" code nil nil [94194 94264])
            ("define-key" code nil nil [94265 94342])
            ("define-key" code nil nil [94343 94410])
            ("define-key" code nil nil [94411 94477])
            ("define-key" code nil nil [94478 94555])
            ("define-key" code nil nil [94556 94631])
            ("gnuplot-comint-mode-menu" variable nil nil [94665 94738])
            ("gnuplot-make-gnuplot-buffer" function nil nil [94780 95528])
            ("gnuplot-fetch-version-number" function nil nil [95531 97097])
            ("gnuplot-setup-menu-and-toolbar" function nil nil [97099 97671])
            ("gnuplot-prompt-regexp" variable (:default-value (regexp-opt (quote ("gnuplot> " "multiplot> ")))) nil [97673 97793])
            ("gnuplot-protect-prompt-fn" function (:arguments ("string")) nil [97795 98485])
            ("gnuplot-close-down" function nil nil [98487 98738])
            ("gnuplot-delchar-or-maybe-eof" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [98740 99006])
            ("gnuplot-kill-gnuplot-buffer" function (:user-visible-flag t) nil [99008 99472])
            ("gnuplot-show-gnuplot-buffer" function (:user-visible-flag t) nil [99475 100276])
            ("gnuplot-inline-image-filename" variable nil nil [100336 100423])
            ("gnuplot-image-buffer-name" variable (:default-value "*gnuplot output*") nil [100425 100478])
            ("gnuplot-display-images-p" function nil nil [100480 100647])
            ("gnuplot-external-display-mode" function nil nil [100649 100765])
            ("gnuplot-inline-display-mode" function nil nil [100767 100885])
            ("gnuplot-dedicated-display-mode" function nil nil [100887 101011])
            ("gnuplot-set-image-format" function (:arguments ("format")) nil [101013 101266])
            ("gnuplot-setup-comint-for-image-mode" function nil nil [101268 101960])
            ("gnuplot-inline-image-set-output" function nil nil [101962 102224])
            ("gnuplot-inhibit-filter" variable nil nil [102226 102261])
            ("gnuplot-insert-inline-image-output" function (:arguments ("string")) nil [102263 104138])
            ("gnuplot-hidden-output-buffer" variable (:default-value " *gnuplot output*") nil [104215 104272])
            ("gnuplot-send-hiding-output" function (:arguments ("string")) nil [104276 104661])
            ("gnuplot-discard-output" function (:arguments ("string")) nil [104663 105181])
            ("gnuplot-insert-filename" function (:user-visible-flag t) nil [105260 105693])
            ("gnuplot-indent-line" function (:user-visible-flag t) nil [105748 107344])
            ("gnuplot-electric-insert" function (:arguments ("arg")) nil [107441 107692])
            ("gnuplot-continuation-line-p" function nil nil [107819 108070])
            ("gnuplot-beginning-of-continuation" function nil nil [108117 108390])
            ("gnuplot-end-of-continuation" function nil nil [108435 108780])
            ("gnuplot-point-at-beginning-of-continuation" function (:arguments ("pos")) nil [108878 109185])
            ("gnuplot-point-at-end-of-continuation" function (:arguments ("pos")) nil [109187 109480])
            ("gnuplot-beginning-of-defun" function (:arguments ("arg")) nil [109567 110259])
            ("gnuplot-beginning-of-command" function nil nil [110356 110661])
            ("gnuplot-end-of-command" function nil nil [110663 110951])
            ("gnuplot-point-at-beginning-of-command" function nil nil [110953 111125])
            ("gnuplot-point-at-end-of-command" function nil nil [111127 111281])
            ("gnuplot-negate-option" function (:user-visible-flag t) nil [111283 112415])
            ("gnuplot-customize" function (:user-visible-flag t) nil [113642 113837])
            ("gnuplot-setup-info-look" function (:user-visible-flag t) nil [114011 116868])
            ("gnuplot-set-keywords-list" function nil nil [116871 117369])
            ("gnuplot-completion-at-point-function" variable (:default-value (function gnuplot-completion-at-point-info-look)) nil [117736 117884])
            ("gnuplot-completion-at-point" function nil nil [117886 117973])
            ("gnuplot-eldoc-hash" variable nil nil [117975 118119])
            ("define-minor-mode" code nil nil [118172 121451])
            ("gnuplot-completion-at-point-info-look" function nil nil [121496 122299])
            ("gnuplot-comint-complete" function nil nil [122302 122799])
            ("gnuplot-info-lookup-symbol" function
               (:user-visible-flag t
                :arguments ("symbol" "mode"))
                nil [122803 123622])
            ("gnuplot--adjust-info-display" function nil nil [123624 124958])
            ("gnuplot-insert" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [124960 126134])
            ("gnuplot-toggle-info-display" function nil nil [126136 126426])
            ("gnuplot-bug-report" function (:user-visible-flag t) nil [126516 129547])
            ("gnuplot-mode" function (:user-visible-flag t) nil [129635 133740])
            ("gnuplot-make-buffer" function (:user-visible-flag t) nil [133757 134323])
            ("run-gnuplot" function (:user-visible-flag t) nil [134340 134480])
            ("gnuplot-show-version" function (:user-visible-flag t) nil [134482 134646])
            ("gnuplot-show-gnuplot-version" function (:user-visible-flag t) nil [134648 134880])
            ("gnuplot" package nil nil [135069 135087])
            ("run-hooks" code nil nil [135088 135118]))          
      :file "gnuplot.el"
      :pointmax 135230
      :fsize 135229
      :lastmodtime '(22659 32880 0 0)
      :unmatched-syntax '((close-paren 17655 . 17656) (symbol 17574 . 17590) (open-paren 17573 . 17574) (close-paren 17570 . 17571) (symbol 17527 . 17543) (open-paren 17526 . 17527) (close-paren 17328 . 17329) (symbol 17297 . 17314) (open-paren 17296 . 17297))))
  :file "!Users!bing!.emacs.d!elpa!gnuplot-20141231.1337!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
