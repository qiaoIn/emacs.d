;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1221 1234])
            ("time-date" include nil nil [1237 1257])
            ("gnus-completing-read-function" variable (:default-value (quote gnus-emacs-completing-read)) nil [1259 1928])
            ("gnus-completion-styles" variable (:default-value (if (and (boundp (quote completion-styles-alist)) (boundp (quote completion-styles))) (append (when (and (assq (quote substring) completion-styles-alist) (not (memq (quote substring) completion-styles))) (list (quote substring))) completion-styles) nil)) nil [1930 2381])
            ("nnmail-pathname-coding-system" variable nil nil [2438 2476])
            ("nnmail-active-file-coding-system" variable nil nil [2477 2518])
            ("gnus-emphasize-whitespace-regexp" variable nil nil [2572 2613])
            ("gnus-original-article-buffer" variable nil nil [2614 2651])
            ("gnus-user-agent" variable nil nil [2652 2676])
            ("gnus-get-buffer-window" function (:prototype-flag t) nil [2678 2723])
            ("nnheader-narrow-to-headers" function (:prototype-flag t) nil [2724 2773])
            ("nnheader-replace-chars-in-string" function (:prototype-flag t) nil [2774 2829])
            ("mail-header-remove-comments" function (:prototype-flag t) nil [2830 2882])
            ("cond" code nil nil [2904 3673])
            ("gnus-boundp" function (:arguments ("variable")) nil [3676 3816])
            ("gnus-eval-in-buffer-window" function (:arguments ("buffer" "forms")) nil [3818 4363])
            ("put" code nil nil [4365 4422])
            ("put" code nil nil [4423 4487])
            ("gnus-intern-safe" function (:arguments ("string" "hashtable")) nil [4489 4697])
            ("gnus-goto-char" function (:arguments ("point")) nil [4699 4764])
            ("gnus-buffer-exists-p" function (:arguments ("buffer")) nil [4766 4926])
            ("defalias" code nil nil [5163 5314])
            ("gnus-delete-first" function (:arguments ("elt" "list")) nil [5316 5651])
            ("gnus-delete-line" function (:arguments ("n")) nil [5704 5824])
            ("gnus-extract-address-components" function (:arguments ("from")) nil [5826 7630])
            ("declare-function" code nil nil [7632 7707])
            ("gnus-fetch-field" function (:arguments ("field")) nil [7709 7969])
            ("gnus-fetch-original-field" function (:arguments ("field")) nil [7971 8160])
            ("gnus-goto-colon" function nil nil [8163 8364])
            ("declare-function" code nil nil [8366 8441])
            ("declare-function" code nil nil [8442 8513])
            ("declare-function" code nil nil [8514 8584])
            ("declare-function" code nil nil [8641 8740])
            ("gnus-decode-newsgroups" function (:arguments ("newsgroups" "group" "method")) nil [8742 9067])
            ("gnus-remove-text-with-property" function (:arguments ("prop")) nil [9069 9528])
            ("gnus-find-text-property-region" function (:arguments ("start" "end" "prop")) nil [9530 10156])
            ("gnus-newsgroup-directory-form" function (:arguments ("newsgroup")) nil [10158 10546])
            ("gnus-newsgroup-savable-name" function (:arguments ("group")) nil [10548 10727])
            ("gnus-string>" function (:arguments ("s1" "s2")) nil [10729 10806])
            ("gnus-string<" function (:arguments ("s1" "s2")) nil [10808 11211])
            ("gnus-file-newer-than" function (:arguments ("file" "date")) nil [11234 11430])
            ("defalias" code nil nil [11559 11676])
            ("gnus-local-set-keys" function (:arguments ("plist")) nil [11698 11843])
            ("gnus-define-keys" function (:arguments ("keymap" "plist")) nil [11845 12239])
            ("gnus-define-keys-safe" function (:arguments ("keymap" "plist")) nil [12241 12432])
            ("put" code nil nil [12434 12481])
            ("put" code nil nil [12482 12534])
            ("put" code nil nil [12535 12585])
            ("gnus-define-keymap" function (:arguments ("keymap" "plist")) nil [12587 12724])
            ("put" code nil nil [12726 12775])
            ("gnus-define-keys-1" function (:arguments ("keymap" "plist" "safe")) nil [12777 13421])
            ("gnus-y-or-n-p" function (:arguments ("prompt")) nil [13423 13504])
            ("gnus-yes-or-no-p" function (:arguments ("prompt")) nil [13505 13592])
            ("gnus-seconds-today" function nil nil [13824 14001])
            ("gnus-seconds-month" function nil nil [14003 14231])
            ("gnus-seconds-year" function nil nil [14233 14541])
            ("gnus-date-get-time" function (:arguments ("date")) nil [14543 14982])
            ("gnus-dd-mmm" function (:arguments ("messy-date")) nil [14984 15183])
            ("gnus-time-iso8601" function (:arguments ("time")) nil [15185 15319])
            ("gnus-date-iso8601" function (:arguments ("date")) nil [15321 15483])
            ("gnus-mode-string-quote" function (:arguments ("string")) nil [15485 15600])
            ("gnus-make-hashtable" function (:arguments ("hashsize")) nil [15714 15841])
            ("gnus-create-hash-size" function (:arguments ("min")) nil [16256 16358])
            ("gnus-verbose" variable
               (:user-visible-flag t
                :default-value 6)
                nil [16360 16717])
            ("gnus-add-timestamp-to-message" variable nil nil [16719 17370])
            ("gnus-message-with-timestamp-1" function (:arguments ("format-string" "args")) nil [17393 19199])
            ("gnus-action-message-log" variable nil nil [19202 19238])
            ("gnus-message-with-timestamp" function (:arguments ("format-string" "args")) nil [19240 19516])
            ("gnus-message" function (:arguments ("level" "args")) nil [19518 20294])
            ("gnus-final-warning" function nil nil [20296 20537])
            ("gnus-error" function (:arguments ("level" "args")) nil [20539 20897])
            ("gnus-split-references" function (:arguments ("references")) nil [20899 21242])
            ("gnus-extract-references" function (:arguments ("references")) nil [21244 21566])
            ("gnus-parent-id" function (:arguments ("references" "n")) nil [21568 22062])
            ("gnus-buffer-live-p" function (:arguments ("buffer")) nil [22064 22193])
            ("gnus-horizontal-recenter" function nil nil [22195 23079])
            ("gnus-read-event-char" function (:arguments ("prompt")) nil [23081 23311])
            ("gnus-copy-file" function
               (:user-visible-flag t
                :arguments ("file" "to"))
                nil [23313 23726])
            ("gnus-work-buffer" variable (:default-value " *gnus work*") nil [23728 23768])
            ("declare-function" code nil nil [23770 23825])
            ("declare-function" code nil nil [23855 23903])
            ("gnus-set-work-buffer" function nil nil [23905 24195])
            ("gnus-group-real-name" function (:arguments ("group")) nil [24197 24397])
            ("gnus-group-server" function (:arguments ("group")) nil [24399 24829])
            ("gnus-make-sort-function" function (:arguments ("funs")) nil [24831 25279])
            ("gnus-make-sort-function-1" function (:arguments ("funs")) nil [25281 25886])
            ("gnus-turn-off-edit-menu" function (:arguments ("type")) nil [25888 26077])
            ("gnus-bind-print-variables" function (:arguments ("forms")) nil [26079 26717])
            ("gnus-prin1" function (:arguments ("form")) nil [26719 26982])
            ("gnus-prin1-to-string" function (:arguments ("form")) nil [26984 27228])
            ("gnus-pp" function (:arguments ("form" "stream")) nil [27230 27513])
            ("gnus-pp-to-string" function (:arguments ("form")) nil [27515 27760])
            ("gnus-make-directory" function (:arguments ("directory")) nil [27762 28055])
            ("gnus-write-buffer" function (:arguments ("file")) nil [28057 28402])
            ("gnus-delete-file" function (:arguments ("file")) nil [28404 28518])
            ("gnus-delete-duplicates" function (:arguments ("list")) nil [28520 28744])
            ("gnus-delete-directory" function (:arguments ("directory")) nil [28746 29286])
            ("gnus-strip-whitespace" function (:arguments ("string")) nil [29288 29474])
            ("declare-function" code nil nil [29476 29586])
            ("gnus-put-text-property-excluding-newlines" function (:arguments ("beg" "end" "prop" "val")) nil [29588 30036])
            ("gnus-put-overlay-excluding-newlines" function (:arguments ("beg" "end" "prop" "val")) nil [30038 30488])
            ("gnus-put-text-property-excluding-characters-with-faces" function (:arguments ("beg" "end" "prop" "val")) nil [30490 31089])
            ("gnus-get-text-property-excluding-characters-with-faces" function (:arguments ("pos" "prop")) nil [31091 31494])
            ("gnus-faces-at" function (:arguments ("position")) nil [31496 31881])
            ("if" code nil nil [31883 32286])
            ("defalias" code nil nil [32489 32621])
            ("defalias" code nil nil [32623 32771])
            ("gnus-atomic-be-safe" variable (:default-value t) nil [33103 33206])
            ("gnus-atomic-progn" function (:arguments ("forms")) nil [33208 33769])
            ("put" code nil nil [33771 33819])
            ("gnus-atomic-progn-assign" function (:arguments ("protect" "forms")) nil [33821 35088])
            ("put" code nil nil [35090 35145])
            ("gnus-atomic-setq" function (:arguments ("pairs")) nil [35211 35747])
            ("rmail-update-summary" function (:prototype-flag t) nil [36206 36249])
            ("if" code nil nil [35870 36203])
            ("mm-text-coding-system" variable nil nil [36252 36282])
            ("declare-function" code nil nil [36284 36395])
            ("declare-function" code nil nil [36396 36450])
            ("declare-function" code nil nil [36451 36513])
            ("declare-function" code nil nil [36514 36583])
            ("declare-function" code nil nil [36584 36634])
            ("declare-function" code nil nil [36635 36705])
            ("declare-function" code nil nil [36749 36802])
            ("declare-function" code nil nil [36803 36862])
            ("declare-function" code nil nil [36863 36920])
            ("gnus-output-to-rmail" function (:arguments ("filename" "ask")) nil [36922 40863])
            ("gnus-output-to-mail" function (:arguments ("filename" "ask")) nil [40865 42777])
            ("gnus-convert-article-to-rmail" function nil nil [42779 43200])
            ("gnus-map-function" function (:arguments ("funs" "arg")) nil [43202 43413])
            ("gnus-run-hooks" function (:arguments ("funcs")) nil [43415 43568])
            ("gnus-run-hook-with-args" function (:arguments ("hook" "args")) nil [43570 43758])
            ("gnus-run-mode-hooks" function (:arguments ("funcs")) nil [43760 44051])
            ("gnus-group-buffer" variable nil nil [44066 44092])
            ("gnus-alive-p" function nil nil [44115 44334])
            ("gnus-remove-if" function (:arguments ("predicate" "sequence" "hash-table-p")) nil [44336 44979])
            ("gnus-remove-if-not" function (:arguments ("predicate" "sequence" "hash-table-p")) nil [44981 45628])
            ("if" code nil nil [45630 45941])
            ("gnus-grep-in-list" function (:arguments ("word" "list")) nil [45943 46167])
            ("gnus-alist-pull" function (:arguments ("key" "alist" "assoc-p")) nil [46169 46419])
            ("gnus-globalify-regexp" function (:arguments ("re")) nil [46421 46630])
            ("gnus-set-window-start" function (:arguments ("point")) nil [46632 46856])
            ("gnus-annotation-in-region-p" function (:arguments ("b" "e")) nil [46858 47030])
            ("gnus-or" function (:arguments ("elems")) nil [47032 47194])
            ("gnus-and" function (:arguments ("elems")) nil [47196 47369])
            ("declare-function" code nil nil [47400 47449])
            ("gnus-write-active-file" function (:arguments ("file" "hashtb" "full-names")) nil [47451 48284])
            ("gnus-with-output-to-file" function (:arguments ("file" "body")) nil [48338 49126])
            ("put" code nil nil [49128 49183])
            ("put" code nil nil [49184 49246])
            ("if" code nil nil [49248 49865])
            ("declare-function" code nil nil [49867 49975])
            ("gnus-add-text-properties-when" function (:arguments ("property" "value" "start" "end" "properties" "object")) nil [49977 50513])
            ("gnus-remove-text-properties-when" function (:arguments ("property" "value" "start" "end" "properties" "object")) nil [50515 51008])
            ("gnus-string-remove-all-properties" function (:arguments ("string")) nil [51010 51181])
            ("gnus-string-equal" function (:arguments ("x" "y")) nil [51350 51555])
            ("gnus-use-byte-compile" variable (:default-value t) nil [51557 51783])
            ("gnus-byte-compile" function (:arguments ("form")) nil [51785 52227])
            ("gnus-remassoc" function (:arguments ("key" "alist")) nil [52229 52701])
            ("gnus-update-alist-soft" function (:arguments ("key" "value" "alist")) nil [52703 52850])
            ("gnus-create-info-command" function (:arguments ("node")) nil [52852 53136])
            ("gnus-not-ignore" function (:arguments ("args")) nil [53138 53178])
            ("gnus-directory-sep-char-regexp" variable (:default-value "/") nil [53180 53371])
            ("gnus-url-unhex" function (:arguments ("x")) nil [53373 53485])
            ("gnus-url-unhex-string" function (:arguments ("str" "allow-newlines")) nil [53512 54335])
            ("gnus-make-predicate" function (:arguments ("spec")) nil [54337 54610])
            ("gnus-make-predicate-1" function (:arguments ("spec")) nil [54612 54868])
            ("gnus-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [54870 55270])
            ("gnus-emacs-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [55272 55893])
            ("ido-completing-read" function (:prototype-flag t) nil [55895 55932])
            ("gnus-ido-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [55933 56211])
            ("declare-function" code nil nil [56214 56343])
            ("iswitchb-temp-buflist" variable nil nil [56344 56374])
            ("iswitchb-mode" variable nil nil [56375 56397])
            ("gnus-iswitchb-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "history" "def")) nil [56399 57535])
            ("gnus-graphic-display-p" function nil nil [57537 57654])
            ("put" code nil nil [57656 57711])
            ("put" code nil nil [57712 57769])
            ("gnus-parse-without-error" function (:arguments ("body")) nil [57771 58097])
            ("gnus-cache-file-contents" function (:arguments ("file" "variable" "function")) nil [58099 58558])
            ("gnus-multiple-choice" function (:arguments ("prompt" "choice" "idx")) nil [58560 60131])
            ("if" code nil nil [60133 60591])
            ("gnus-frame-or-window-display-name" function (:arguments ("object")) nil [60593 61108])
            ("tool-bar-mode" variable nil nil [61110 61132])
            ("gnus-tool-bar-update" function (:arguments ("ignore")) nil [61134 61595])
            ("gnus-mapcar" function (:arguments ("function" "seq1" "seqs2_n")) nil [61670 62987])
            ("if" code nil nil [62989 63528])
            ("xemacs-codename" variable nil nil [63530 63554])
            ("sxemacs-codename" variable nil nil [63555 63580])
            ("emacs-program-version" variable nil nil [63581 63611])
            ("gnus-emacs-version" function nil nil [63613 64798])
            ("gnus-rename-file" function (:arguments ("old-path" "new-path" "trim")) nil [64800 65565])
            ("gnus-set-file-modes" function (:arguments ("filename" "mode")) nil [65567 65695])
            ("if" code nil nil [65697 65915])
            ("defalias" code nil nil [65917 66022])
            ("gnus-put-display-table" function (:arguments ("range" "value" "display-table")) nil [66024 66480])
            ("gnus-get-display-table" function (:arguments ("character" "display-table")) nil [66482 66895])
            ("declare-function" code nil nil [66897 66966])
            ("gnus-rescale-image" function (:arguments ("image" "size")) nil [66968 67771])
            ("gmm-utils" include nil nil [67792 67812])
            ("gnus-recursive-directory-files" function (:arguments ("dir")) nil [67814 68441])
            ("gnus-list-memq-of-list" function (:arguments ("elements" "list")) nil [68443 68671])
            ("cond" code nil nil [68693 69565])
            ("if" code nil nil [69568 69862])
            ("if" code nil nil [69864 70366])
            ("defalias" code nil nil [70368 70532])
            ("gnus-bound-and-true-p" function (:arguments ("sym")) nil [70677 70752])
            ("if" code nil nil [70754 70896])
            ("gnus-test-list" function (:arguments ("list" "predicate")) nil [70898 71179])
            ("gnus-subsetp" function (:arguments ("list1" "list2")) nil [71181 71492])
            ("gnus-setdiff" function (:arguments ("list1" "list2")) nil [71494 71764])
            ("gnus-util" package nil nil [71766 71786]))          
      :file "gnus-util.el.gz"
      :pointmax 71815
      :fsize 21260
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 69565 . 69566) (symbol 68674 . 68690) (open-paren 68673 . 68674) (close-paren 67812 . 67813) (symbol 67774 . 67791) (open-paren 67773 . 67774) (close-paren 36249 . 36250) (symbol 35850 . 35867) (open-paren 35849 . 35850) (close-paren 19199 . 19200) (symbol 17373 . 17390) (open-paren 17372 . 17373) (close-paren 3673 . 3674) (symbol 2885 . 2901) (open-paren 2884 . 2885) (close-paren 1234 . 1235) (symbol 1201 . 1218) (open-paren 1200 . 1201)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [917 930])
            ("mm-util" include nil nil [932 950])
            ("gnus-util" include nil nil [986 1006])
            ("gnus-score-edit-done-hook" variable (:user-visible-flag t) nil [1045 1137])
            ("gnus-score-mode-hook" variable (:user-visible-flag t) nil [1139 1209])
            ("gnus-score-menu-hook" variable (:user-visible-flag t) nil [1211 1294])
            ("gnus-score-edit-exit-function" variable nil nil [1296 1386])
            ("gnus-score-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map emacs-lisp-mode-map) (define-key map "" (quote gnus-score-edit-exit)) (define-key map "" (quote gnus-score-edit-insert-date)) (define-key map "" (quote gnus-score-pretty-print)) map)) nil [1388 1681])
            ("score-mode-syntax-table" variable (:default-value (let ((table (copy-syntax-table lisp-mode-syntax-table))) (modify-syntax-entry 124 "w" table) table)) nil [1683 1870])
            ("score-mode-coding-system" variable (:default-value mm-universal-coding-system) nil [1920 1980])
            ("define-derived-mode" code nil nil [1997 2248])
            ("gnus-score-make-menu-bar" function nil nil [2250 2579])
            ("gnus-score-edit-insert-date" function (:user-visible-flag t) nil [2581 2729])
            ("gnus-score-pretty-print" function (:user-visible-flag t) nil [2731 3016])
            ("gnus-score-edit-exit" function (:user-visible-flag t) nil [3018 3556])
            ("score-mode" package nil nil [3558 3579]))          
      :file "score-mode.el.gz"
      :pointmax 3609
      :fsize 1400
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 930 . 931) (symbol 899 . 916) (open-paren 898 . 899)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [901 914])
            ("gnus-newsrc-file-version" variable nil nil [916 949])
            ("gnus" include nil nil [951 966])
            ("gnus-use-correct-string-widths" variable
               (:user-visible-flag t
                :default-value (featurep (quote xemacs)))
                nil [968 1159])
            ("gnus-make-format-preserve-properties" variable
               (:user-visible-flag t
                :default-value (featurep (quote xemacs)))
                nil [1161 1429])
            ("gnus-summary-mark-positions" variable nil nil [1456 1496])
            ("gnus-group-mark-positions" variable nil nil [1497 1535])
            ("gnus-group-indentation" variable nil nil [1536 1570])
            ("gnus-tmp-unread" variable nil nil [2000 2024])
            ("gnus-tmp-replied" variable nil nil [2025 2050])
            ("gnus-tmp-score-char" variable nil nil [2051 2079])
            ("gnus-tmp-indentation" variable nil nil [2080 2109])
            ("gnus-tmp-opening-bracket" variable nil nil [2110 2143])
            ("gnus-tmp-lines" variable nil nil [2144 2167])
            ("gnus-tmp-name" variable nil nil [2168 2190])
            ("gnus-tmp-closing-bracket" variable nil nil [2191 2224])
            ("gnus-tmp-subject-or-nil" variable nil nil [2225 2257])
            ("gnus-tmp-subject" variable nil nil [2258 2283])
            ("gnus-tmp-marked" variable nil nil [2284 2308])
            ("gnus-tmp-marked-mark" variable nil nil [2309 2338])
            ("gnus-tmp-subscribed" variable nil nil [2339 2367])
            ("gnus-tmp-process-marked" variable nil nil [2368 2400])
            ("gnus-tmp-number-of-unread" variable nil nil [2401 2435])
            ("gnus-tmp-group-name" variable nil nil [2436 2464])
            ("gnus-tmp-group" variable nil nil [2465 2488])
            ("gnus-tmp-article-number" variable nil nil [2489 2521])
            ("gnus-tmp-unread-and-unselected" variable nil nil [2522 2561])
            ("gnus-tmp-news-method" variable nil nil [2562 2591])
            ("gnus-tmp-news-server" variable nil nil [2592 2621])
            ("gnus-mouse-face" variable nil nil [2622 2646])
            ("gnus-mouse-face-prop" variable nil nil [2647 2676])
            ("gnus-tmp-header" variable nil nil [2677 2701])
            ("gnus-tmp-from" variable nil nil [2702 2724])
            ("declare-function" code nil nil [2726 2834])
            ("gnus-lrm-string-p" function (:arguments ("string")) nil [2836 3082])
            ("gnus-lrm-string" variable (:default-value (if (ignore-errors (string 8206)) (propertize (string 8206) (quote invisible) t) "")) nil [3084 3198])
            ("gnus-summary-line-format-spec" variable nil nil [3200 3242])
            ("gnus-summary-dummy-line-format-spec" variable nil nil [3243 3291])
            ("gnus-group-line-format-spec" variable nil nil [3292 3332])
            ("gnus-format-specs" variable (:default-value (\` ((version \, emacs-version) (gnus-version \, (gnus-continuum-version))))) nil [3334 3466])
            ("gnus-default-format-specs" variable (:default-value gnus-format-specs) nil [3468 3520])
            ("gnus-article-mode-line-format-spec" variable nil nil [3522 3569])
            ("gnus-summary-mode-line-format-spec" variable nil nil [3570 3617])
            ("gnus-group-mode-line-format-spec" variable nil nil [3618 3663])
            ("gnus-update-format" function
               (:user-visible-flag t
                :arguments ("var"))
                nil [3734 4764])
            ("gnus-update-format-specifications" function (:arguments ("force" "types")) nil [4766 6790])
            ("gnus-mouse-face-0" variable (:default-value (quote highlight)) nil [6792 6896])
            ("gnus-mouse-face-1" variable (:default-value (quote highlight)) nil [6898 7003])
            ("gnus-mouse-face-2" variable (:default-value (quote highlight)) nil [7005 7110])
            ("gnus-mouse-face-3" variable (:default-value (quote highlight)) nil [7112 7217])
            ("gnus-mouse-face-4" variable (:default-value (quote highlight)) nil [7219 7324])
            ("gnus-mouse-face-function" function (:arguments ("form" "type")) nil [7326 7578])
            ("gnus-face-0" variable (:default-value (quote bold)) nil [7580 7673])
            ("gnus-face-1" variable (:default-value (quote italic)) nil [7675 7771])
            ("gnus-face-2" variable (:default-value (quote bold-italic)) nil [7773 7874])
            ("gnus-face-3" variable (:default-value (quote bold)) nil [7876 7970])
            ("gnus-face-4" variable (:default-value (quote bold)) nil [7972 8066])
            ("gnus-face-face-function" function (:arguments ("form" "type")) nil [8068 8535])
            ("gnus-balloon-face-function" function (:arguments ("form" "type")) nil [8537 8772])
            ("gnus-spec-tab" function (:arguments ("column")) nil [8774 9183])
            ("gnus-correct-length" function (:arguments ("string")) nil [9185 9304])
            ("gnus-correct-substring" function (:arguments ("string" "start" "end")) nil [9306 9883])
            ("gnus-string-width-function" function nil nil [9885 10058])
            ("gnus-substring-function" function nil nil [10060 10246])
            ("gnus-tilde-max-form" function (:arguments ("el" "max-width")) nil [10248 11007])
            ("gnus-tilde-cut-form" function (:arguments ("el" "cut-width")) nil [11009 11580])
            ("gnus-tilde-ignore-form" function (:arguments ("el" "ignore-value")) nil [11582 11835])
            ("gnus-pad-form" function (:arguments ("el" "pad-width")) nil [11837 12579])
            ("gnus-parse-format" function (:arguments ("format" "spec-alist" "insert")) nil [12581 13336])
            ("gnus-parse-complex-format" function (:arguments ("format" "spec-alist")) nil [13338 15002])
            ("gnus-complex-form-to-spec" function (:arguments ("form" "spec-alist")) nil [15004 15482])
            ("gnus-xmas-format" function (:arguments ("fstring" "args")) nil [15485 16660])
            ("gnus-parse-simple-format" function (:arguments ("format" "spec-alist" "insert")) nil [16662 22665])
            ("gnus-eval-format" function (:arguments ("format" "alist" "props")) nil [22667 22960])
            ("gnus-set-format" function (:arguments ("type" "insertable")) nil [22962 23238])
            ("gnus-spec" package nil nil [23240 23260]))          
      :file "gnus-spec.el.gz"
      :pointmax 23335
      :fsize 6744
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 914 . 915) (symbol 883 . 900) (open-paren 882 . 883)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [921 936])
            ("gnus-msg" include nil nil [937 956])
            ("cl" include nil nil [976 989])
            ("when" code nil nil [1012 1063])
            ("gnus-mailing-list-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map "h" gnus-mailing-list-help "s" gnus-mailing-list-subscribe "u" gnus-mailing-list-unsubscribe "p" gnus-mailing-list-post "o" gnus-mailing-list-owner "a" gnus-mailing-list-archive) map)) nil [1121 1490])
            ("gnus-mailing-list-menu" variable nil nil [1492 1523])
            ("gnus-mailing-list-make-menu-bar" function nil nil [1525 2023])
            ("turn-on-gnus-mailing-list-mode" function nil nil [2040 2178])
            ("gnus-mailing-list-insinuate" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [2195 2893])
            ("when" code nil nil [2916 3071])
            ("define-minor-mode" code nil nil [3089 3517])
            ("gnus-mailing-list-help" function (:user-visible-flag t) nil [3533 3845])
            ("gnus-mailing-list-subscribe" function (:user-visible-flag t) nil [3847 4181])
            ("gnus-mailing-list-unsubscribe" function (:user-visible-flag t) nil [4183 4533])
            ("gnus-mailing-list-post" function (:user-visible-flag t) nil [4535 4843])
            ("gnus-mailing-list-owner" function (:user-visible-flag t) nil [4845 5160])
            ("gnus-mailing-list-archive" function (:user-visible-flag t) nil [5162 5597])
            ("gnus-mailing-list-message" function (:arguments ("address")) nil [5622 5921])
            ("gnus-ml" package nil nil [5923 5941]))          
      :file "gnus-ml.el.gz"
      :pointmax 5968
      :fsize 1817
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 3071 . 3072) (symbol 2896 . 2913) (open-paren 2895 . 2896) (close-paren 1063 . 1064) (symbol 992 . 1009) (open-paren 991 . 992) (close-paren 989 . 990) (symbol 958 . 975) (open-paren 957 . 958)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [902 915])
            ("tool-bar-mode" variable nil nil [917 939])
            ("gnus" include nil nil [941 956])
            ("gnus-start" include nil nil [957 978])
            ("nnmail" include nil nil [979 996])
            ("gnus-spec" include nil nil [997 1017])
            ("gnus-int" include nil nil [1018 1037])
            ("gnus-range" include nil nil [1038 1059])
            ("gnus-win" include nil nil [1060 1079])
            ("gnus-undo" include nil nil [1080 1100])
            ("gmm-utils" include nil nil [1101 1121])
            ("time-date" include nil nil [1122 1142])
            ("gnus-ems" include nil nil [1143 1162])
            ("unless" code nil nil [1278 1363])
            ("let" code nil nil [1205 1275])
            ("mm-url" include nil nil [1185 1202])
            ("gnus-agent-total-fetched-for" function (:prototype-flag t) nil [1366 1419])
            ("gnus-cache-total-fetched-for" function (:prototype-flag t) nil [1420 1473])
            ("gnus-group-make-nnir-group" function (:prototype-flag t) nil [1475 1520])
            ("gnus-no-groups-message" variable
               (:user-visible-flag t
                :default-value "No news is good news")
                nil [1522 1677])
            ("gnus-keep-same-level" variable (:user-visible-flag t) nil [1679 2420])
            ("gnus-group-goto-unread" variable
               (:user-visible-flag t
                :default-value t)
                nil [2422 2639])
            ("gnus-goto-next-group-when-activating" variable
               (:user-visible-flag t
                :default-value t)
                nil [2641 2921])
            ("gnus-permanently-visible-groups" variable (:user-visible-flag t) nil [2923 3254])
            ("gnus-safe-html-newsgroups" variable (:default-value "\\`nnrss[+:]") nil [3256 3779])
            ("gnus-list-groups-with-ticked-articles" variable
               (:user-visible-flag t
                :default-value t)
                nil [3781 3991])
            ("gnus-group-default-list-level" variable (:default-value gnus-level-subscribed) nil [3993 4270])
            ("gnus-group-list-inactive-groups" variable
               (:user-visible-flag t
                :default-value t)
                nil [4272 4440])
            ("gnus-group-sort-function" variable
               (:user-visible-flag t
                :default-value (quote gnus-group-sort-by-alphabet))
                nil [4442 5773])
            ("gnus-group-line-format" variable
               (:user-visible-flag t
                :default-value "%M%S%p%P%5y:%B%(%g%)
")
                nil [5775 8447])
            ("gnus-group-mode-line-format" variable
               (:user-visible-flag t
                :default-value "Gnus: %%b {%M%:%S}")
                nil [8449 8790])
            ("when" code nil nil [8864 9016])
            ("gnus-group-menu-hook" variable nil nil [9018 9153])
            ("gnus-group-catchup-group-hook" variable nil nil [9155 9348])
            ("gnus-group-update-group-hook" variable nil nil [9350 9479])
            ("gnus-group-prepare-function" variable
               (:user-visible-flag t
                :default-value (quote gnus-group-prepare-flat))
                nil [9481 10035])
            ("gnus-group-prepare-hook" variable nil nil [10037 10241])
            ("gnus-suspend-gnus-hook" variable nil nil [10243 10367])
            ("gnus-exit-gnus-hook" variable nil nil [10369 10473])
            ("gnus-after-exiting-gnus-hook" variable nil nil [10475 10589])
            ("gnus-group-update-hook" variable nil nil [10591 10735])
            ("gnus-useful-groups" variable
               (:user-visible-flag t
                :default-value (quote (("(ding) mailing list mirrored at gmane.org" "gmane.emacs.gnus.general" (nntp "Gmane" (nntp-address "news.gmane.org"))) ("Gnus bug archive" "gnus.gnus-bug" (nntp "news.gnus.org" (nntp-address "news.gnus.org"))) ("Local Gnus help group" "gnus-help" (nndoc "gnus-help" (nndoc-article-type mbox) (eval (\` (nndoc-address (\, (let ((file (nnheader-find-etc-directory "gnus-tut.txt" t))) (unless file (error "Couldn't find doc group")) file))))))))))
                nil [10737 11480])
            ("gnus-group-highlight" variable
               (:user-visible-flag t
                :default-value (quote (((and mailp (= unread 0) (eq level 1)) . gnus-group-mail-1-empty) ((and mailp (eq level 1)) . gnus-group-mail-1) ((and mailp (= unread 0) (eq level 2)) . gnus-group-mail-2-empty) ((and mailp (eq level 2)) . gnus-group-mail-2) ((and mailp (= unread 0) (eq level 3)) . gnus-group-mail-3-empty) ((and mailp (eq level 3)) . gnus-group-mail-3) ((and mailp (= unread 0)) . gnus-group-mail-low-empty) ((and mailp) . gnus-group-mail-low) ((and (= unread 0) (eq level 1)) . gnus-group-news-1-empty) ((and (eq level 1)) . gnus-group-news-1) ((and (= unread 0) (eq level 2)) . gnus-group-news-2-empty) ((and (eq level 2)) . gnus-group-news-2) ((and (= unread 0) (eq level 3)) . gnus-group-news-3-empty) ((and (eq level 3)) . gnus-group-news-3) ((and (= unread 0) (eq level 4)) . gnus-group-news-4-empty) ((and (eq level 4)) . gnus-group-news-4) ((and (= unread 0) (eq level 5)) . gnus-group-news-5-empty) ((and (eq level 5)) . gnus-group-news-5) ((and (= unread 0) (eq level 6)) . gnus-group-news-6-empty) ((and (eq level 6)) . gnus-group-news-6) ((and (= unread 0)) . gnus-group-news-low-empty) (t . gnus-group-news-low))))
                nil [11482 13749])
            ("put" code nil nil [13750 13801])
            ("gnus-new-mail-mark" variable (:default-value 37) nil [13803 13923])
            ("gnus-group-icons" customgroup (:user-visible-flag t) nil [13925 14020])
            ("gnus-group-icon-list" variable (:user-visible-flag t) nil [14022 15076])
            ("put" code nil nil [15077 15128])
            ("gnus-group-name-charset-method-alist" variable nil nil [15130 15404])
            ("gnus-group-name-charset-group-alist" variable (:default-value (if (or (and (fboundp (quote find-coding-system)) (find-coding-system (quote utf-8))) (mm-coding-system-p (quote utf-8))) (quote ((".*" . utf-8))) nil)) nil [15406 15797])
            ("gnus-group-jump-to-group-prompt" variable nil nil [15799 16510])
            ("gnus-group-listing-limit" variable
               (:user-visible-flag t
                :default-value 1000)
                nil [16512 16681])
            ("gnus-group-is-exiting-p" variable nil nil [16707 16743])
            ("gnus-group-is-exiting-without-update-p" variable nil nil [16744 16795])
            ("gnus-group-sort-alist-function" variable (:default-value (quote gnus-group-sort-flat)) nil [16796 16900])
            ("gnus-group-sort-selected-function" variable (:default-value (quote gnus-group-sort-selected-flat)) nil [16902 17041])
            ("gnus-group-indentation-function" variable nil nil [17043 17087])
            ("gnus-goto-missing-group-function" variable nil nil [17088 17133])
            ("gnus-group-update-group-function" variable nil nil [17134 17179])
            ("gnus-group-goto-next-group-function" variable nil nil [17180 17298])
            ("gnus-group-edit-buffer" variable nil nil [17300 17335])
            ("gnus-tmp-news-method" variable nil nil [17337 17366])
            ("gnus-tmp-colon" variable nil nil [17367 17390])
            ("gnus-tmp-news-server" variable nil nil [17391 17420])
            ("gnus-tmp-decoded-group" variable nil nil [17421 17452])
            ("gnus-tmp-header" variable nil nil [17453 17477])
            ("gnus-tmp-process-marked" variable nil nil [17478 17510])
            ("gnus-tmp-summary-live" variable nil nil [17511 17541])
            ("gnus-tmp-news-method-string" variable nil nil [17542 17578])
            ("gnus-tmp-group-icon" variable nil nil [17579 17607])
            ("gnus-tmp-moderated-string" variable nil nil [17608 17642])
            ("gnus-tmp-newsgroup-description" variable nil nil [17643 17682])
            ("gnus-tmp-comment" variable nil nil [17683 17708])
            ("gnus-tmp-qualified-group" variable nil nil [17709 17742])
            ("gnus-tmp-subscribed" variable nil nil [17743 17771])
            ("gnus-tmp-number-of-read" variable nil nil [17772 17804])
            ("gnus-inhibit-demon" variable nil nil [17805 17832])
            ("gnus-pick-mode" variable nil nil [17833 17856])
            ("gnus-tmp-marked-mark" variable nil nil [17857 17886])
            ("gnus-tmp-number-of-unread" variable nil nil [17887 17921])
            ("gnus-group-line-format-alist" variable (:default-value (\` ((77 gnus-tmp-marked-mark 99) (83 gnus-tmp-subscribed 99) (76 gnus-tmp-level 100) (78 (cond ((eq number t) "*") ((numberp number) (int-to-string (+ number (gnus-range-length (cdr (assq (quote dormant) gnus-tmp-marked))) (gnus-range-length (cdr (assq (quote tick) gnus-tmp-marked)))))) (t number)) 115) (82 gnus-tmp-number-of-read 115) (85 (if (gnus-active gnus-tmp-group) (gnus-number-of-unseen-articles-in-group gnus-tmp-group) "*") 115) (116 gnus-tmp-number-total 100) (121 gnus-tmp-number-of-unread 115) (73 (gnus-range-length (cdr (assq (quote dormant) gnus-tmp-marked))) 100) (84 (gnus-range-length (cdr (assq (quote tick) gnus-tmp-marked))) 100) (105 (+ (gnus-range-length (cdr (assq (quote dormant) gnus-tmp-marked))) (gnus-range-length (cdr (assq (quote tick) gnus-tmp-marked)))) 100) (103 (if (boundp (quote gnus-tmp-decoded-group)) gnus-tmp-decoded-group gnus-tmp-group) 115) (71 gnus-tmp-qualified-group 115) (99 (gnus-short-group-name (if (boundp (quote gnus-tmp-decoded-group)) gnus-tmp-decoded-group gnus-tmp-group)) 115) (67 gnus-tmp-comment 115) (68 gnus-tmp-newsgroup-description 115) (111 gnus-tmp-moderated 99) (79 gnus-tmp-moderated-string 115) (112 gnus-tmp-process-marked 99) (115 gnus-tmp-news-server 115) (110 (\, (if (featurep (quote xemacs)) (quote (symbol-name gnus-tmp-news-method)) (quote gnus-tmp-news-method))) 115) (80 gnus-group-indentation 115) (69 gnus-tmp-group-icon 115) (66 gnus-tmp-summary-live 99) (122 gnus-tmp-news-method-string 115) (109 (gnus-group-new-mail gnus-tmp-group) 99) (100 (gnus-group-timestamp-string gnus-tmp-group) 115) (117 gnus-tmp-user-defined 115) (70 (gnus-total-fetched-for gnus-tmp-group) 115)))) nil [17923 19704])
            ("gnus-group-mode-line-format-alist" variable (:default-value (\` ((83 gnus-tmp-news-server 115) (77 gnus-tmp-news-method 115) (117 gnus-tmp-user-defined 115) (58 gnus-tmp-colon 115)))) nil [19706 19876])
            ("gnus-topic-topology" variable nil nil [19878 19944])
            ("gnus-topic-alist" variable nil nil [19946 20011])
            ("gnus-group-marked" variable nil nil [20013 20043])
            ("gnus-group-list-mode" variable nil nil [20045 20078])
            ("gnus-group-listed-groups" variable nil nil [20081 20118])
            ("gnus-group-list-option" variable nil nil [20119 20154])
            ("put" code nil nil [20185 20228])
            ("gnus-define-keys" code nil nil [20230 22525])
            ("gnus-define-keys" code nil nil [22527 22771])
            ("gnus-define-keys" code nil nil [22773 22888])
            ("gnus-define-keys" code nil nil [22890 23679])
            ("gnus-define-keys" code nil nil [23681 24049])
            ("gnus-define-keys" code nil nil [24051 24500])
            ("gnus-define-keys" code nil nil [24502 24960])
            ("gnus-define-keys" code nil nil [24962 25351])
            ("gnus-define-keys" code nil nil [25353 25742])
            ("gnus-define-keys" code nil nil [25744 26121])
            ("gnus-define-keys" code nil nil [26123 26249])
            ("gnus-define-keys" code nil nil [26251 26366])
            ("gnus-define-keys" code nil nil [26368 26694])
            ("gnus-topic-mode-p" function nil nil [26696 26838])
            ("gnus-group-make-menu-bar" function nil nil [26840 36287])
            ("gnus-group-tool-bar-map" variable nil nil [36290 36326])
            ("gnus-group-tool-bar-update" function (:arguments ("symbol" "value")) nil [36328 36697])
            ("gnus-group-tool-bar" variable (:default-value (if (eq gmm-tool-bar-style (quote gnome)) (quote gnus-group-tool-bar-gnome) (quote gnus-group-tool-bar-retro))) nil [36699 37443])
            ("gnus-group-tool-bar-gnome" variable (:default-value (quote ((gnus-group-post-news "mail/compose") (gnus-agent-toggle-plugged "unplugged" t :help "Gnus is currently unplugged.  Click to work online." :visible (and gnus-agent (not gnus-plugged))) (gnus-agent-toggle-plugged "plugged" t :help "Gnus is currently plugged.  Click to work offline." :visible (and gnus-agent gnus-plugged)) (gnus-group-send-queue "mail/outbox" t :visible (and gnus-agent gnus-plugged) :help "Send articles from the queue group") (gnus-group-get-new-news "mail/inbox" nil :visible (or (not gnus-agent) gnus-plugged)) (gnus-topic-read-group "open" nil :visible (and (boundp (quote gnus-topic-mode)) gnus-topic-mode)) (gnus-group-read-group "open" nil :visible (not (and (boundp (quote gnus-topic-mode)) gnus-topic-mode))) (gnus-group-save-newsrc "save") (gnus-group-describe-group "describe") (gnus-group-unsubscribe-current-group "gnus/toggle-subscription") (gnus-group-prev-unread-group "left-arrow") (gnus-group-next-unread-group "right-arrow") (gnus-group-exit "exit") (gmm-customize-mode "preferences" t :help "Edit mode preferences") (gnus-info-find-node "help")))) nil [37445 39332])
            ("gnus-group-tool-bar-retro" variable (:default-value (quote ((gnus-group-get-new-news "gnus/get-news") (gnus-group-get-new-news-this-group "gnus/gnntg") (gnus-group-catchup-current "gnus/catchup") (gnus-group-describe-group "gnus/describe-group") (gnus-group-subscribe "gnus/subscribe" t :help "Subscribe to the current group") (gnus-group-unsubscribe "gnus/unsubscribe" t :help "Unsubscribe from the current group") (gnus-group-exit "gnus/exit-gnus" gnus-group-mode-map)))) nil [39334 40102])
            ("gnus-group-tool-bar-zap-list" variable (:default-value t) nil [40104 40473])
            ("image-load-path" variable nil nil [40475 40499])
            ("tool-bar-map" variable nil nil [40500 40521])
            ("gnus-group-make-tool-bar" function (:arguments ("force")) nil [40523 41340])
            ("define-derived-mode" code nil nil [41342 42551])
            ("gnus-update-group-mark-positions" function nil nil [42553 43112])
            ("gnus-mouse-pick-group" function
               (:user-visible-flag t
                :arguments ("e"))
                nil [43114 43264])
            ("gnus-group-default-list-level" function nil nil [43266 43498])
            ("gnus-group-default-level" function (:arguments ("level" "number-or-nil")) nil [43709 44204])
            ("gnus-group-setup-buffer" function nil nil [44206 44365])
            ("gnus-group-name-charset" function (:arguments ("method" "group")) nil [44367 45116])
            ("gnus-group-name-decode" function (:arguments ("string" "charset")) nil [45118 45310])
            ("gnus-group-decoded-name" function (:arguments ("string")) nil [45312 45453])
            ("gnus-group-list-groups" function
               (:user-visible-flag t
                :arguments ("level" "unread" "lowest"))
                nil [45455 47808])
            ("gnus-group-list-level" function
               (:user-visible-flag t
                :arguments ("level" "all"))
                nil [47810 48043])
            ("gnus-group-prepare-logic" function (:arguments ("group" "test")) nil [48045 48438])
            ("gnus-group-prepare-flat" function (:arguments ("level" "predicate" "lowest" "regexp")) nil [48440 51505])
            ("gnus-group-prepare-flat-list-dead" function (:arguments ("groups" "level" "mark" "regexp")) nil [51507 52837])
            ("gnus-group-update-group-line" function nil nil [52839 53527])
            ("gnus-group-insert-group-line-info" function (:arguments ("group")) nil [53529 54315])
            ("gnus-number-of-unseen-articles-in-group" function (:arguments ("group")) nil [54317 54688])
            ("gnus-group-update-tool-bar" variable (:default-value (and (not (featurep (quote xemacs))) (boundp (quote tool-bar-mode)) tool-bar-mode (fboundp (quote force-window-update)))) nil [55237 55910])
            ("gnus-group-insert-group-line" function (:arguments ("gnus-tmp-group" "gnus-tmp-level" "gnus-tmp-marked" "number" "gnus-tmp-method")) nil [55912 59119])
            ("gnus-group--setup-tool-bar-update" function (:arguments ("beg" "end")) nil [59121 59692])
            ("gnus-group-update-eval-form" function (:arguments ("group" "list")) nil [59694 62041])
            ("gnus-group-highlight-line" function (:arguments ("group" "beg" "end")) nil [62043 62668])
            ("gnus-group-get-icon" function (:arguments ("group")) nil [62670 63162])
            ("gnus-group-refresh-group" function (:arguments ("group")) nil [63165 63358])
            ("gnus-group-update-group" function (:arguments ("group" "visible-only" "info-unchanged")) nil [63360 66216])
            ("gnus-group-set-mode-line" function nil nil [66218 67552])
            ("gnus-group-group-name" function nil nil [67554 67780])
            ("gnus-group-group-level" function nil nil [67782 67920])
            ("gnus-group-group-indentation" function nil nil [67922 68182])
            ("gnus-group-group-unread" function nil nil [68184 68344])
            ("gnus-group-new-mail" function (:arguments ("group")) nil [68346 68469])
            ("gnus-group-level" function (:arguments ("group")) nil [68471 68677])
            ("gnus-group-search-forward" function (:arguments ("backward" "all" "level" "first-too")) nil [68679 70010])
            ("gnus-total-fetched-for" function (:arguments ("group")) nil [70012 70415])
            ("gnus-group-mark-line-p" function nil nil [70466 70656])
            ("gnus-group-mark-group" function
               (:user-visible-flag t
                :arguments ("n" "unmark" "no-advance"))
                nil [70658 71378])
            ("gnus-group-unmark-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [71380 71545])
            ("gnus-group-unmark-all-groups" function (:user-visible-flag t) nil [71547 71727])
            ("gnus-group-mark-region" function
               (:user-visible-flag t
                :arguments ("unmark" "beg" "end"))
                nil [71729 72009])
            ("gnus-group-mark-buffer" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [72011 72209])
            ("gnus-group-mark-regexp" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [72211 72589])
            ("gnus-group-remove-mark" function (:arguments ("group" "test-marked")) nil [72591 72942])
            ("gnus-group-set-mark" function (:arguments ("group")) nil [72944 73182])
            ("gnus-group-universal-argument" function
               (:user-visible-flag t
                :arguments ("arg" "groups" "func"))
                nil [73184 73683])
            ("gnus-group-process-prefix" function (:arguments ("n")) nil [73685 74825])
            ("let" code nil nil [74968 75727])
            ("put" code nil nil [75730 75779])
            ("gnus-group-read-group" function
               (:user-visible-flag t
                :arguments ("all" "no-article" "group" "select-articles"))
                nil [75803 77160])
            ("gnus-group-select-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [77162 77684])
            ("gnus-group-quick-select-group" function
               (:user-visible-flag t
                :arguments ("all" "group"))
                nil [77686 78251])
            ("gnus-group-visible-select-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [78253 78456])
            ("gnus-group-select-group-ephemerally" function (:user-visible-flag t) nil [78458 79124])
            ("gnus-group-name-at-point" function nil nil [79126 80688])
            ("gnus-group-completing-read" function (:arguments ("prompt" "collection" "require-match" "initial-input" "hist" "def")) nil [80690 82048])
            ("gnus-fetch-group" function
               (:user-visible-flag t
                :arguments ("group" "articles"))
                nil [82065 82467])
            ("gnus-fetch-group-other-frame" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [82484 82821])
            ("gnus-large-ephemeral-newsgroup" variable (:default-value 200) nil [82823 83284])
            ("gnus-fetch-old-ephemeral-headers" variable nil nil [83286 83549])
            ("gnus-group-read-ephemeral-group" function
               (:user-visible-flag t
                :arguments ("group" "method" "activate" "quit-config" "request-only" "select-articles" "parameters" "number"))
                nil [83654 86496])
            ("gnus-gmane-group-download-format" variable (:default-value "http://download.gmane.org/%s/%s/%s") nil [86498 86807])
            ("url-insert-file-contents" function (:prototype-flag t) nil [86809 86860])
            ("gnus-read-ephemeral-gmane-group" function
               (:user-visible-flag t
                :arguments ("group" "start" "range"))
                nil [86920 88093])
            ("gnus-read-ephemeral-gmane-group-url" function
               (:user-visible-flag t
                :arguments ("url"))
                nil [88095 90092])
            ("gnus-bug-group-download-format-alist" variable (:default-value (quote ((emacs . "http://debbugs.gnu.org/cgi/bugreport.cgi?bug=%s;mboxmaint=yes;mboxstat=yes") (debian . "http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=%s&mbox=yes;mboxmaint=yes")))) nil [90094 90811])
            ("gnus-read-ephemeral-bug-group" function
               (:user-visible-flag t
                :arguments ("ids" "mbox-url" "window-conf"))
                nil [90813 92075])
            ("gnus-read-ephemeral-debian-bug-group" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [92077 92376])
            ("debbugs-gnu-bug-number" variable nil nil [92378 92409])
            ("gnus-read-ephemeral-emacs-bug-group" function
               (:user-visible-flag t
                :arguments ("ids" "window-conf"))
                nil [92426 93039])
            ("gnus-group-jump-to-group" function
               (:user-visible-flag t
                :arguments ("group" "prompt"))
                nil [93041 94006])
            ("gnus-group-goto-group" function (:arguments ("group" "far" "test-marked")) nil [94008 95666])
            ("gnus-group-next-group" function
               (:user-visible-flag t
                :arguments ("n" "silent"))
                nil [95668 95932])
            ("gnus-group-next-unread-group" function
               (:user-visible-flag t
                :arguments ("n" "all" "level" "silent"))
                nil [95934 96719])
            ("gnus-group-prev-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [96721 96922])
            ("gnus-group-prev-unread-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [96924 97137])
            ("gnus-group-next-unread-group-same-level" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [97139 97473])
            ("gnus-group-prev-unread-group-same-level" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [97475 97770])
            ("gnus-group-best-unread-group" function
               (:user-visible-flag t
                :arguments ("exclude-group"))
                nil [97772 98575])
            ("gnus-group-first-unread-group" function (:user-visible-flag t) nil [99159 99673])
            ("gnus-group-enter-server-mode" function (:user-visible-flag t) nil [99675 99790])
            ("gnus-group-make-group-simple" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [99792 100059])
            ("gnus-group-make-group" function
               (:user-visible-flag t
                :arguments ("name" "method" "address" "args" "encoded"))
                nil [100061 102326])
            ("gnus-group-delete-groups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [102328 102733])
            ("gnus-group-delete-articles" function
               (:user-visible-flag t
                :arguments ("group" "oldp"))
                nil [102735 103367])
            ("gnus-group-delete-group" function
               (:user-visible-flag t
                :arguments ("group" "force" "no-prompt"))
                nil [103369 104736])
            ("gnus-group-rename-group" function
               (:user-visible-flag t
                :arguments ("group" "new-name"))
                nil [104738 107100])
            ("gnus-group-edit-group" function
               (:user-visible-flag t
                :arguments ("group" "part"))
                nil [107102 108229])
            ("gnus-group-edit-group-method" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [108231 108399])
            ("gnus-group-edit-group-parameters" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [108401 108576])
            ("gnus-group-edit-group-done" function (:arguments ("part" "group" "form")) nil [108578 109772])
            ("gnus-group-make-useful-group" function
               (:user-visible-flag t
                :arguments ("group" "method"))
                nil [109774 110470])
            ("gnus-group-make-help-group" function
               (:user-visible-flag t
                :arguments ("noerror"))
                nil [110472 111434])
            ("gnus-group-make-doc-group" function
               (:user-visible-flag t
                :arguments ("file" "type"))
                nil [111436 112655])
            ("nnweb-type-definition" variable nil nil [112657 112687])
            ("gnus-group-web-type-history" variable nil nil [112688 112728])
            ("gnus-group-web-search-history" variable nil nil [112729 112771])
            ("gnus-group-make-web-group" function
               (:user-visible-flag t
                :arguments ("solid"))
                nil [112772 113882])
            ("nnrss-group-alist" variable nil nil [113884 113910])
            ("nnrss-save-server-data" function (:arguments ("_arg")) nil [113969 114006])
            ("nnrss-discover-feed" function (:arguments ("_arg")) nil [113932 113966])
            ("gnus-group-make-rss-group" function
               (:user-visible-flag t
                :arguments ("url"))
                nil [114008 115249])
            ("gnus-group-make-directory-group" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [115251 116105])
            ("gnus-group-add-to-virtual" function
               (:user-visible-flag t
                :arguments ("n" "vgroup"))
                nil [116107 116828])
            ("gnus-group-make-empty-virtual" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [116830 117416])
            ("gnus-group-enter-directory" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [117418 117953])
            ("gnus-group-expunge-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [117955 118340])
            ("nnimap-acl-get" function (:prototype-flag t) nil [118342 118377])
            ("nnimap-acl-edit" function (:prototype-flag t) nil [118378 118414])
            ("gnus-group-nnimap-edit-acl" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [118416 120342])
            ("gnus-group-sort-groups" function
               (:user-visible-flag t
                :arguments ("func" "reverse"))
                nil [120430 120932])
            ("gnus-group-sort-flat" function (:arguments ("func" "reverse")) nil [120934 121387])
            ("gnus-group-sort-groups-by-alphabet" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [121389 121626])
            ("gnus-group-sort-groups-by-real-name" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [121628 121885])
            ("gnus-group-sort-groups-by-unread" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [121887 122120])
            ("gnus-group-sort-groups-by-level" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [122122 122339])
            ("gnus-group-sort-groups-by-score" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [122341 122558])
            ("gnus-group-sort-groups-by-rank" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [122560 122774])
            ("gnus-group-sort-groups-by-method" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [122776 123012])
            ("gnus-group-sort-groups-by-server" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [123014 123248])
            ("gnus-group-sort-selected-groups" function
               (:user-visible-flag t
                :arguments ("n" "func" "reverse"))
                nil [123279 123688])
            ("gnus-group-sort-selected-flat" function (:arguments ("groups" "func" "reverse")) nil [123690 124363])
            ("gnus-group-sort-selected-groups-by-alphabet" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [124365 124706])
            ("gnus-group-sort-selected-groups-by-real-name" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [124708 125056])
            ("gnus-group-sort-selected-groups-by-unread" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [125058 125395])
            ("gnus-group-sort-selected-groups-by-level" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [125397 125718])
            ("gnus-group-sort-selected-groups-by-score" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [125720 126041])
            ("gnus-group-sort-selected-groups-by-rank" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [126043 126361])
            ("gnus-group-sort-selected-groups-by-method" function
               (:user-visible-flag t
                :arguments ("n" "reverse"))
                nil [126363 126703])
            ("gnus-group-sort-by-alphabet" function (:arguments ("info1" "info2")) nil [126730 126864])
            ("gnus-group-sort-by-real-name" function (:arguments ("info1" "info2")) nil [126866 127078])
            ("gnus-group-sort-by-unread" function (:arguments ("info1" "info2")) nil [127080 127348])
            ("gnus-group-sort-by-level" function (:arguments ("info1" "info2")) nil [127350 127469])
            ("gnus-group-sort-by-method" function (:arguments ("info1" "info2")) nil [127471 127712])
            ("gnus-group-sort-by-server" function (:arguments ("info1" "info2")) nil [127714 128025])
            ("gnus-group-sort-by-score" function (:arguments ("info1" "info2")) nil [128027 128152])
            ("gnus-group-sort-by-rank" function (:arguments ("info1" "info2")) nil [128154 128415])
            ("gnus-group-clear-data" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [128436 128913])
            ("gnus-group-clear-data-on-native-groups" function (:user-visible-flag t) nil [128915 129487])
            ("gnus-info-clear-data" function (:arguments ("info")) nil [129489 130337])
            ("gnus-group-catchup-current" function
               (:user-visible-flag t
                :arguments ("n" "all"))
                nil [130362 131893])
            ("gnus-group-catchup-current-all" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [131895 132114])
            ("declare-function" code nil nil [132116 132186])
            ("gnus-group-catchup" function (:arguments ("group" "all")) nil [132188 133860])
            ("gnus-group-expire-articles" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [133862 134317])
            ("gnus-group-expire-articles-1" function (:arguments ("group")) nil [134319 135684])
            ("gnus-group-expire-all-groups" function (:user-visible-flag t) nil [135686 136067])
            ("gnus-group-set-current-level" function
               (:user-visible-flag t
                :arguments ("n" "level"))
                nil [136069 137114])
            ("gnus-group-unsubscribe" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [137116 137271])
            ("gnus-group-subscribe" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [137273 137422])
            ("gnus-group-unsubscribe-current-group" function
               (:user-visible-flag t
                :arguments ("n" "do-sub"))
                nil [137424 138106])
            ("gnus-group-unsubscribe-group" function
               (:user-visible-flag t
                :arguments ("group" "level" "silent"))
                nil [138108 139359])
            ("gnus-group-transpose-groups" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [139361 139779])
            ("gnus-group-kill-all-zombies" function
               (:user-visible-flag t
                :arguments ("dummy"))
                nil [139781 140156])
            ("gnus-group-kill-region" function
               (:user-visible-flag t
                :arguments ("begin" "end"))
                nil [140158 140656])
            ("gnus-group-kill-group" function
               (:user-visible-flag t
                :arguments ("n" "discard"))
                nil [140658 142920])
            ("gnus-group-yank-group" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [142922 144235])
            ("gnus-group-kill-level" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [144237 145124])
            ("gnus-group-list-all-groups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [145126 145402])
            ("gnus-group-list-killed" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [145527 146097])
            ("gnus-group-list-zombies" function (:user-visible-flag t) nil [146099 146454])
            ("gnus-group-list-active" function (:user-visible-flag t) nil [146456 147491])
            ("gnus-activate-all-groups" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [147493 147726])
            ("gnus-group-get-new-news" function
               (:user-visible-flag t
                :arguments ("arg" "one-level"))
                nil [147728 148912])
            ("gnus-group-get-new-news-this-group" function
               (:user-visible-flag t
                :arguments ("n" "dont-scan"))
                nil [148914 150653])
            ("gnus-group-describe-group" function
               (:user-visible-flag t
                :arguments ("force" "group"))
                nil [150655 151511])
            ("gnus-group-describe-all-groups" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [151566 152489])
            ("gnus-group-apropos" function
               (:user-visible-flag t
                :arguments ("regexp" "search-description"))
                nil [152542 154051])
            ("gnus-group-description-apropos" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [154053 154393])
            ("gnus-group-list-matching" function
               (:user-visible-flag t
                :arguments ("level" "regexp" "all" "lowest"))
                nil [154448 155197])
            ("gnus-group-list-all-matching" function
               (:user-visible-flag t
                :arguments ("level" "regexp" "lowest"))
                nil [155199 155652])
            ("gnus-group-save-newsrc" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [155712 155900])
            ("gnus-group-restart" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [155902 156149])
            ("gnus-group-read-init-file" function (:user-visible-flag t) nil [156151 156306])
            ("gnus-group-check-bogus-groups" function
               (:user-visible-flag t
                :arguments ("silent"))
                nil [156308 156590])
            ("gnus-group-find-new-groups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [156592 157271])
            ("gnus-group-edit-global-kill" function
               (:user-visible-flag t
                :arguments ("article" "group"))
                nil [157273 157654])
            ("gnus-group-edit-local-kill" function
               (:user-visible-flag t
                :arguments ("article" "group"))
                nil [157656 157831])
            ("gnus-group-force-update" function (:user-visible-flag t) nil [157833 157936])
            ("gnus-backlog-articles" variable nil nil [157938 157968])
            ("gnus-group-suspend" function (:user-visible-flag t) nil [157970 158952])
            ("gnus-group-clear-dribble" function (:user-visible-flag t) nil [158954 159123])
            ("gnus-group-exit" function (:user-visible-flag t) nil [159125 159885])
            ("gnus-group-quit" function (:user-visible-flag t) nil [159887 160927])
            ("gnus-group-describe-briefly" function (:user-visible-flag t) nil [160929 161339])
            ("gnus-group-browse-foreign-server" function
               (:user-visible-flag t
                :arguments ("method"))
                nil [161341 162509])
            ("gnus-group-set-info" function (:arguments ("info" "method-only-group" "part")) nil [162511 164556])
            ("gnus-import-other-newsrc-file" function (:arguments ("file")) nil [164663 165060])
            ("gnus-add-marked-articles" function (:arguments ("group" "type" "articles" "info" "force")) nil [165062 166029])
            ("declare-function" code nil nil [166031 166097])
            ("gnus-add-mark" function (:arguments ("group" "mark" "article")) nil [166099 166489])
            ("gnus-group-set-timestamp" function nil nil [166521 166886])
            ("gnus-group-timestamp" function (:arguments ("group")) nil [166888 167011])
            ("gnus-group-timestamp-delta" function (:arguments ("group")) nil [167013 167335])
            ("gnus-group-timestamp-string" function (:arguments ("group")) nil [167337 167529])
            ("gnus-group-list-cached" function
               (:user-visible-flag t
                :arguments ("level" "lowest"))
                nil [167531 168503])
            ("gnus-group-list-dormant" function
               (:user-visible-flag t
                :arguments ("level" "lowest"))
                nil [168505 169214])
            ("gnus-group-list-ticked" function
               (:user-visible-flag t
                :arguments ("level" "lowest"))
                nil [169216 169920])
            ("gnus-group-listed-groups" function nil nil [169922 170270])
            ("gnus-group-list-plus" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [170272 170982])
            ("gnus-group-list-flush" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [170984 171169])
            ("gnus-group-list-limit" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [171171 171689])
            ("declare-function" code nil nil [171691 171771])
            ("declare-function" code nil nil [171772 171848])
            ("gnus-group-mark-article-read" function (:arguments ("group" "article")) nil [171850 173068])
            ("gnus-group-compact-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [173109 174391])
            ("gnus-group" package nil nil [174393 174414]))          
      :file "gnus-group.el.gz"
      :pointmax 174444
      :fsize 43111
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 114006 . 114007) (symbol 113912 . 113929) (open-paren 113911 . 113912) (close-paren 75727 . 75728) (symbol 74949 . 74965) (open-paren 74948 . 74949) (close-paren 1363 . 1364) (symbol 1165 . 1182) (open-paren 1164 . 1165) (close-paren 915 . 916) (symbol 882 . 899) (open-paren 881 . 882)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("ring" include nil nil [942 957])
            ("cl" include nil nil [926 939])
            ("gnus-mouse-2" variable (:default-value [mouse-2]) nil [1022 1053])
            ("gnus-down-mouse-3" variable (:default-value [down-mouse-3]) nil [1054 1095])
            ("gnus-down-mouse-2" variable (:default-value [down-mouse-2]) nil [1096 1137])
            ("gnus-widget-button-keymap" variable nil nil [1138 1176])
            ("gnus-mode-line-modified" variable (:default-value (if (featurep (quote xemacs)) (quote ("--**-" . "-----")) (quote ("**" "--")))) nil [1177 1279])
            ("gnus-xmas-redefine" function (:prototype-flag t) nil [1344 1386])
            ("gnus-xmas-define" function (:prototype-flag t) nil [1301 1341])
            ("gnus-get-buffer-create" function (:prototype-flag t) nil [1389 1430])
            ("nnheader-find-etc-directory" function (:prototype-flag t) nil [1431 1481])
            ("smiley-region" function (:prototype-flag t) nil [1482 1516])
            ("gnus-kill-all-overlays" function nil nil [1518 1785])
            ("gnus-mule-max-width-function" function (:arguments ("el" "max-width")) nil [1808 2056])
            ("if" code nil nil [2078 2226])
            ("gnus-tmp-unread" variable nil nil [2229 2253])
            ("gnus-tmp-replied" variable nil nil [2254 2279])
            ("gnus-tmp-score-char" variable nil nil [2280 2308])
            ("gnus-tmp-indentation" variable nil nil [2309 2338])
            ("gnus-tmp-opening-bracket" variable nil nil [2339 2372])
            ("gnus-tmp-lines" variable nil nil [2373 2396])
            ("gnus-tmp-name" variable nil nil [2397 2419])
            ("gnus-tmp-closing-bracket" variable nil nil [2420 2453])
            ("gnus-tmp-subject-or-nil" variable nil nil [2454 2486])
            ("gnus-check-before-posting" variable nil nil [2487 2521])
            ("gnus-mouse-face" variable nil nil [2522 2546])
            ("gnus-group-buffer" variable nil nil [2547 2573])
            ("gnus-ems-redefine" function nil nil [2575 4389])
            ("gnus-select-lowest-window" function nil nil [4443 4838])
            ("gnus-region-active-p" function nil nil [4840 5022])
            ("gnus-mark-active-p" function nil nil [5024 5142])
            ("gnus-alive-p" function (:prototype-flag t) nil [5184 5220])
            ("mm-disable-multibyte" function (:prototype-flag t) nil [5221 5263])
            ("gnus-image-type-available-p" function (:arguments ("type")) nil [5287 5475])
            ("gnus-create-image" function (:arguments ("file" "type" "data-p" "props")) nil [5477 5815])
            ("gnus-put-image" function (:arguments ("glyph" "string" "category")) nil [5817 6118])
            ("gnus-remove-image" function (:arguments ("image" "category")) nil [6120 6901])
            ("gnus-string-mark-left-to-right" function (:arguments ("string")) nil [6903 7061])
            ("if" code nil nil [7288 8868])
            ("defalias" code nil nil [7135 7284])
            ("gnus-ems" package nil nil [8871 8890]))          
      :file "gnus-ems.el.gz"
      :pointmax 8918
      :fsize 3166
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 8868 . 8869) (symbol 7064 . 7080) (open-paren 7063 . 7064) (close-paren 2226 . 2227) (symbol 2059 . 2075) (open-paren 2058 . 2059) (close-paren 1386 . 1387) (symbol 1282 . 1298) (open-paren 1281 . 1282) (close-paren 957 . 958) (symbol 906 . 923) (open-paren 905 . 906)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("eval" code nil nil [972 1007])
            ("cl" include nil nil [1028 1041])
            ("wid-edit" include nil nil [1043 1062])
            ("mm-util" include nil nil [1063 1081])
            ("nnheader" include nil nil [1082 1101])
            ("gnus-ham-process-destinations" variable nil nil [1168 1206])
            ("gnus-parameter-ham-marks-alist" variable nil nil [1207 1246])
            ("gnus-parameter-spam-marks-alist" variable nil nil [1247 1287])
            ("gnus-spam-autodetect" variable nil nil [1288 1317])
            ("gnus-spam-autodetect-methods" variable nil nil [1318 1355])
            ("gnus-spam-newsgroup-contents" variable nil nil [1356 1393])
            ("gnus-spam-process-destinations" variable nil nil [1394 1433])
            ("gnus-spam-resend-to" variable nil nil [1434 1462])
            ("gnus-ham-resend-to" variable nil nil [1463 1490])
            ("gnus-spam-process-newsgroups" variable nil nil [1491 1528])
            ("gnus" customgroup (:user-visible-flag t) nil [1531 1655])
            ("gnus-start" customgroup (:user-visible-flag t) nil [1657 1736])
            ("gnus-format" customgroup (:user-visible-flag t) nil [1738 1815])
            ("gnus-charset" customgroup (:user-visible-flag t) nil [1817 1951])
            ("gnus-cache" customgroup (:user-visible-flag t) nil [1953 2063])
            ("gnus-registry" customgroup (:user-visible-flag t) nil [2065 2130])
            ("gnus-start-server" customgroup (:user-visible-flag t) nil [2132 2216])
            ("gnus-group" customgroup (:user-visible-flag t) nil [2252 2357])
            ("gnus-group-foreign" customgroup (:user-visible-flag t) nil [2359 2481])
            ("gnus-group-new" customgroup (:user-visible-flag t) nil [2483 2575])
            ("gnus-group-levels" customgroup (:user-visible-flag t) nil [2577 2694])
            ("gnus-group-select" customgroup (:user-visible-flag t) nil [2696 2823])
            ("gnus-group-listing" customgroup (:user-visible-flag t) nil [2825 2965])
            ("gnus-group-visual" customgroup (:user-visible-flag t) nil [2967 3125])
            ("gnus-group-various" customgroup (:user-visible-flag t) nil [3127 3263])
            ("gnus-summary" customgroup (:user-visible-flag t) nil [3297 3408])
            ("gnus-summary-exit" customgroup (:user-visible-flag t) nil [3410 3554])
            ("gnus-summary-marks" customgroup (:user-visible-flag t) nil [3556 3697])
            ("gnus-thread" customgroup (:user-visible-flag t) nil [3699 3835])
            ("gnus-summary-format" customgroup (:user-visible-flag t) nil [3837 3987])
            ("gnus-summary-choose" customgroup (:user-visible-flag t) nil [3989 4120])
            ("gnus-summary-maneuvering" customgroup (:user-visible-flag t) nil [4122 4268])
            ("gnus-picon" customgroup (:user-visible-flag t) nil [4270 4371])
            ("gnus-summary-mail" customgroup (:user-visible-flag t) nil [4373 4506])
            ("gnus-summary-sort" customgroup (:user-visible-flag t) nil [4508 4655])
            ("gnus-summary-visual" customgroup (:user-visible-flag t) nil [4657 4840])
            ("gnus-summary-various" customgroup (:user-visible-flag t) nil [4842 4991])
            ("gnus-summary-pick" customgroup (:user-visible-flag t) nil [4993 5155])
            ("gnus-summary-tree" customgroup (:user-visible-flag t) nil [5157 5332])
            ("gnus-extract-view" customgroup (:user-visible-flag t) nil [5359 5490])
            ("gnus-score" customgroup (:user-visible-flag t) nil [5520 5594])
            ("gnus-score-kill" customgroup (:user-visible-flag t) nil [5596 5663])
            ("gnus-score-adapt" customgroup (:user-visible-flag t) nil [5665 5743])
            ("gnus-score-default" customgroup (:user-visible-flag t) nil [5745 5835])
            ("gnus-score-expire" customgroup (:user-visible-flag t) nil [5837 5916])
            ("gnus-score-decay" customgroup (:user-visible-flag t) nil [5918 5996])
            ("gnus-score-files" customgroup (:user-visible-flag t) nil [5998 6102])
            ("gnus-score-various" customgroup (:user-visible-flag t) nil [6104 6199])
            ("gnus-visual" customgroup (:user-visible-flag t) nil [6210 6309])
            ("gnus-agent" customgroup (:user-visible-flag t) nil [6311 6381])
            ("gnus-files" customgroup (:user-visible-flag t) nil [6383 6447])
            ("gnus-dribble-file" customgroup (:user-visible-flag t) nil [6449 6565])
            ("gnus-newsrc" customgroup (:user-visible-flag t) nil [6567 6638])
            ("gnus-server" customgroup (:user-visible-flag t) nil [6640 6748])
            ("gnus-server-visual" customgroup (:user-visible-flag t) nil [6750 6876])
            ("gnus-message" customgroup
               (:user-visible-flag t
                :value (quote ((message custom-group))))
                nil [6878 6987])
            ("gnus-meta" customgroup (:user-visible-flag t) nil [6989 7191])
            ("gnus-various" customgroup (:user-visible-flag t) nil [7193 7308])
            ("gnus-exit" customgroup (:user-visible-flag t) nil [7310 7413])
            ("gnus-fun" customgroup (:user-visible-flag t) nil [7415 7530])
            ("gnus-version-number" variable
               (:constant-flag t
                :default-value "5.13")
                nil [7532 7614])
            ("gnus-version" variable
               (:constant-flag t
                :default-value (format "Gnus v%s" gnus-version-number))
                nil [7616 7724])
            ("gnus-inhibit-startup-message" variable nil nil [7726 7959])
            ("unless" code nil nil [7961 9403])
            ("gnus-group-news-1" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleTurquoise" :bold t)) (((class color) (background light)) (:foreground "ForestGreen" :bold t)) (t nil)))
                :type "face")
                nil [9505 9775])
            ("put" code nil nil [9808 9868])
            ("put" code nil nil [9869 9920])
            ("gnus-group-news-1-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleTurquoise")) (((class color) (background light)) (:foreground "ForestGreen")) (t nil)))
                :type "face")
                nil [9922 10188])
            ("put" code nil nil [10221 10293])
            ("put" code nil nil [10294 10351])
            ("gnus-group-news-2" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "turquoise" :bold t)) (((class color) (background light)) (:foreground "CadetBlue4" :bold t)) (t nil)))
                :type "face")
                nil [10353 10618])
            ("put" code nil nil [10651 10711])
            ("put" code nil nil [10712 10763])
            ("gnus-group-news-2-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "turquoise")) (((class color) (background light)) (:foreground "CadetBlue4")) (t nil)))
                :type "face")
                nil [10765 11026])
            ("put" code nil nil [11059 11131])
            ("put" code nil nil [11132 11189])
            ("gnus-group-news-3" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [11191 11407])
            ("put" code nil nil [11440 11500])
            ("put" code nil nil [11501 11552])
            ("gnus-group-news-3-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [11554 11768])
            ("put" code nil nil [11801 11873])
            ("put" code nil nil [11874 11931])
            ("gnus-group-news-4" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [11933 12149])
            ("put" code nil nil [12182 12242])
            ("put" code nil nil [12243 12294])
            ("gnus-group-news-4-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [12296 12510])
            ("put" code nil nil [12543 12615])
            ("put" code nil nil [12616 12673])
            ("gnus-group-news-5" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [12675 12891])
            ("put" code nil nil [12924 12984])
            ("put" code nil nil [12985 13036])
            ("gnus-group-news-5-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [13038 13252])
            ("put" code nil nil [13285 13357])
            ("put" code nil nil [13358 13415])
            ("gnus-group-news-6" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t)) (((class color) (background light)) (:bold t)) (t nil)))
                :type "face")
                nil [13417 13633])
            ("put" code nil nil [13666 13726])
            ("put" code nil nil [13727 13778])
            ("gnus-group-news-6-empty" variable
               (:default-value (quote ((((class color) (background dark)) nil) (((class color) (background light)) nil) (t nil)))
                :type "face")
                nil [13780 13994])
            ("put" code nil nil [14027 14099])
            ("put" code nil nil [14100 14157])
            ("gnus-group-news-low" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkTurquoise" :bold t)) (((class color) (background light)) (:foreground "DarkGreen" :bold t)) (t nil)))
                :type "face")
                nil [14159 14431])
            ("put" code nil nil [14464 14528])
            ("put" code nil nil [14529 14582])
            ("gnus-group-news-low-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkTurquoise")) (((class color) (background light)) (:foreground "DarkGreen")) (t nil)))
                :type "face")
                nil [14584 14852])
            ("put" code nil nil [14885 14961])
            ("put" code nil nil [14962 15021])
            ("gnus-group-mail-1" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "#e1ffe1" :bold t)) (((class color) (background light)) (:foreground "DeepPink3" :bold t)) (t (:bold t))))
                :type "face")
                nil [15023 15292])
            ("put" code nil nil [15325 15385])
            ("put" code nil nil [15386 15437])
            ("gnus-group-mail-1-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "#e1ffe1")) (((class color) (background light)) (:foreground "DeepPink3")) (t (:italic t :bold t))))
                :type "face")
                nil [15439 15714])
            ("put" code nil nil [15747 15819])
            ("put" code nil nil [15820 15877])
            ("gnus-group-mail-2" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkSeaGreen1" :bold t)) (((class color) (background light)) (:foreground "HotPink3" :bold t)) (t (:bold t))))
                :type "face")
                nil [15879 16153])
            ("put" code nil nil [16186 16246])
            ("put" code nil nil [16247 16298])
            ("gnus-group-mail-2-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "DarkSeaGreen1")) (((class color) (background light)) (:foreground "HotPink3")) (t (:bold t))))
                :type "face")
                nil [16300 16570])
            ("put" code nil nil [16603 16675])
            ("put" code nil nil [16676 16733])
            ("gnus-group-mail-3" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine1" :bold t)) (((class color) (background light)) (:foreground "magenta4" :bold t)) (t (:bold t))))
                :type "face")
                nil [16735 17007])
            ("put" code nil nil [17040 17100])
            ("put" code nil nil [17101 17152])
            ("gnus-group-mail-3-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine1")) (((class color) (background light)) (:foreground "magenta4")) (t nil)))
                :type "face")
                nil [17154 17415])
            ("put" code nil nil [17448 17520])
            ("put" code nil nil [17521 17578])
            ("gnus-group-mail-low" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine2" :bold t)) (((class color) (background light)) (:foreground "DeepPink4" :bold t)) (t (:bold t))))
                :type "face")
                nil [17580 17857])
            ("put" code nil nil [17890 17954])
            ("put" code nil nil [17955 18008])
            ("gnus-group-mail-low-empty" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "aquamarine2")) (((class color) (background light)) (:foreground "DeepPink4")) (t (:bold t))))
                :type "face")
                nil [18010 18283])
            ("put" code nil nil [18316 18392])
            ("put" code nil nil [18393 18452])
            ("gnus-summary-selected" variable
               (:default-value (quote ((t (:underline t))))
                :type "face")
                nil [18478 18591])
            ("put" code nil nil [18624 18692])
            ("put" code nil nil [18693 18748])
            ("gnus-summary-cancelled" variable
               (:default-value (quote ((((class color)) (:foreground "yellow" :background "black"))))
                :type "face")
                nil [18750 18913])
            ("put" code nil nil [18946 19016])
            ("put" code nil nil [19017 19073])
            ("gnus-summary-high-ticked" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "pink" :bold t)) (((class color) (background light)) (:foreground "firebrick" :bold t)) (t (:bold t))))
                :type "face")
                nil [19075 19371])
            ("put" code nil nil [19404 19478])
            ("put" code nil nil [19479 19537])
            ("gnus-summary-low-ticked" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "pink" :italic t)) (((class color) (background light)) (:foreground "firebrick" :italic t)) (t (:italic t))))
                :type "face")
                nil [19539 19839])
            ("put" code nil nil [19872 19944])
            ("put" code nil nil [19945 20002])
            ("gnus-summary-normal-ticked" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "pink")) (((class color) (background light)) (:foreground "firebrick")) (t nil)))
                :type "face")
                nil [20004 20281])
            ("put" code nil nil [20314 20392])
            ("put" code nil nil [20393 20453])
            ("gnus-summary-high-ancient" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SkyBlue" :bold t)) (((class color) (background light)) (:foreground "RoyalBlue" :bold t)) (t (:bold t))))
                :type "face")
                nil [20455 20756])
            ("put" code nil nil [20789 20865])
            ("put" code nil nil [20866 20925])
            ("gnus-summary-low-ancient" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SkyBlue" :italic t)) (((class color) (background light)) (:foreground "RoyalBlue" :italic t)) (t (:italic t))))
                :type "face")
                nil [20927 21232])
            ("put" code nil nil [21265 21339])
            ("put" code nil nil [21340 21398])
            ("gnus-summary-normal-ancient" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SkyBlue")) (((class color) (background light)) (:foreground "RoyalBlue")) (t nil)))
                :type "face")
                nil [21400 21682])
            ("put" code nil nil [21715 21795])
            ("put" code nil nil [21796 21857])
            ("gnus-summary-high-undownloaded" variable
               (:default-value (quote ((((class color) (background light)) (:bold t :foreground "cyan4")) (((class color) (background dark)) (:bold t :foreground "LightGray")) (t (:inverse-video t :bold t))))
                :type "face")
                nil [21859 22176])
            ("put" code nil nil [22209 22295])
            ("put" code nil nil [22296 22360])
            ("gnus-summary-low-undownloaded" variable
               (:default-value (quote ((((class color) (background light)) (:italic t :foreground "cyan4" :bold nil)) (((class color) (background dark)) (:italic t :foreground "LightGray" :bold nil)) (t (:inverse-video t :italic t))))
                :type "face")
                nil [22362 22703])
            ("put" code nil nil [22736 22820])
            ("put" code nil nil [22821 22884])
            ("gnus-summary-normal-undownloaded" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "cyan4" :bold nil)) (((class color) (background dark)) (:foreground "LightGray" :bold nil)) (t (:inverse-video t))))
                :type "face")
                nil [22886 23203])
            ("put" code nil nil [23236 23326])
            ("put" code nil nil [23327 23393])
            ("gnus-summary-high-unread" variable
               (:default-value (quote ((t (:bold t))))
                :type "face")
                nil [23395 23525])
            ("put" code nil nil [23558 23632])
            ("put" code nil nil [23633 23691])
            ("gnus-summary-low-unread" variable
               (:default-value (quote ((t (:italic t))))
                :type "face")
                nil [23693 23823])
            ("put" code nil nil [23856 23928])
            ("put" code nil nil [23929 23986])
            ("gnus-summary-normal-unread" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [23988 24115])
            ("put" code nil nil [24148 24226])
            ("put" code nil nil [24227 24287])
            ("gnus-summary-high-read" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen" :bold t)) (((class color) (background light)) (:foreground "DarkGreen" :bold t)) (t (:bold t))))
                :type "face")
                nil [24289 24594])
            ("put" code nil nil [24627 24697])
            ("put" code nil nil [24698 24754])
            ("gnus-summary-low-read" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen" :italic t)) (((class color) (background light)) (:foreground "DarkGreen" :italic t)) (t (:italic t))))
                :type "face")
                nil [24756 25065])
            ("put" code nil nil [25098 25166])
            ("put" code nil nil [25167 25222])
            ("gnus-summary-normal-read" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen")) (((class color) (background light)) (:foreground "DarkGreen")) (t nil)))
                :type "face")
                nil [25224 25502])
            ("put" code nil nil [25535 25609])
            ("put" code nil nil [25610 25668])
            ("gnus-buffers" variable nil nil [25697 25759])
            ("gnus-get-buffer-create" function (:arguments ("name")) nil [25761 25950])
            ("gnus-add-buffer" function nil nil [25952 26073])
            ("gnus-kill-buffer" function (:arguments ("buffer")) nil [26075 26324])
            ("gnus-buffers" function nil nil [26326 26651])
            ("gnus-group-buffer" variable (:default-value "*Group*") nil [26673 26744])
            ("gnus-splash" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "#cccccc")) (((class color) (background light)) (:foreground "#888888")) (t nil)))
                :type "face")
                nil [26746 26988])
            ("put" code nil nil [27021 27069])
            ("put" code nil nil [27070 27115])
            ("gnus-splash" function nil nil [27117 27367])
            ("gnus-indent-rigidly" function (:arguments ("start" "end" "arg")) nil [27369 27775])
            ("gnus-logo-color-alist" variable (:default-value (quote ((flame "#cc3300" "#ff2200") (pine "#c0cc93" "#f8ffb8") (moss "#a1cc93" "#d2ffb8") (irish "#04cc90" "#05ff97") (sky "#049acc" "#05deff") (tin "#6886cc" "#82b6ff") (velvet "#7c68cc" "#8c82ff") (grape "#b264cc" "#cf7df") (labia "#cc64c2" "#fd7dff") (berry "#cc6485" "#ff7db5") (dino "#724214" "#1e3f03") (oort "#cccccc" "#888888") (storm "#666699" "#99ccff") (pdino "#9999cc" "#99ccff") (purp "#9999cc" "#666699") (no "#ff0000" "#ffff00") (neutral "#b4b4b4" "#878787") (ma "#2020e0" "#8080ff") (september "#bf9900" "#ffcc00")))) nil [27823 28493])
            ("gnus-logo-color-style" variable
               (:user-visible-flag t
                :default-value (quote ma))
                nil [28495 28692])
            ("gnus-logo-colors" variable (:default-value (cdr (assq gnus-logo-color-style gnus-logo-color-alist))) nil [28694 28813])
            ("declare-function" code nil nil [28815 28884])
            ("gnus-group-startup-message" function (:arguments ("x" "y")) nil [28886 32439])
            ("gnus-splash-svg-color-symbols" function (:arguments ("list")) nil [32441 33153])
            ("eval-when" code nil nil [33155 33375])
            ("gnus-util" include nil nil [33395 33415])
            ("nnheader" include nil nil [33416 33435])
            ("gnus-parameters" variable nil nil [33437 33917])
            ("gnus-parameters-case-fold-search" variable (:default-value (quote default)) nil [33919 34359])
            ("gnus-group-parameters-more" variable nil nil [34361 34400])
            ("gnus-define-group-parameter" function (:arguments ("param" "rest")) nil [34402 37192])
            ("gnus-home-directory" variable (:default-value "~/") nil [37194 37663])
            ("gnus-directory" variable
               (:user-visible-flag t
                :default-value (or (getenv "SAVEDIR") (nnheader-concat gnus-home-directory "News/")))
                nil [37665 38138])
            ("gnus-default-directory" variable (:user-visible-flag t) nil [38140 38302])
            ("gnus-default-nntp-server" variable nil nil [38362 38731])
            ("gnus-nntpserver-file" variable (:default-value "/etc/nntpserver") nil [38733 38896])
            ("gnus-getenv-nntpserver" function nil nil [38898 39271])
            ("gnus-select-method" variable (:default-value (list (quote nntp) (or (gnus-getenv-nntpserver) (when (and gnus-default-nntp-server (not (string= gnus-default-nntp-server ""))) gnus-default-nntp-server) "news"))) nil [39492 40540])
            ("gnus-message-archive-method" variable
               (:user-visible-flag t
                :default-value "archive")
                nil [40542 40855])
            ("gnus-update-message-archive-method" variable nil nil [40857 41600])
            ("gnus-message-archive-group" variable
               (:user-visible-flag t
                :default-value (quote ((format-time-string "sent.%Y-%m"))))
                nil [41602 42806])
            ("gnus-secondary-servers" variable nil nil [42808 43076])
            ("make-obsolete-variable" code nil nil [43077 43152])
            ("gnus-secondary-select-methods" variable nil nil [43154 43572])
            ("gnus-local-domain" variable nil nil [43574 43899])
            ("make-obsolete-variable" code nil nil [43900 43960])
            ("gnus-refer-article-method" variable (:default-value (quote current)) nil [43990 44874])
            ("gnus-use-cross-reference" variable
               (:user-visible-flag t
                :default-value t)
                nil [44876 45272])
            ("gnus-process-mark" variable
               (:user-visible-flag t
                :default-value 35)
                nil [45274 45401])
            ("gnus-large-newsgroup" variable
               (:user-visible-flag t
                :default-value 200)
                nil [45403 45797])
            ("gnus-use-long-file-name" variable (:default-value (not (memq system-type (quote (usg-unix-v))))) nil [45799 46798])
            ("gnus-kill-files-directory" variable
               (:user-visible-flag t
                :default-value gnus-directory)
                nil [46800 47005])
            ("gnus-save-score" variable (:user-visible-flag t) nil [47007 47147])
            ("gnus-use-undo" variable
               (:user-visible-flag t
                :default-value t)
                nil [47149 47272])
            ("gnus-use-adaptive-scoring" variable (:user-visible-flag t) nil [47274 47646])
            ("gnus-use-cache" variable
               (:user-visible-flag t
                :default-value (quote passive))
                nil [47648 48034])
            ("gnus-use-trees" variable (:user-visible-flag t) nil [48036 48150])
            ("gnus-keep-backlog" variable
               (:user-visible-flag t
                :default-value 20)
                nil [48152 48536])
            ("gnus-suppress-duplicates" variable (:user-visible-flag t) nil [48538 48693])
            ("gnus-use-scoring" variable
               (:user-visible-flag t
                :default-value t)
                nil [48695 48795])
            ("gnus-summary-prepare-exit-hook" variable
               (:user-visible-flag t
                :default-value (quote (gnus-summary-expire-articles)))
                nil [48797 49034])
            ("gnus-novice-user" variable
               (:user-visible-flag t
                :default-value t)
                nil [49036 49233])
            ("gnus-expert-user" variable (:user-visible-flag t) nil [49235 49488])
            ("gnus-interactive-catchup" variable
               (:user-visible-flag t
                :default-value t)
                nil [49490 49642])
            ("gnus-interactive-exit" variable
               (:user-visible-flag t
                :default-value t)
                nil [49644 49886])
            ("gnus-extract-address-components" variable
               (:user-visible-flag t
                :default-value (quote gnus-extract-address-components))
                nil [49888 50412])
            ("gnus-shell-command-separator" variable (:default-value ";") nil [50414 50539])
            ("gnus-valid-select-methods" variable
               (:user-visible-flag t
                :default-value (quote (("nntp" post address prompt-address physical-address cloud) ("nnspool" post address) ("nnvirtual" post-mail virtual prompt-address) ("nnmbox" mail respool address) ("nnml" post-mail respool address) ("nnmh" mail respool address) ("nndir" post-mail prompt-address physical-address) ("nneething" none address prompt-address physical-address) ("nndoc" none address prompt-address) ("nnbabyl" mail address respool) ("nndraft" post-mail) ("nnfolder" mail respool address) ("nngateway" post-mail address prompt-address physical-address) ("nnweb" none) ("nnrss" none global) ("nnagent" post-mail) ("nnimap" post-mail address prompt-address physical-address respool server-marks cloud) ("nnmaildir" mail respool address server-marks) ("nnnil" none))))
                nil [50541 52328])
            ("gnus-redefine-select-method-widget" function nil nil [52330 52936])
            ("gnus-redefine-select-method-widget" code nil nil [52938 52974])
            ("gnus-updated-mode-lines" variable (:default-value (quote (group article summary tree))) nil [52976 53466])
            ("gnus-mode-non-string-length" variable
               (:user-visible-flag t
                :default-value 30)
                nil [53468 53735])
            ("define-widget" code nil nil [53785 53850])
            ("gnus-define-group-parameter" code nil nil [53852 55013])
            ("gnus-define-group-parameter" code nil nil [55015 55621])
            ("gnus-define-group-parameter" code nil nil [55623 56170])
            ("gnus-define-group-parameter" code nil nil [56172 56839])
            ("gnus-define-group-parameter" code nil nil [56841 57648])
            ("gnus-define-group-parameter" code nil nil [57650 58807])
            ("gnus-define-group-parameter" code nil nil [58809 59401])
            ("gnus-define-group-parameter" code nil nil [59403 60051])
            ("gnus-define-group-parameter" code nil nil [60091 60820])
            ("gnus-install-group-spam-parameters" variable
               (:user-visible-flag t
                :default-value t)
                nil [60903 61148])
            ("when" code nil nil [61150 79436])
            ("gnus-group-uncollapsed-levels" variable (:default-value 1) nil [79438 79607])
            ("gnus-group-use-permanent-levels" variable (:user-visible-flag t) nil [79609 79766])
            ("gnus-load-hook" variable nil nil [79779 79881])
            ("gnus-apply-kill-hook" variable (:default-value (quote (gnus-apply-kill-file))) nil [79883 80654])
            ("gnus-group-change-level-function" variable nil nil [80656 80887])
            ("gnus-visual" variable
               (:user-visible-flag t
                :default-value (quote (summary-highlight group-highlight article-highlight mouse-face summary-menu group-menu article-menu tree-highlight menu highlight browse-menu server-menu page-marker tree-menu binary-menu pick-menu)))
                nil [80909 82321])
            ("gnus-visual" variable nil nil [82349 82369])
            ("gnus-visual-p" function (:arguments ("type" "class")) nil [82422 82715])
            ("gnus-mouse-face" variable
               (:user-visible-flag t
                :default-value (condition-case nil (if (gnus-visual-p (quote mouse-face) (quote highlight)) (if (boundp (quote gnus-mouse-face)) (or gnus-mouse-face (quote highlight)) (quote highlight)) (quote default)) (error (quote highlight))))
                nil [82717 83108])
            ("gnus-article-save-directory" variable
               (:user-visible-flag t
                :default-value gnus-directory)
                nil [83110 83288])
            ("gnus-plugged" variable (:default-value t) nil [83290 83349])
            ("gnus-agent-cache" variable (:default-value t) nil [83351 83659])
            ("gnus-default-charset" variable (:default-value (quote undecided)) nil [83661 83971])
            ("gnus-agent" variable (:default-value t) nil [84007 84332])
            ("gnus-other-frame-function" variable (:default-value (quote gnus)) nil [84334 84615])
            ("gnus-other-frame-resume-function" variable (:default-value (quote gnus-group-get-new-news)) nil [84617 84985])
            ("gnus-other-frame-parameters" variable nil nil [84987 85402])
            ("gnus-user-agent" variable (:default-value (quote (emacs gnus type))) nil [85404 86222])
            ("when" code nil nil [86274 86913])
            ("gnus-agent-gcc-header" variable (:default-value "X-Gnus-Agent-Gcc") nil [86941 86990])
            ("gnus-agent-meta-information-header" variable (:default-value "X-Gnus-Agent-Meta-Information") nil [86991 87066])
            ("gnus-agent-method-p-cache" variable nil nil [87067 87228])
            ("gnus-agent-target-move-group-header" variable (:default-value "X-Gnus-Agent-Move-To") nil [87229 87296])
            ("gnus-draft-meta-information-header" variable (:default-value "X-Draft-From") nil [87297 87355])
            ("gnus-group-get-parameter-function" variable (:default-value (quote gnus-group-get-parameter)) nil [87356 87424])
            ("gnus-original-article-buffer" variable (:default-value " *Original Article*") nil [87425 87484])
            ("gnus-newsgroup-name" variable nil nil [87485 87517])
            ("gnus-ephemeral-servers" variable nil nil [87518 87553])
            ("gnus-server-method-cache" variable nil nil [87554 87591])
            ("gnus-extended-servers" variable nil nil [87592 87626])
            ("gnus-carpal" variable nil nil [87721 87745])
            ("make-obsolete-variable" code nil nil [87746 87800])
            ("gnus-agent-fetching" variable nil nil [87802 87878])
            ("gnus-agent-covered-methods" variable nil nil [87880 88003])
            ("gnus-command-method" variable nil nil [88005 88108])
            ("gnus-current-select-method" variable nil nil [88110 88199])
            ("gnus-tree-buffer" variable (:default-value "*Tree*") nil [88201 88285])
            ("gnus-method-history" variable nil nil [88347 88379])
            ("gnus-mail-method-history" variable nil nil [88446 88483])
            ("gnus-group-history" variable nil nil [88544 88575])
            ("gnus-server-alist" variable nil nil [88577 88638])
            ("gnus-cache-directory" variable
               (:user-visible-flag t
                :default-value (nnheader-concat gnus-directory "cache/"))
                nil [88640 88813])
            ("gnus-predefined-server-alist" variable (:default-value (\` (("cache" nnspool "cache" (nnspool-spool-directory (\, gnus-cache-directory)) (nnspool-nov-directory (\, gnus-cache-directory)) (nnspool-active-file (\, (nnheader-concat gnus-cache-directory "active"))))))) nil [88815 89120])
            ("gnus-article-mark-lists" variable
               (:constant-flag t
                :default-value (quote ((marked . tick) (replied . reply) (expirable . expire) (killed . killed) (bookmarks . bookmark) (dormant . dormant) (scored . score) (saved . save) (cached . cache) (downloadable . download) (unsendable . unsend) (forwarded . forward) (seen . seen) (unexist . unexist))))
                nil [89122 89454])
            ("gnus-article-special-mark-lists" variable
               (:constant-flag t
                :default-value (quote ((seen range) (unexist range) (killed range) (bookmark tuple) (uid tuple) (active tuple) (score tuple))))
                nil [89456 89629])
            ("gnus-article-unpropagated-mark-lists" variable
               (:constant-flag t
                :default-value (quote (seen cache download unsend score bookmark unexist)))
                nil [90004 90349])
            ("gnus-headers-retrieved-by" variable nil nil [90351 90389])
            ("gnus-article-reply" variable nil nil [90390 90421])
            ("gnus-override-method" variable nil nil [90422 90455])
            ("gnus-opened-servers" variable nil nil [90456 90488])
            ("gnus-current-kill-article" variable nil nil [90490 90528])
            ("gnus-have-read-active-file" variable nil nil [90530 90569])
            ("gnus-maintainer" variable
               (:constant-flag t
                :default-value "submit@debbugs.gnu.org (The Gnus Bugfixing Girls + Boys)")
                nil [90571 90704])
            ("gnus-bug-package" variable
               (:constant-flag t
                :default-value "gnus")
                nil [90706 90788])
            ("gnus-info-nodes" variable (:default-value (quote ((gnus-group-mode "(gnus)Group Buffer") (gnus-summary-mode "(gnus)Summary Buffer") (gnus-article-mode "(gnus)Article Buffer") (gnus-server-mode "(gnus)Server Buffer") (gnus-browse-mode "(gnus)Browse Foreign Server") (gnus-tree-mode "(gnus)Tree Display")))) nil [90790 91141])
            ("gnus-summary-buffer" variable (:default-value "*Summary*") nil [91143 91183])
            ("gnus-article-buffer" variable (:default-value "*Article*") nil [91184 91224])
            ("gnus-server-buffer" variable (:default-value "*Server*") nil [91225 91263])
            ("gnus-slave" variable nil nil [91265 91329])
            ("gnus-batch-mode" variable nil nil [91331 91414])
            ("gnus-variable-list" variable (:default-value (quote (gnus-newsrc-options gnus-newsrc-options-n gnus-newsrc-last-checked-date gnus-newsrc-alist gnus-server-alist gnus-killed-list gnus-zombie-list gnus-topic-topology gnus-topic-alist gnus-cloud-sequence gnus-cloud-covered-servers gnus-cloud-file-timestamps))) nil [91416 91774])
            ("gnus-newsrc-alist" variable nil nil [91776 91915])
            ("gnus-registry-alist" variable nil nil [91917 92034])
            ("gnus-newsrc-hashtb" variable nil nil [92036 92105])
            ("gnus-killed-list" variable nil nil [92107 92167])
            ("gnus-killed-hashtb" variable nil nil [92169 92249])
            ("gnus-zombie-list" variable nil nil [92251 92316])
            ("gnus-description-hashtb" variable nil nil [92318 92386])
            ("gnus-list-of-killed-groups" variable nil nil [92388 92494])
            ("gnus-active-hashtb" variable nil nil [92496 92561])
            ("gnus-moderated-hashtb" variable nil nil [92563 92636])
            ("gnus-prev-winconf" variable nil nil [92668 92698])
            ("gnus-reffed-article-number" variable nil nil [92700 92739])
            ("gnus-dead-summary" variable nil nil [92741 92771])
            ("gnus-invalid-group-regexp" variable (:default-value "[: `'\"/]\\|^$") nil [92773 92860])
            ("gnus-other-frame-object" variable nil nil [92862 92962])
            ("mapc" code nil nil [93174 102844])
            ("gnus-summary-line-format" variable
               (:user-visible-flag t
                :default-value "%U%R%z%I%(%[%4L: %-23,23f%]%) %s
")
                nil [102874 106566])
            ("gnus-suppress-keymap" function (:arguments ("keymap")) nil [106598 106784])
            ("gnus-article-mode-map" variable (:default-value (let ((keymap (make-sparse-keymap))) (gnus-suppress-keymap keymap) keymap)) nil [106786 106901])
            ("gnus-summary-mode-map" variable (:default-value (let ((keymap (make-keymap))) (gnus-suppress-keymap keymap) keymap)) nil [106902 107010])
            ("gnus-group-mode-map" variable (:default-value (let ((keymap (make-keymap))) (gnus-suppress-keymap keymap) keymap)) nil [107011 107117])
            ("defalias" code nil nil [107298 107354])
            ("defalias" code nil nil [107355 107409])
            ("gnus-header-from" function (:arguments ("header")) nil [107443 107504])
            ("gnus-gethash" function (:arguments ("string" "hashtable")) nil [107506 107642])
            ("gnus-gethash-safe" function (:arguments ("string" "hashtable")) nil [107644 107854])
            ("gnus-sethash" function (:arguments ("string" "value" "hashtable")) nil [107856 108013])
            ("put" code nil nil [108014 108069])
            ("gnus-group-unread" function (:arguments ("group")) nil [108071 108224])
            ("gnus-group-entry" function (:arguments ("group")) nil [108226 108341])
            ("gnus-active" function (:arguments ("group")) nil [108343 108447])
            ("gnus-set-active" function (:arguments ("group" "active")) nil [108449 108571])
            ("gnus-info-group" function (:arguments ("info")) nil [108597 108647])
            ("gnus-info-rank" function (:arguments ("info")) nil [108648 108697])
            ("gnus-info-read" function (:arguments ("info")) nil [108698 108747])
            ("gnus-info-marks" function (:arguments ("info")) nil [108748 108798])
            ("gnus-info-method" function (:arguments ("info")) nil [108799 108850])
            ("gnus-info-params" function (:arguments ("info")) nil [108851 108902])
            ("gnus-info-level" function (:arguments ("info")) nil [108904 109026])
            ("gnus-info-score" function (:arguments ("info")) nil [109027 109143])
            ("gnus-info-set-group" function (:arguments ("info" "group")) nil [109145 109213])
            ("gnus-info-set-rank" function (:arguments ("info" "rank")) nil [109214 109290])
            ("gnus-info-set-read" function (:arguments ("info" "read")) nil [109291 109367])
            ("gnus-info-set-marks" function (:arguments ("info" "marks" "extend")) nil [109368 109524])
            ("gnus-info-set-method" function (:arguments ("info" "method" "extend")) nil [109525 109685])
            ("gnus-info-set-params" function (:arguments ("info" "params" "extend")) nil [109686 109846])
            ("gnus-info-set-entry" function (:arguments ("info" "entry" "number")) nil [109848 110069])
            ("gnus-info-set-level" function (:arguments ("info" "level")) nil [110071 110230])
            ("gnus-info-set-score" function (:arguments ("info" "score")) nil [110231 110408])
            ("gnus-get-info" function (:arguments ("group")) nil [110410 110494])
            ("gnus-set-info" function (:arguments ("group" "info")) nil [110496 110600])
            ("gnus-ems" include nil nil [110641 110660])
            ("gnus-shutdown-alist" variable nil nil [110686 110718])
            ("gnus-add-shutdown" function (:arguments ("function" "symbols")) nil [110720 110878])
            ("gnus-shutdown" function (:arguments ("symbol")) nil [110880 111062])
            ("gnus-find-subscribed-addresses" function nil nil [111102 111753])
            ("gnus-string-or" function (:arguments ("strings")) nil [111755 111951])
            ("gnus-string-or-1" function (:arguments ("strings")) nil [111953 112154])
            ("gnus-version" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [112156 112364])
            ("gnus-continuum-version" function (:arguments ("version")) nil [112366 113447])
            ("gnus-info-find-node" function
               (:user-visible-flag t
                :arguments ("nodename"))
                nil [113449 113769])
            ("gnus-current-prefix-symbol" variable nil nil [113801 113867])
            ("gnus-current-prefix-symbols" variable nil nil [113869 113945])
            ("gnus-interactive" function (:arguments ("string" "params")) nil [113947 116274])
            ("gnus-symbolic-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [116276 116915])
            ("gnus-check-backend-function" function (:arguments ("func" "group")) nil [116946 117335])
            ("gnus-group-read-only-p" function (:arguments ("group")) nil [117337 117683])
            ("gnus-virtual-group-p" function (:arguments ("group")) nil [117685 117872])
            ("gnus-news-group-p" function (:arguments ("group" "article")) nil [117874 118549])
            ("gnus-use-long-file-name" function (:arguments ("symbol")) nil [118601 118932])
            ("gnus-generate-new-group-name" function (:arguments ("leaf")) nil [118971 119166])
            ("gnus-ephemeral-group-p" function (:arguments ("group")) nil [119168 119299])
            ("gnus-group-quit-config" function (:arguments ("group")) nil [119301 119426])
            ("gnus-kill-ephemeral-group" function (:arguments ("group")) nil [119428 119568])
            ("gnus-simplify-mode-line" function nil nil [119570 119933])
            ("gnus-server-add-address" function (:arguments ("method")) nil [119960 120390])
            ("gnus-method-to-server" function (:arguments ("method" "nocache" "no-enter-cache")) nil [120392 121519])
            ("gnus-server-to-method" function (:arguments ("server")) nil [121521 123337])
            ("gnus-server-get-method" function (:arguments ("group" "method")) nil [123339 123822])
            ("gnus-method-equal" function (:arguments ("ss1" "ss2")) nil [123824 124084])
            ("gnus-methods-equal-p" function (:arguments ("m1" "m2")) nil [124086 124382])
            ("gnus-sloppily-equal-method-parameters" function (:arguments ("m1" "m2")) nil [124384 125228])
            ("gnus-method-ephemeral-p" function (:arguments ("method")) nil [125230 125436])
            ("gnus-methods-sloppily-equal" function (:arguments ("m1" "m2")) nil [125438 125669])
            ("gnus-server-equal" function (:arguments ("m1" "m2")) nil [125671 125984])
            ("gnus-servers-using-backend" function (:arguments ("backend")) nil [125986 126237])
            ("gnus-archive-server-wanted-p" function nil nil [126239 126650])
            ("gnus-method-to-server-name" function (:arguments ("method")) nil [126652 126985])
            ("gnus-method-to-full-server-name" function (:arguments ("method")) nil [126987 127085])
            ("gnus-group-prefixed-name" function (:arguments ("group" "method" "full")) nil [127087 127596])
            ("gnus-group-full-name" function (:arguments ("group" "method")) nil [127598 127763])
            ("gnus-group-guess-full-name-from-command-method" function (:arguments ("group")) nil [127765 127995])
            ("gnus-group-real-prefix" function (:arguments ("group")) nil [127997 128198])
            ("gnus-group-short-name" function (:arguments ("group")) nil [128200 128402])
            ("gnus-group-prefixed-p" function (:arguments ("group")) nil [128404 128538])
            ("declare-function" code nil nil [128540 128604])
            ("gnus-summary-buffer-name" function (:arguments ("group")) nil [128606 128750])
            ("gnus-group-method" function (:arguments ("group")) nil [128752 129668])
            ("gnus-native-method-p" function (:arguments ("method")) nil [129670 129813])
            ("gnus-secondary-method-p" function (:arguments ("method")) nil [129815 130197])
            ("gnus-method-simplify" function (:arguments ("method")) nil [130199 130485])
            ("gnus-groups-from-server" function (:arguments ("server")) nil [130487 130809])
            ("gnus-group-foreign-p" function (:arguments ("group")) nil [130811 130976])
            ("gnus-group-native-p" function (:arguments ("group")) nil [130978 131090])
            ("gnus-group-secondary-p" function (:arguments ("group")) nil [131092 131240])
            ("gnus-parameters-get-parameter" function (:arguments ("group")) nil [131242 131731])
            ("gnus-expand-group-parameter" function (:arguments ("match" "value" "group")) nil [131733 132104])
            ("gnus-expand-group-parameters" function (:arguments ("match" "parameters" "group")) nil [132106 133226])
            ("gnus-group-fast-parameter" function (:arguments ("group" "symbol" "allow-list")) nil [133228 135106])
            ("gnus-group-find-parameter" function (:arguments ("group" "symbol" "allow-list")) nil [135108 135716])
            ("gnus-group-get-parameter" function (:arguments ("group" "symbol" "allow-list")) nil [135718 136182])
            ("gnus-group-parameter-value" function (:arguments ("params" "symbol" "allow-list" "present-p")) nil [136184 136844])
            ("gnus-group-add-parameter" function (:arguments ("group" "param")) nil [136846 137200])
            ("gnus-group-set-parameter" function (:arguments ("group" "name" "value")) nil [137202 137903])
            ("gnus-group-remove-parameter" function (:arguments ("group" "name")) nil [137905 138315])
            ("gnus-group-add-score" function (:arguments ("group" "score")) nil [138317 138577])
            ("gnus-short-group-name" function (:arguments ("group" "levels")) nil [138579 140193])
            ("gnus-narrow-to-body" function nil nil [140195 140393])
            ("gnus-apply-kill-file" function nil nil [140430 140725])
            ("gnus-kill-save-kill-buffer" function nil nil [140727 140990])
            ("gnus-kill-file-name" variable (:default-value "KILL") nil [140992 141129])
            ("gnus-newsgroup-kill-file" function (:arguments ("newsgroup")) nil [141131 141918])
            ("gnus-member-of-valid" function (:arguments ("symbol" "group")) nil [141940 142156])
            ("gnus-method-option-p" function (:arguments ("method" "option")) nil [142158 142425])
            ("gnus-similar-server-opened" function (:arguments ("method")) nil [142427 142976])
            ("gnus-server-extend-method" function (:arguments ("group" "method")) nil [142978 143735])
            ("gnus-server-status" function (:arguments ("method")) nil [143737 143850])
            ("gnus-group-name-to-method" function (:arguments ("group")) nil [143852 144215])
            ("gnus-server-string" function (:arguments ("server")) nil [144217 144520])
            ("gnus-same-method-different-name" function (:arguments ("method")) nil [144522 145001])
            ("gnus-find-method-for-group" function (:arguments ("group" "info")) nil [145003 146082])
            ("gnus-methods-using" function (:arguments ("feature")) nil [146084 146339])
            ("message-y-or-n-p" function (:prototype-flag t) nil [146341 146394])
            ("gnus-read-group" function (:arguments ("prompt" "default")) nil [146396 147534])
            ("gnus-read-method" function (:arguments ("prompt")) nil [147536 148662])
            ("gnus-agent-method-p" function (:arguments ("method-or-server")) nil [148685 149163])
            ("gnus-online" function (:arguments ("method")) nil [149165 149319])
            ("gnus-slave-no-server" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [149362 149525])
            ("gnus-no-server" function
               (:user-visible-flag t
                :arguments ("arg" "slave"))
                nil [149542 149962])
            ("gnus-slave" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [149979 150083])
            ("gnus-delete-gnus-frame" function nil nil [150085 150387])
            ("gnus-other-frame" function
               (:user-visible-flag t
                :arguments ("arg" "display"))
                nil [150404 152516])
            ("gnus" function
               (:user-visible-flag t
                :arguments ("arg" "dont-connect" "slave"))
                nil [152533 153198])
            ("declare-function" code nil nil [153200 153308])
            ("gnus-list-debbugs" function (:user-visible-flag t) nil [153310 153442])
            ("gnus-ems-redefine" code nil nil [153486 153505])
            ("gnus" package nil nil [153507 153522]))          
      :file "gnus.el.gz"
      :pointmax 153546
      :fsize 37410
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 102844 . 102845) (symbol 93038 . 93054) (open-paren 93037 . 93038) (close-paren 1041 . 1042) (symbol 1010 . 1027) (open-paren 1009 . 1010)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nndraft" include nil nil [1208 1226])
            ("gnus-draft" include nil nil [1227 1248])
            ("parse-time-string" function (:prototype-flag t) nil [1249 1299])
            ("gnus-delay" customgroup (:user-visible-flag t) nil [1301 1399])
            ("gnus-delay-group" variable (:default-value "delayed") nil [1401 1521])
            ("gnus-delay-header" variable (:default-value "X-Gnus-Delayed") nil [1523 1663])
            ("gnus-delay-default-delay" variable
               (:user-visible-flag t
                :default-value "3d")
                nil [1665 1773])
            ("gnus-delay-default-hour" variable
               (:user-visible-flag t
                :default-value 8)
                nil [1775 1933])
            ("gnus-delay-article" function
               (:user-visible-flag t
                :arguments ("delay"))
                nil [1950 4954])
            ("gnus-delay-send-queue" function (:user-visible-flag t) nil [4971 6129])
            ("gnus-delay-initialize" function (:arguments ("no-keymap" "no-check")) nil [6146 6575])
            ("gnus-delay" package nil nil [6577 6598]))          
      :file "gnus-delay.el.gz"
      :pointmax 6674
      :fsize 2585
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus-art" include nil nil [8176 8195])
            ("gnus-sum" include nil nil [8196 8215])
            ("gnus-outlook-deuglify-version" variable
               (:constant-flag t
                :default-value "1.5 Gnus version")
                nil [8217 8314])
            ("gnus-outlook-deuglify" customgroup (:user-visible-flag t) nil [8350 8500])
            ("gnus-outlook-deuglify-unwrap-min" variable (:default-value 45) nil [8502 8688])
            ("gnus-outlook-deuglify-unwrap-max" variable (:default-value 95) nil [8690 8859])
            ("gnus-outlook-deuglify-cite-marks" variable (:default-value ">|#%") nil [8861 9020])
            ("gnus-outlook-deuglify-unwrap-stop-chars" variable nil nil [9022 9328])
            ("gnus-outlook-deuglify-no-wrap-chars" variable (:default-value "`") nil [9330 9542])
            ("gnus-outlook-deuglify-attrib-cut-regexp" variable (:default-value "\\(On \\|Am \\)?\\(Mon\\|Tue\\|Wed\\|Thu\\|Fri\\|Sat\\|Sun\\),[^,]+, ") nil [9544 9829])
            ("gnus-outlook-deuglify-attrib-verb-regexp" variable (:default-value "wrote\\|writes\\|says\\|schrieb\\|schreibt\\|meinte\\|skrev\\|a écrit\\|schreef\\|escribió") nil [9831 10114])
            ("gnus-outlook-deuglify-attrib-end-regexp" variable (:default-value ": *\\|\\.\\.\\.") nil [10116 10318])
            ("gnus-outlook-display-hook" variable nil nil [10320 10535])
            ("gnus-outlook-display-article-buffer" function nil nil [10551 11077])
            ("gnus-article-outlook-unwrap-lines" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [11094 12342])
            ("gnus-outlook-rearrange-article" function (:arguments ("attr-start")) nil [12344 13406])
            ("gnus-outlook-repair-attribution-outlook" function nil nil [13507 14093])
            ("gnus-outlook-repair-attribution-block" function nil nil [14283 14802])
            ("gnus-outlook-repair-attribution-other" function nil nil [14883 15541])
            ("gnus-article-outlook-repair-attribution" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [15558 15987])
            ("gnus-article-outlook-rearrange-citation" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [15989 16444])
            ("gnus-outlook-deuglify-article" function
               (:user-visible-flag t
                :arguments ("nodisplay"))
                nil [16461 17051])
            ("gnus-article-outlook-deuglify-article" function (:user-visible-flag t) nil [17068 17232])
            ("deuglify" package nil nil [17234 17253]))          
      :file "deuglify.el.gz"
      :pointmax 17327
      :fsize 4925
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [953 966])
            ("gnus" include nil nil [969 984])
            ("gnus-ems" include nil nil [985 1004])
            ("message" include nil nil [1005 1023])
            ("gnus-art" include nil nil [1024 1043])
            ("gnus-util" include nil nil [1044 1064])
            ("gnus-post-method" variable
               (:user-visible-flag t
                :default-value (quote current))
                nil [1066 1848])
            ("gnus-outgoing-message-group" variable nil nil [1850 2484])
            ("make-obsolete-variable" code nil nil [2486 2574])
            ("gnus-mailing-list-groups" variable (:user-visible-flag t) nil [2576 2896])
            ("gnus-add-to-list" variable (:user-visible-flag t) nil [2898 3028])
            ("gnus-crosspost-complaint" variable (:default-value "Hi,

You posted the article below with the following Newsgroups header:

Newsgroups: %s

The %s group, at least, was an inappropriate recipient
of this message.  Please trim your Newsgroups header to exclude this
group before posting in the future.

Thank you.

") nil [3030 3536])
            ("gnus-message-setup-hook" variable nil nil [3538 3709])
            ("gnus-bug-create-help-buffer" variable
               (:user-visible-flag t
                :default-value t)
                nil [3711 3842])
            ("gnus-posting-styles" variable (:user-visible-flag t) nil [3844 4528])
            ("gnus-gcc-mark-as-read" variable nil nil [4530 4682])
            ("make-obsolete-variable" code nil nil [4684 4776])
            ("gnus-gcc-externalize-attachments" variable nil nil [4778 5202])
            ("gnus-gcc-self-resent-messages" variable (:default-value (quote no-gcc-self)) nil [5204 6001])
            ("gnus-define-group-parameter" code nil nil [6003 7793])
            ("gnus-debug-files" variable (:default-value (quote ("gnus.el" "gnus-sum.el" "gnus-group.el" "gnus-art.el" "gnus-start.el" "gnus-async.el" "gnus-msg.el" "gnus-score.el" "gnus-win.el" "gnus-topic.el" "gnus-agent.el" "gnus-cache.el" "gnus-srvr.el" "mm-util.el" "mm-decode.el" "nnmail.el" "message.el"))) nil [7795 8228])
            ("gnus-debug-exclude-variables" variable (:default-value (quote (mm-mime-mule-charset-alist nnmail-split-fancy message-minibuffer-local-map))) nil [8230 8495])
            ("gnus-discouraged-post-methods" variable (:default-value (quote (nndraft nnml nnimap nnmaildir nnmh nnfolder nndir))) nil [8497 8814])
            ("gnus-message-replysign" variable nil nil [8816 8996])
            ("gnus-message-replyencrypt" variable (:default-value t) nil [8998 9204])
            ("gnus-message-replysignencrypted" variable (:default-value t) nil [9206 9369])
            ("gnus-confirm-mail-reply-to-news" variable (:default-value (and gnus-novice-user (not gnus-expert-user))) nil [9371 10062])
            ("gnus-confirm-treat-mail-like-news" variable nil nil [10064 10411])
            ("gnus-summary-resend-default-address" variable (:default-value t) nil [10413 10683])
            ("gnus-message-highlight-citation" variable (:default-value t) nil [10685 10948])
            ("gnus-gcc-pre-body-encode-hook" variable nil nil [10950 11306])
            ("gnus-gcc-post-body-encode-hook" variable nil nil [11308 11666])
            ("gnus-message-citation-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11668 11724])
            ("gnus-inhibit-posting-styles" variable nil nil [11751 11830])
            ("gnus-article-yanked-articles" variable nil nil [11832 11873])
            ("gnus-message-buffer" variable (:default-value "*Mail Gnus*") nil [11874 11916])
            ("gnus-article-copy" variable nil nil [11917 11947])
            ("gnus-check-before-posting" variable nil nil [11948 11986])
            ("gnus-last-posting-server" variable nil nil [11987 12024])
            ("gnus-message-group-art" variable nil nil [12025 12060])
            ("gnus-msg-force-broken-reply-to" variable nil nil [12062 12105])
            ("gnus-bug-message" variable
               (:constant-flag t
                :default-value "Sending a bug report to the Gnus Towers.
========================================

The buffer below is a mail buffer.  When you press `C-c C-c', it will
be sent to the Gnus Bug Exterminators.

The thing near the bottom of the buffer is how the environment
settings will be included in the mail.  Please do not delete that.
They will tell the Bug People what your environment is, so that it
will be easier to locate the bugs.

If you have found a bug that makes Emacs go \"beep\", set
debug-on-error to t (`M-x set-variable RET debug-on-error RET t RET')
and include the backtrace in your bug report.

Please describe the bug in annoying, painstaking detail.

Thank you for your help in stamping out bugs.
")
                nil [12107 12844])
            ("gnus-uu-post-news" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12846 12891])
            ("gnus-define-keys" code nil nil [12931 13935])
            ("gnus-define-keys" code nil nil [13937 14149])
            ("gnus-inews-make-draft" function (:arguments ("articles")) nil [14176 14341])
            ("nnir-article-number" function (:prototype-flag t) nil [14343 14396])
            ("nnir-article-group" function (:prototype-flag t) nil [14397 14449])
            ("gnus-nnir-group-p" function (:prototype-flag t) nil [14450 14486])
            ("gnus-article-reply" variable nil nil [14489 14520])
            ("gnus-setup-message" function (:arguments ("config" "forms")) nil [14521 18462])
            ("gnus-inews-make-draft-meta-information" function (:arguments ("group" "articles")) nil [18464 18816])
            ("gnus-msg-mail" function
               (:user-visible-flag t
                :arguments ("to" "subject" "other-headers" "continue" "switch-action" "yank-action" "send-actions" "return-action"))
                nil [18833 19989])
            ("gnus-button-mailto" function (:arguments ("address")) nil [20006 20165])
            ("gnus-button-reply" function
               (:user-visible-flag t
                :arguments ("to-address" "wide"))
                nil [20182 20345])
            ("define-mail-user-agent" code nil nil [20362 20485])
            ("gnus-setup-posting-charset" function (:arguments ("group")) nil [20487 20939])
            ("gnus-inews-add-send-actions" function (:arguments ("winconf" "buffer" "article" "config" "yanked" "winconf-name")) nil [20941 22134])
            ("put" code nil nil [22136 22185])
            ("put" code nil nil [22186 22242])
            ("gnus-group-mail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [22304 23187])
            ("gnus-group-news" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [23189 24292])
            ("gnus-group-post-news" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [24294 25031])
            ("gnus-summary-mail-other-window" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [25033 25948])
            ("gnus-summary-news-other-window" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [25950 27301])
            ("gnus-summary-post-news" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [27303 27995])
            ("gnus-summary-followup" function
               (:user-visible-flag t
                :arguments ("yank" "force-news"))
                nil [27998 28840])
            ("gnus-summary-followup-with-original" function
               (:user-visible-flag t
                :arguments ("n" "force-news"))
                nil [28842 29172])
            ("gnus-summary-followup-to-mail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [29174 29399])
            ("gnus-summary-followup-to-mail-with-original" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [29401 29600])
            ("gnus-inews-yank-articles" function (:arguments ("articles")) nil [29602 30466])
            ("gnus-summary-cancel-article" function
               (:user-visible-flag t
                :arguments ("n" "symp"))
                nil [30468 31777])
            ("gnus-summary-supersede-article" function (:user-visible-flag t) nil [31779 32604])
            ("gnus-copy-article-buffer" function (:arguments ("article-buffer" "yank-string")) nil [32609 35253])
            ("gnus-post-news" function (:arguments ("post" "group" "header" "article-buffer" "yank" "subject" "force-news")) nil [35255 37439])
            ("gnus-msg-treat-broken-reply-to" function (:arguments ("force")) nil [37441 37739])
            ("gnus-post-method" function (:arguments ("arg" "group" "silent")) nil [37741 40466])
            ("gnus-extended-version" function (:user-visible-flag t) nil [40471 41062])
            ("gnus-summary-reply" function
               (:user-visible-flag t
                :arguments ("yank" "wide" "very-wide"))
                nil [41145 43341])
            ("gnus-summary-handle-replysign" function nil nil [43343 43999])
            ("gnus-summary-reply-with-original" function
               (:user-visible-flag t
                :arguments ("n" "wide"))
                nil [44001 44233])
            ("gnus-summary-reply-to-list-with-original" function
               (:user-visible-flag t
                :arguments ("n" "wide"))
                nil [44235 44618])
            ("gnus-summary-reply-broken-reply-to" function
               (:user-visible-flag t
                :arguments ("yank" "wide" "very-wide"))
                nil [44620 45083])
            ("gnus-summary-reply-broken-reply-to-with-original" function
               (:user-visible-flag t
                :arguments ("n" "wide"))
                nil [45085 45368])
            ("gnus-summary-wide-reply" function
               (:user-visible-flag t
                :arguments ("yank"))
                nil [45370 45681])
            ("gnus-summary-wide-reply-with-original" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [45683 45928])
            ("gnus-summary-very-wide-reply" function
               (:user-visible-flag t
                :arguments ("yank"))
                nil [45930 46285])
            ("gnus-summary-very-wide-reply-with-original" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [46287 46555])
            ("gnus-summary-mail-forward" function
               (:user-visible-flag t
                :arguments ("arg" "post"))
                nil [46557 48474])
            ("gnus-summary-resend-message-insert-gcc" function nil nil [48476 49697])
            ("gnus-summary-resend-message" function
               (:user-visible-flag t
                :arguments ("address" "n"))
                nil [49699 51782])
            ("gnus-summary-resend-message-edit" function (:user-visible-flag t) nil [51829 52900])
            ("gnus-summary-post-forward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [52902 53096])
            ("gnus-summary-mail-crosspost-complaint" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [53098 54332])
            ("gnus-inews-add-to-address" function (:arguments ("group")) nil [54334 54722])
            ("gnus-article-mail" function
               (:user-visible-flag t
                :arguments ("yank"))
                nil [54724 55179])
            ("nntp-server-type" variable nil nil [55181 55206])
            ("gnus-bug" function (:user-visible-flag t) nil [55207 56413])
            ("gnus-bug-kill-buffer" function nil nil [56415 56522])
            ("gnus-summary-yank-message" function
               (:user-visible-flag t
                :arguments ("buffer" "n"))
                nil [56524 56904])
            ("gnus-summary-resend-bounced-mail" function
               (:user-visible-flag t
                :arguments ("fetch"))
                nil [56961 58108])
            ("gnus-inews-group-method" function (:arguments ("group")) nil [58129 58644])
            ("gnus-inews-do-gcc" function (:arguments ("gcc")) nil [58711 62554])
            ("gnus-inews-insert-gcc" function (:arguments ("group")) nil [62556 65176])
            ("gnus-mailing-list-followup-to" function nil nil [65178 65587])
            ("gnus-configure-posting-styles" function (:arguments ("group-name")) nil [65610 71442])
            ("gnus-ems-redefine" code nil nil [71482 71501])
            ("gnus-msg" package nil nil [71503 71522]))          
      :file "gnus-msg.el.gz"
      :pointmax 71550
      :fsize 18169
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 966 . 967) (symbol 935 . 952) (open-paren 934 . 935)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [902 915])
            ("when" code nil nil [938 989])
            ("tool-bar-mode" variable nil nil [1018 1040])
            ("gnus-tmp-header" variable nil nil [1041 1065])
            ("gnus" include nil nil [1067 1082])
            ("gnus-group" include nil nil [1083 1104])
            ("gnus-spec" include nil nil [1105 1125])
            ("gnus-range" include nil nil [1126 1147])
            ("gnus-int" include nil nil [1148 1167])
            ("gnus-undo" include nil nil [1168 1188])
            ("gnus-util" include nil nil [1189 1209])
            ("gmm-utils" include nil nil [1210 1230])
            ("mm-decode" include nil nil [1231 1251])
            ("nnoo" include nil nil [1252 1267])
            ("gnus-summary-limit-include-cached" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1269 1333])
            ("gnus-cache-write-active" function (:prototype-flag t) nil [1334 1382])
            ("gnus-mailing-list-insinuate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1383 1438])
            ("turn-on-gnus-mailing-list-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1439 1497])
            ("gnus-pick-line-number" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1498 1549])
            ("mm-uu-dissect" function (:prototype-flag t) nil [1550 1583])
            ("gnus-article-outlook-deuglify-article" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1584 1710])
            ("gnus-article-outlook-unwrap-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1711 1773])
            ("gnus-article-outlook-repair-attribution" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1774 1842])
            ("gnus-article-outlook-rearrange-citation" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1843 1911])
            ("nnir-article-rsv" function (:prototype-flag t) nil [1912 1962])
            ("nnir-article-group" function (:prototype-flag t) nil [1963 2015])
            ("gnus-kill-summary-on-exit" variable
               (:user-visible-flag t
                :default-value t)
                nil [2017 2264])
            ("gnus-summary-next-group-on-exit" variable (:default-value t) nil [2266 2531])
            ("gnus-summary-stop-at-end-of-message" variable nil nil [2533 2769])
            ("gnus-fetch-old-headers" variable (:user-visible-flag t) nil [2771 3969])
            ("gnus-refer-thread-limit" variable
               (:user-visible-flag t
                :default-value 500)
                nil [3971 4237])
            ("gnus-refer-thread-use-nnir" variable (:user-visible-flag t) nil [4239 4482])
            ("gnus-summary-make-false-root" variable
               (:user-visible-flag t
                :default-value (quote adopt))
                nil [4484 5697])
            ("gnus-summary-make-false-root-always" variable nil nil [5699 5843])
            ("gnus-summary-gather-exclude-subject" variable
               (:user-visible-flag t
                :default-value "^ *$\\|^(none)$")
                nil [5845 6209])
            ("gnus-summary-gather-subject-limit" variable (:user-visible-flag t) nil [6211 6838])
            ("gnus-simplify-subject-functions" variable nil nil [6840 7216])
            ("gnus-simplify-ignored-prefixes" variable (:user-visible-flag t) nil [7218 7418])
            ("gnus-build-sparse-threads" variable (:user-visible-flag t) nil [7420 7838])
            ("gnus-summary-thread-gathering-function" variable
               (:user-visible-flag t
                :default-value (quote gnus-gather-threads-by-subject))
                nil [7840 8365])
            ("gnus-summary-same-subject" variable (:user-visible-flag t) nil [8367 8630])
            ("gnus-summary-goto-unread" variable (:user-visible-flag t) nil [8632 9296])
            ("gnus-summary-default-score" variable (:user-visible-flag t) nil [9298 9573])
            ("gnus-summary-default-high-score" variable (:user-visible-flag t) nil [9575 9821])
            ("gnus-summary-default-low-score" variable (:user-visible-flag t) nil [9823 10066])
            ("gnus-summary-zcore-fuzz" variable (:user-visible-flag t) nil [10068 10301])
            ("gnus-simplify-subject-fuzzy-regexp" variable (:user-visible-flag t) nil [10303 10611])
            ("gnus-show-threads" variable
               (:user-visible-flag t
                :default-value t)
                nil [10613 10733])
            ("gnus-thread-hide-subtree" variable (:user-visible-flag t) nil [10735 11221])
            ("gnus-thread-hide-killed" variable
               (:user-visible-flag t
                :default-value t)
                nil [11223 11351])
            ("gnus-thread-ignore-subject" variable
               (:user-visible-flag t
                :default-value t)
                nil [11353 11633])
            ("gnus-thread-operation-ignore-subject" variable
               (:user-visible-flag t
                :default-value t)
                nil [11635 12177])
            ("gnus-thread-indent-level" variable
               (:user-visible-flag t
                :default-value 4)
                nil [12179 12323])
            ("gnus-auto-extend-newsgroup" variable
               (:user-visible-flag t
                :default-value t)
                nil [12325 12483])
            ("gnus-auto-select-first" variable (:default-value t) nil [12485 13294])
            ("gnus-auto-select-subject" variable
               (:user-visible-flag t
                :default-value (quote unseen-or-unread))
                nil [13296 14151])
            ("gnus-auto-select-next" variable
               (:user-visible-flag t
                :default-value t)
                nil [14153 15077])
            ("gnus-auto-select-same" variable (:user-visible-flag t) nil [15079 15317])
            ("gnus-auto-select-on-ephemeral-exit" variable (:default-value (quote next-noselect)) nil [15319 16083])
            ("gnus-auto-goto-ignores" variable
               (:user-visible-flag t
                :default-value (quote unfetched))
                nil [16085 16940])
            ("gnus-summary-check-current" variable (:user-visible-flag t) nil [16942 17189])
            ("gnus-auto-center-summary" variable
               (:user-visible-flag t
                :default-value (max (or (bound-and-true-p scroll-margin) 0) 2))
                nil [17191 17625])
            ("gnus-auto-center-group" variable (:default-value t) nil [17627 17763])
            ("gnus-show-all-headers" variable (:user-visible-flag t) nil [17765 17921])
            ("gnus-summary-ignore-duplicates" variable (:user-visible-flag t) nil [17923 18077])
            ("gnus-single-article-buffer" variable (:user-visible-flag t) nil [18079 18297])
            ("gnus-widen-article-window" variable nil nil [18299 18489])
            ("gnus-break-pages" variable
               (:user-visible-flag t
                :default-value t)
                nil [18491 18687])
            ("gnus-move-split-methods" variable (:user-visible-flag t) nil [18689 19118])
            ("gnus-move-group-prefix-function" variable (:default-value (quote gnus-group-real-prefix)) nil [19120 19412])
            ("gnus-unread-mark" variable
               (:user-visible-flag t
                :default-value 32)
                nil [19562 19698])
            ("gnus-ticked-mark" variable
               (:user-visible-flag t
                :default-value 33)
                nil [19700 19815])
            ("gnus-dormant-mark" variable
               (:user-visible-flag t
                :default-value 63)
                nil [19817 19934])
            ("gnus-del-mark" variable
               (:user-visible-flag t
                :default-value 114)
                nil [19936 20047])
            ("gnus-read-mark" variable
               (:user-visible-flag t
                :default-value 82)
                nil [20049 20160])
            ("gnus-expirable-mark" variable
               (:user-visible-flag t
                :default-value 69)
                nil [20162 20283])
            ("gnus-killed-mark" variable
               (:user-visible-flag t
                :default-value 75)
                nil [20285 20400])
            ("gnus-spam-mark" variable
               (:user-visible-flag t
                :default-value 36)
                nil [20402 20531])
            ("gnus-kill-file-mark" variable
               (:user-visible-flag t
                :default-value 88)
                nil [20533 20665])
            ("gnus-low-score-mark" variable
               (:user-visible-flag t
                :default-value 89)
                nil [20667 20795])
            ("gnus-catchup-mark" variable
               (:user-visible-flag t
                :default-value 67)
                nil [20797 20925])
            ("gnus-replied-mark" variable
               (:user-visible-flag t
                :default-value 65)
                nil [20927 21062])
            ("gnus-forwarded-mark" variable
               (:user-visible-flag t
                :default-value 70)
                nil [21064 21218])
            ("gnus-recent-mark" variable
               (:user-visible-flag t
                :default-value 78)
                nil [21220 21362])
            ("gnus-cached-mark" variable
               (:user-visible-flag t
                :default-value 42)
                nil [21364 21494])
            ("gnus-saved-mark" variable
               (:user-visible-flag t
                :default-value 83)
                nil [21496 21624])
            ("gnus-unseen-mark" variable
               (:user-visible-flag t
                :default-value 46)
                nil [21626 21775])
            ("gnus-no-mark" variable
               (:user-visible-flag t
                :default-value 32)
                nil [21777 21958])
            ("gnus-ancient-mark" variable
               (:user-visible-flag t
                :default-value 79)
                nil [21960 22077])
            ("gnus-sparse-mark" variable
               (:user-visible-flag t
                :default-value 81)
                nil [22079 22203])
            ("gnus-canceled-mark" variable
               (:user-visible-flag t
                :default-value 71)
                nil [22205 22324])
            ("gnus-duplicate-mark" variable
               (:user-visible-flag t
                :default-value 77)
                nil [22326 22447])
            ("gnus-undownloaded-mark" variable
               (:user-visible-flag t
                :default-value 45)
                nil [22449 22605])
            ("gnus-downloaded-mark" variable
               (:user-visible-flag t
                :default-value 43)
                nil [22607 22740])
            ("gnus-downloadable-mark" variable
               (:user-visible-flag t
                :default-value 37)
                nil [22742 22882])
            ("gnus-unsendable-mark" variable
               (:user-visible-flag t
                :default-value 61)
                nil [22884 23015])
            ("gnus-score-over-mark" variable
               (:user-visible-flag t
                :default-value 43)
                nil [23017 23152])
            ("gnus-score-below-mark" variable
               (:user-visible-flag t
                :default-value 45)
                nil [23154 23289])
            ("gnus-empty-thread-mark" variable
               (:user-visible-flag t
                :default-value 32)
                nil [23291 23434])
            ("gnus-not-empty-thread-mark" variable
               (:user-visible-flag t
                :default-value 61)
                nil [23436 23567])
            ("gnus-view-pseudo-asynchronously" variable (:user-visible-flag t) nil [23569 23725])
            ("gnus-auto-expirable-marks" variable
               (:user-visible-flag t
                :default-value (list gnus-killed-mark gnus-del-mark gnus-catchup-mark gnus-low-score-mark gnus-ancient-mark gnus-read-mark gnus-duplicate-mark))
                nil [23727 24045])
            ("gnus-inhibit-user-auto-expire" variable
               (:user-visible-flag t
                :default-value t)
                nil [24047 24271])
            ("gnus-mark-copied-or-moved-articles-as-expirable" variable nil nil [24273 24787])
            ("gnus-view-pseudos" variable (:user-visible-flag t) nil [24789 25113])
            ("gnus-view-pseudos-separately" variable
               (:user-visible-flag t
                :default-value t)
                nil [25115 25389])
            ("gnus-insert-pseudo-articles" variable
               (:user-visible-flag t
                :default-value t)
                nil [25391 25541])
            ("gnus-summary-dummy-line-format" variable
               (:user-visible-flag t
                :default-value "   %(:                             :%) %S
")
                nil [25543 25987])
            ("gnus-summary-mode-line-format" variable
               (:user-visible-flag t
                :default-value "Gnus: %g [%A] %Z")
                nil [25989 26755])
            ("gnus-list-identifiers" variable nil nil [26757 27076])
            ("gnus-summary-mark-below" variable (:user-visible-flag t) nil [27078 27307])
            ("gnus-widget-reversible-match" function (:arguments ("widget" "value")) nil [27309 27657])
            ("gnus-widget-reversible-to-internal" function (:arguments ("widget" "value")) nil [27659 27998])
            ("gnus-widget-reversible-to-external" function (:arguments ("widget" "value")) nil [28000 28346])
            ("define-widget" code nil nil [28348 28582])
            ("gnus-article-sort-functions" variable
               (:user-visible-flag t
                :default-value (quote (gnus-article-sort-by-number)))
                nil [28584 30275])
            ("gnus-thread-sort-functions" variable
               (:user-visible-flag t
                :default-value (quote (gnus-thread-sort-by-number)))
                nil [30277 32617])
            ("gnus-subthread-sort-functions" variable
               (:user-visible-flag t
                :default-value (quote gnus-thread-sort-functions))
                nil [32619 33650])
            ("gnus-thread-score-function" variable
               (:user-visible-flag t
                :default-value (quote +))
                nil [33652 33979])
            ("gnus-summary-expunge-below" variable nil nil [33981 34228])
            ("gnus-thread-expunge-below" variable nil nil [34230 34590])
            ("gnus-summary-mode-hook" variable (:user-visible-flag t) nil [34592 34839])
            ("when" code nil nil [34913 35158])
            ("gnus-summary-menu-hook" variable (:user-visible-flag t) nil [35160 35301])
            ("gnus-summary-exit-hook" variable (:user-visible-flag t) nil [35303 35485])
            ("gnus-summary-prepare-hook" variable (:user-visible-flag t) nil [35487 35702])
            ("gnus-summary-prepared-hook" variable (:user-visible-flag t) nil [35704 35873])
            ("gnus-summary-generate-hook" variable (:user-visible-flag t) nil [35875 36095])
            ("gnus-select-group-hook" variable (:user-visible-flag t) nil [36097 36582])
            ("gnus-select-article-hook" variable (:user-visible-flag t) nil [36584 36764])
            ("gnus-visual-mark-article-hook" variable
               (:user-visible-flag t
                :default-value (list (quote gnus-highlight-selected-summary)))
                nil [36766 37062])
            ("gnus-parse-headers-hook" variable (:user-visible-flag t) nil [37064 37187])
            ("gnus-exit-group-hook" variable (:user-visible-flag t) nil [37189 37378])
            ("gnus-summary-update-hook" variable (:user-visible-flag t) nil [37380 37696])
            ("gnus-mark-article-hook" variable
               (:user-visible-flag t
                :default-value (quote (gnus-summary-mark-read-and-unread-as-read)))
                nil [37698 37983])
            ("gnus-group-no-more-groups-hook" variable (:user-visible-flag t) nil [37985 38150])
            ("gnus-ps-print-hook" variable (:user-visible-flag t) nil [38152 38279])
            ("gnus-summary-article-move-hook" variable (:user-visible-flag t) nil [38281 38463])
            ("gnus-summary-article-delete-hook" variable (:user-visible-flag t) nil [38465 38616])
            ("gnus-summary-article-expire-hook" variable (:user-visible-flag t) nil [38618 38769])
            ("gnus-summary-display-arrow" variable
               (:user-visible-flag t
                :default-value (and (fboundp (quote display-graphic-p)) (display-graphic-p)))
                nil [38771 38999])
            ("gnus-summary-selected-face" variable (:default-value (quote gnus-summary-selected)) nil [39001 39180])
            ("gnus-tmp-downloaded" variable nil nil [39182 39214])
            ("gnus-summary-highlight" variable
               (:user-visible-flag t
                :default-value (quote (((eq mark gnus-canceled-mark) . gnus-summary-cancelled) ((and uncached (> score default-high)) . gnus-summary-high-undownloaded) ((and uncached (< score default-low)) . gnus-summary-low-undownloaded) (uncached . gnus-summary-normal-undownloaded) ((and (> score default-high) (or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark))) . gnus-summary-high-ticked) ((and (< score default-low) (or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark))) . gnus-summary-low-ticked) ((or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark)) . gnus-summary-normal-ticked) ((and (> score default-high) (eq mark gnus-ancient-mark)) . gnus-summary-high-ancient) ((and (< score default-low) (eq mark gnus-ancient-mark)) . gnus-summary-low-ancient) ((eq mark gnus-ancient-mark) . gnus-summary-normal-ancient) ((and (> score default-high) (eq mark gnus-unread-mark)) . gnus-summary-high-unread) ((and (< score default-low) (eq mark gnus-unread-mark)) . gnus-summary-low-unread) ((eq mark gnus-unread-mark) . gnus-summary-normal-unread) ((> score default-high) . gnus-summary-high-read) ((< score default-low) . gnus-summary-low-read) (t . gnus-summary-normal-read))))
                nil [39216 41325])
            ("put" code nil nil [41326 41379])
            ("gnus-alter-header-function" variable nil nil [41381 41671])
            ("gnus-decode-encoded-word-function" variable (:default-value (quote mail-decode-encoded-word-string)) nil [41673 41805])
            ("gnus-decode-encoded-address-function" variable (:default-value (quote mail-decode-encoded-address-string)) nil [41807 41948])
            ("gnus-extra-headers" variable
               (:user-visible-flag t
                :default-value (quote (To Cc Keywords Gcc Newsgroups X-GM-LABELS)))
                nil [41950 42120])
            ("gnus-ignored-from-addresses" variable
               (:user-visible-flag t
                :default-value (and user-mail-address (not (string= user-mail-address "")) (regexp-quote user-mail-address)))
                nil [42122 42483])
            ("gnus-ignored-from-addresses" function nil nil [42485 42576])
            ("gnus-summary-to-prefix" variable
               (:user-visible-flag t
                :default-value "-> ")
                nil [42578 42774])
            ("gnus-summary-newsgroup-prefix" variable
               (:user-visible-flag t
                :default-value "=> ")
                nil [42776 42997])
            ("gnus-newsgroup-ignored-charsets" variable (:default-value (quote (unknown-8bit x-unknown))) nil [42999 43280])
            ("gnus-newsgroup-maximum-articles" variable nil nil [43282 43706])
            ("gnus-define-group-parameter" code nil nil [43708 44508])
            ("gnus-group-highlight-words-alist" variable nil nil [44510 44993])
            ("gnus-summary-show-article-charset-alist" variable nil nil [44995 45338])
            ("gnus-preserve-marks" variable (:default-value t) nil [45340 45515])
            ("gnus-alter-articles-to-read-function" variable nil nil [45517 45703])
            ("gnus-orphan-score" variable (:user-visible-flag t) nil [45705 45871])
            ("gnus-summary-save-parts-default-mime" variable
               (:user-visible-flag t
                :default-value "image/.*")
                nil [45873 46225])
            ("gnus-read-all-available-headers" variable nil nil [46227 46549])
            ("gnus-summary-pipe-output-default-command" variable nil nil [46551 46999])
            ("gnus-summary-muttprint-program" variable (:default-value "muttprint") nil [47001 47268])
            ("gnus-article-loose-mime" variable (:default-value t) nil [47270 47670])
            ("gnus-article-emulate-mime" variable (:default-value t) nil [47672 48005])
            ("gnus-summary-display-cache" variable nil nil [48031 48070])
            ("gnus-article-mime-handles" variable nil nil [48071 48109])
            ("gnus-article-decoded-p" variable nil nil [48110 48145])
            ("gnus-article-charset" variable nil nil [48146 48179])
            ("gnus-article-ignored-charsets" variable nil nil [48180 48222])
            ("gnus-scores-exclude-files" variable nil nil [48223 48261])
            ("gnus-page-broken" variable nil nil [48262 48291])
            ("gnus-original-article" variable nil nil [48293 48327])
            ("gnus-article-internal-prepare-hook" variable nil nil [48328 48375])
            ("gnus-newsgroup-process-stack" variable nil nil [48376 48417])
            ("gnus-thread-indent-array" variable nil nil [48419 48456])
            ("gnus-thread-indent-array-level" variable (:default-value gnus-thread-indent-level) nil [48457 48521])
            ("gnus-sort-gathered-threads-function" variable (:default-value (quote gnus-thread-sort-by-number)) nil [48522 48688])
            ("gnus-summary-save-parts-type-history" variable nil nil [48690 48739])
            ("gnus-summary-save-parts-last-directory" variable (:default-value mm-default-directory) nil [48740 48808])
            ("gnus-summary-inhibit-highlight" variable nil nil [48847 48890])
            ("gnus-newsgroup-selected-overlay" variable nil nil [48891 48935])
            ("gnus-inhibit-limiting" variable nil nil [48936 48970])
            ("gnus-newsgroup-adaptive-score-file" variable nil nil [48971 49018])
            ("gnus-current-score-file" variable nil nil [49019 49055])
            ("gnus-current-move-group" variable nil nil [49056 49092])
            ("gnus-current-copy-group" variable nil nil [49093 49129])
            ("gnus-current-crosspost-group" variable nil nil [49130 49171])
            ("gnus-newsgroup-display" variable nil nil [49172 49207])
            ("gnus-newsgroup-dependencies" variable nil nil [49209 49249])
            ("gnus-newsgroup-adaptive" variable nil nil [49250 49286])
            ("gnus-summary-display-article-function" variable nil nil [49287 49337])
            ("gnus-summary-highlight-line-function" variable nil nil [49338 49442])
            ("gnus-summary-line-format-alist" variable (:default-value (\` ((78 (\, (macroexpand (quote (mail-header-number gnus-tmp-header)))) 100) (83 (\, (macroexpand (quote (mail-header-subject gnus-tmp-header)))) 115) (115 gnus-tmp-subject-or-nil 115) (110 gnus-tmp-name 115) (65 (car (cdr (funcall gnus-extract-address-components gnus-tmp-from))) 115) (97 (or (car (funcall gnus-extract-address-components gnus-tmp-from)) gnus-tmp-from) 115) (70 gnus-tmp-from 115) (120 (\, (macroexpand (quote (mail-header-xref gnus-tmp-header)))) 115) (68 (\, (macroexpand (quote (mail-header-date gnus-tmp-header)))) 115) (100 (gnus-dd-mmm (mail-header-date gnus-tmp-header)) 115) (111 (gnus-date-iso8601 (mail-header-date gnus-tmp-header)) 115) (77 (\, (macroexpand (quote (mail-header-id gnus-tmp-header)))) 115) (114 (\, (macroexpand (quote (mail-header-references gnus-tmp-header)))) 115) (99 (or (mail-header-chars gnus-tmp-header) 0) 100) (107 (gnus-summary-line-message-size gnus-tmp-header) 115) (76 gnus-tmp-lines 115) (90 (or (nnir-article-rsv (mail-header-number gnus-tmp-header)) 0) 100) (71 (or (nnir-article-group (mail-header-number gnus-tmp-header)) "") 115) (103 (or (gnus-group-short-name (nnir-article-group (mail-header-number gnus-tmp-header))) "") 115) (79 gnus-tmp-downloaded 99) (73 gnus-tmp-indentation 115) (84 (if (= gnus-tmp-level 0) "" (make-string (frame-width) 32)) 115) (82 gnus-tmp-replied 99) (91 gnus-tmp-opening-bracket 99) (93 gnus-tmp-closing-bracket 99) (62 (make-string gnus-tmp-level 32) 115) (60 (make-string (max 0 (- 20 gnus-tmp-level)) 32) 115) (105 gnus-tmp-score 100) (122 gnus-tmp-score-char 99) (86 (gnus-thread-total-score (and (boundp (quote thread)) (car thread))) 100) (85 gnus-tmp-unread 99) (102 (gnus-summary-from-or-to-or-newsgroups gnus-tmp-header gnus-tmp-from) 115) (116 (gnus-summary-number-of-articles-in-thread (and (boundp (quote thread)) (car thread)) gnus-tmp-level) 100) (101 (gnus-summary-number-of-articles-in-thread (and (boundp (quote thread)) (car thread)) gnus-tmp-level t) 99) (117 gnus-tmp-user-defined 115) (80 (gnus-pick-line-number) 100) (66 gnus-tmp-thread-tree-header-string 115) (user-date (gnus-user-date (\, (macroexpand (quote (mail-header-date gnus-tmp-header))))) 115)))) nil [49444 51906])
            ("gnus-summary-dummy-line-format-alist" variable (:default-value (\` ((83 gnus-tmp-subject 115) (78 gnus-tmp-number 100) (117 gnus-tmp-user-defined 115)))) nil [51908 52045])
            ("gnus-summary-mode-line-format-alist" variable (:default-value (\` ((71 gnus-tmp-group-name 115) (103 (gnus-short-group-name gnus-tmp-group-name) 115) (112 (gnus-group-real-name gnus-tmp-group-name) 115) (65 gnus-tmp-article-number 100) (90 gnus-tmp-unread-and-unselected 115) (86 gnus-version 115) (85 gnus-tmp-unread-and-unticked 100) (83 gnus-tmp-subject 115) (101 gnus-tmp-unselected 100) (117 gnus-tmp-user-defined 115) (100 (length gnus-newsgroup-dormant) 100) (116 (length gnus-newsgroup-marked) 100) (104 (length gnus-newsgroup-spam-marked) 100) (114 (length gnus-newsgroup-reads) 100) (122 (gnus-summary-article-score gnus-tmp-article-number) 100) (69 gnus-newsgroup-expunged-tally 100) (115 (gnus-current-score-file-nondirectory) 115)))) nil [52047 52810])
            ("gnus-article-mode-line-format-alist" variable (:default-value (nconc (quote ((119 (gnus-article-wash-status) 115) (109 (gnus-article-mime-part-status) 115))) gnus-summary-mode-line-format-alist)) nil [52877 53051])
            ("gnus-last-search-regexp" variable nil nil [53053 53136])
            ("gnus-last-shell-command" variable nil nil [53138 53212])
            ("gnus-newsgroup-agentized" variable nil nil [53214 53343])
            ("gnus-newsgroup-begin" variable nil nil [53344 53377])
            ("gnus-newsgroup-end" variable nil nil [53378 53409])
            ("gnus-newsgroup-last-rmail" variable nil nil [53410 53448])
            ("gnus-newsgroup-last-mail" variable nil nil [53449 53486])
            ("gnus-newsgroup-last-folder" variable nil nil [53487 53526])
            ("gnus-newsgroup-last-file" variable nil nil [53527 53564])
            ("gnus-newsgroup-last-directory" variable nil nil [53565 53607])
            ("gnus-newsgroup-auto-expire" variable nil nil [53608 53647])
            ("gnus-newsgroup-active" variable nil nil [53648 53682])
            ("gnus-newsgroup-highest" variable nil nil [53683 53718])
            ("gnus-newsgroup-data" variable nil nil [53720 53752])
            ("gnus-newsgroup-data-reverse" variable nil nil [53753 53793])
            ("gnus-newsgroup-limit" variable nil nil [53794 53827])
            ("gnus-newsgroup-limits" variable nil nil [53828 53862])
            ("gnus-summary-use-undownloaded-faces" variable nil nil [53863 53911])
            ("gnus-newsgroup-unreads" variable nil nil [53913 54009])
            ("gnus-newsgroup-unselected" variable nil nil [54011 54121])
            ("gnus-newsgroup-reads" variable nil nil [54123 54227])
            ("gnus-newsgroup-expunged-tally" variable nil nil [54229 54271])
            ("gnus-newsgroup-marked" variable nil nil [54273 54393])
            ("gnus-newsgroup-spam-marked" variable nil nil [54395 54496])
            ("gnus-newsgroup-killed" variable nil nil [54498 54607])
            ("gnus-newsgroup-cached" variable nil nil [54609 54705])
            ("gnus-newsgroup-saved" variable nil nil [54707 54783])
            ("gnus-newsgroup-kill-headers" variable nil nil [54785 54825])
            ("gnus-newsgroup-replied" variable nil nil [54827 54935])
            ("gnus-newsgroup-forwarded" variable nil nil [54937 55046])
            ("gnus-newsgroup-expirable" variable nil nil [55048 55159])
            ("gnus-newsgroup-processable" variable nil nil [55161 55269])
            ("gnus-newsgroup-downloadable" variable nil nil [55271 55387])
            ("gnus-newsgroup-unfetched" variable nil nil [55389 55598])
            ("gnus-newsgroup-undownloaded" variable nil nil [55600 55716])
            ("gnus-newsgroup-unsendable" variable nil nil [55718 55822])
            ("gnus-newsgroup-bookmarks" variable nil nil [55824 55928])
            ("gnus-newsgroup-dormant" variable nil nil [55930 56027])
            ("gnus-newsgroup-unseen" variable nil nil [56029 56117])
            ("gnus-newsgroup-seen" variable nil nil [56119 56204])
            ("gnus-newsgroup-unexist" variable nil nil [56206 56300])
            ("gnus-newsgroup-articles" variable nil nil [56302 56385])
            ("gnus-newsgroup-scored" variable nil nil [56387 56475])
            ("gnus-newsgroup-headers" variable nil nil [56477 56566])
            ("gnus-newsgroup-threads" variable nil nil [56568 56603])
            ("gnus-newsgroup-prepared" variable nil nil [56605 56699])
            ("gnus-newsgroup-ancient" variable nil nil [56701 56808])
            ("gnus-newsgroup-sparse" variable nil nil [56810 56844])
            ("gnus-current-article" variable nil nil [56846 56879])
            ("gnus-article-current" variable nil nil [56880 56913])
            ("gnus-current-headers" variable nil nil [56914 56947])
            ("gnus-have-all-headers" variable nil nil [56948 56982])
            ("gnus-last-article" variable nil nil [56983 57013])
            ("gnus-newsgroup-history" variable nil nil [57014 57049])
            ("gnus-newsgroup-charset" variable nil nil [57050 57085])
            ("gnus-newsgroup-ephemeral-charset" variable nil nil [57086 57131])
            ("gnus-newsgroup-ephemeral-ignored-charsets" variable nil nil [57132 57186])
            ("gnus-article-before-search" variable nil nil [57188 57227])
            ("gnus-summary-local-variables" variable (:default-value (quote (gnus-newsgroup-name gnus-newsgroup-unreads gnus-newsgroup-unselected gnus-newsgroup-marked gnus-newsgroup-spam-marked gnus-newsgroup-reads gnus-newsgroup-saved gnus-newsgroup-replied gnus-newsgroup-forwarded gnus-newsgroup-expirable gnus-newsgroup-killed gnus-newsgroup-unseen gnus-newsgroup-seen gnus-newsgroup-unexist gnus-newsgroup-cached gnus-newsgroup-downloadable gnus-newsgroup-undownloaded gnus-newsgroup-unsendable gnus-newsgroup-begin gnus-newsgroup-end gnus-newsgroup-last-rmail gnus-newsgroup-last-mail gnus-newsgroup-last-folder gnus-newsgroup-last-file gnus-newsgroup-last-directory gnus-newsgroup-auto-expire gnus-newsgroup-processable gnus-newsgroup-unfetched gnus-newsgroup-articles gnus-newsgroup-bookmarks gnus-newsgroup-dormant gnus-newsgroup-headers gnus-newsgroup-threads gnus-newsgroup-prepared gnus-summary-highlight-line-function gnus-current-article gnus-current-headers gnus-have-all-headers gnus-last-article gnus-article-internal-prepare-hook (gnus-summary-article-delete-hook . global) (gnus-summary-article-move-hook . global) gnus-newsgroup-dependencies gnus-newsgroup-selected-overlay gnus-newsgroup-scored gnus-newsgroup-kill-headers gnus-thread-expunge-below gnus-score-alist gnus-current-score-file (gnus-summary-expunge-below . global) (gnus-summary-mark-below . global) (gnus-orphan-score . global) gnus-newsgroup-active gnus-scores-exclude-files gnus-newsgroup-highest gnus-newsgroup-history gnus-newsgroup-ancient gnus-newsgroup-sparse gnus-newsgroup-process-stack (gnus-newsgroup-adaptive . gnus-use-adaptive-scoring) gnus-newsgroup-adaptive-score-file (gnus-reffed-article-number . -1) (gnus-newsgroup-expunged-tally . 0) gnus-cache-removable-articles gnus-newsgroup-data gnus-newsgroup-data-reverse gnus-newsgroup-limit gnus-newsgroup-limits gnus-newsgroup-charset gnus-newsgroup-display gnus-summary-use-undownloaded-faces))) nil [57229 59423])
            ("gnus-newsgroup-variables" variable nil nil [59425 60372])
            ("let" code nil nil [60514 60582])
            ("gnus-decode-encoded-word-methods" variable (:default-value (quote (mail-decode-encoded-word-string))) nil [60601 61110])
            ("gnus-decode-encoded-word-methods-cache" variable nil nil [61112 61163])
            ("gnus-multi-decode-encoded-word-string" function (:arguments ("string")) nil [61165 61925])
            ("gnus-simplify-whitespace" function (:arguments ("str")) nil [61955 62425])
            ("gnus-simplify-all-whitespace" function (:arguments ("str")) nil [62427 62597])
            ("gnus-simplify-subject-re" function (:arguments ("subject")) nil [62599 62791])
            ("gnus-simplify-subject" function (:arguments ("subject" "re-only")) nil [62793 63634])
            ("gnus-simplify-buffer-fuzzy-step" function (:arguments ("regexp" "newtext")) nil [63726 63900])
            ("gnus-simplify-buffer-fuzzy" function (:arguments ("regexp")) nil [63902 65058])
            ("gnus-simplify-subject-fuzzy" function (:arguments ("subject")) nil [65060 65601])
            ("gnus-simplify-subject-fully" function (:arguments ("subject")) nil [65603 66196])
            ("gnus-subject-equal" function (:arguments ("s1" "s2" "simple-first")) nil [66198 66553])
            ("gnus-summary-bubble-group" function nil nil [66555 66787])
            ("put" code nil nil [66822 66867])
            ("gnus-article-commands-menu" variable nil nil [66869 66904])
            ("gnus-define-keys" code nil nil [66930 71422])
            ("gnus-define-keys" code nil nil [71453 72299])
            ("gnus-define-keys" code nil nil [72301 72492])
            ("gnus-define-keys" code nil nil [72494 73625])
            ("gnus-define-keys" code nil nil [73627 74212])
            ("gnus-define-keys" code nil nil [74214 74900])
            ("gnus-define-keys" code nil nil [74902 75126])
            ("gnus-define-keys" code nil nil [75128 75613])
            ("gnus-define-keys" code nil nil [75615 76601])
            ("gnus-define-keys" code nil nil [76603 77680])
            ("gnus-define-keys" code nil nil [77682 77961])
            ("gnus-define-keys" code nil nil [77990 78414])
            ("gnus-define-keys" code nil nil [78416 78637])
            ("gnus-define-keys" code nil nil [78639 78833])
            ("gnus-define-keys" code nil nil [78835 79217])
            ("gnus-define-keys" code nil nil [79219 79471])
            ("gnus-define-keys" code nil nil [79473 79787])
            ("gnus-define-keys" code nil nil [79789 80203])
            ("gnus-define-keys" code nil nil [80205 80388])
            ("gnus-define-keys" code nil nil [80390 80997])
            ("gnus-define-keys" code nil nil [80999 81468])
            ("gnus-define-keys" code nil nil [81470 82081])
            ("gnus-define-keys" code nil nil [82083 82705])
            ("gnus-define-keys" code nil nil [82707 83160])
            ("gnus-define-keys" code nil nil [83162 83588])
            ("gnus-article-post-menu" variable nil nil [83590 83625])
            ("gnus-summary-menu-maxlen" variable
               (:constant-flag t
                :default-value 20)
                nil [83627 83665])
            ("gnus-summary-menu-split" function (:arguments ("menu")) nil [83667 84441])
            ("gnus-summary-make-menu-bar" function nil nil [84443 107670])
            ("gnus-summary-tool-bar-map" variable nil nil [107672 107710])
            ("gnus-summary-tool-bar-update" function (:arguments ("symbol" "value")) nil [107915 108309])
            ("gnus-summary-tool-bar" variable (:default-value (if (eq gmm-tool-bar-style (quote gnome)) (quote gnus-summary-tool-bar-gnome) (quote gnus-summary-tool-bar-retro))) nil [108311 109082])
            ("gnus-summary-tool-bar-gnome" variable (:default-value (quote ((gnus-summary-post-news "mail/compose" nil) (gnus-summary-insert-new-articles "mail/inbox" nil :visible (or (not gnus-agent) gnus-plugged)) (gnus-summary-reply-with-original "mail/reply") (gnus-summary-reply "mail/reply" nil :visible nil) (gnus-summary-followup-with-original "mail/reply-all") (gnus-summary-followup "mail/reply-all" nil :visible nil) (gnus-summary-mail-forward "mail/forward") (gnus-summary-save-article "mail/save") (gnus-summary-search-article-forward "search" nil :visible nil) (gnus-summary-print-article "print") (gnus-summary-tick-article-forward "flag-followup" nil :visible nil) (gnus-summary-save-newsrc "save" nil :visible nil) (gnus-summary-prev-article "left-arrow") (gnus-summary-next-article "right-arrow") (gnus-summary-next-page "next-page") (gnus-summary-mark-as-expirable "delete" nil :visible (gnus-check-backend-function (quote request-expire-articles) gnus-newsgroup-name)) (gnus-summary-mark-as-spam "mail/spam" t :visible (and (fboundp (quote spam-group-ham-contents-p)) (spam-group-ham-contents-p gnus-newsgroup-name)) :help "Mark as spam") (gnus-summary-mark-as-read-forward "mail/not-spam" nil :visible (and (fboundp (quote spam-group-spam-contents-p)) (spam-group-spam-contents-p gnus-newsgroup-name))) (gnus-summary-exit "exit") (gmm-customize-mode "preferences" t :help "Edit mode preferences") (gnus-info-find-node "help")))) nil [109084 111312])
            ("gnus-summary-tool-bar-retro" variable (:default-value (quote ((gnus-summary-prev-unread-article "gnus/prev-ur") (gnus-summary-next-unread-article "gnus/next-ur") (gnus-summary-post-news "gnus/post") (gnus-summary-followup-with-original "gnus/fuwo") (gnus-summary-followup "gnus/followup") (gnus-summary-reply-with-original "gnus/reply-wo") (gnus-summary-reply "gnus/reply") (gnus-summary-caesar-message "gnus/rot13") (gnus-uu-decode-uu "gnus/uu-decode") (gnus-summary-save-article-file "gnus/save-aif") (gnus-summary-save-article "gnus/save-art") (gnus-uu-post-news "gnus/uu-post") (gnus-summary-catchup "gnus/catchup") (gnus-summary-catchup-and-exit "gnus/cu-exit") (gnus-summary-exit "gnus/exit-summ") (gnus-summary-print-article "gnus/print" nil :visible nil) (gnus-summary-mark-as-expirable "gnus/close" nil :visible nil) (gnus-summary-save-newsrc "gnus/save" nil :visible nil) (gnus-summary-search-article-forward "gnus/search" nil :visible nil) (gnus-info-find-node "gnus/help" nil :visible nil)))) nil [111314 112940])
            ("gnus-summary-tool-bar-zap-list" variable (:default-value t) nil [112942 113319])
            ("image-load-path" variable nil nil [113321 113345])
            ("tool-bar-map" variable nil nil [113346 113367])
            ("gnus-summary-make-tool-bar" function (:arguments ("force")) nil [113369 114279])
            ("gnus-make-score-map" function (:arguments ("type")) nil [114281 116148])
            ("declare-function" code nil nil [116151 116213])
            ("bookmark-make-record-function" variable nil nil [116214 116252])
            ("bidi-paragraph-direction" variable nil nil [116255 116288])
            ("gnus-summary-mode" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [116290 118821])
            ("gnus-summary-make-local-variables" function nil nil [118823 119349])
            ("gnus-data-number" function (:arguments ("data")) nil [119379 119428])
            ("gnus-data-set-number" function (:arguments ("data" "number")) nil [119430 119501])
            ("gnus-data-mark" function (:arguments ("data")) nil [119503 119552])
            ("gnus-data-set-mark" function (:arguments ("data" "mark")) nil [119554 119630])
            ("gnus-data-pos" function (:arguments ("data")) nil [119632 119680])
            ("gnus-data-set-pos" function (:arguments ("data" "pos")) nil [119682 119755])
            ("gnus-data-header" function (:arguments ("data")) nil [119757 119808])
            ("gnus-data-set-header" function (:arguments ("data" "header")) nil [119810 119887])
            ("gnus-data-level" function (:arguments ("data")) nil [119889 119939])
            ("gnus-data-unread-p" function (:arguments ("data")) nil [119941 120015])
            ("gnus-data-read-p" function (:arguments ("data")) nil [120017 120090])
            ("gnus-data-pseudo-p" function (:arguments ("data")) nil [120092 120153])
            ("gnus-data-find" function (:arguments ("number")) nil [120155 120227])
            ("gnus-data-find-list" function (:arguments ("number" "data")) nil [120229 120377])
            ("gnus-data-make" function (:arguments ("number" "mark" "pos" "header" "level")) nil [120379 120479])
            ("gnus-data-enter" function (:arguments ("after-article" "number" "mark" "pos" "header" "level" "offset")) nil [120481 120858])
            ("gnus-data-enter-list" function (:arguments ("after-article" "list" "offset")) nil [120860 121681])
            ("gnus-data-remove" function (:arguments ("article" "offset")) nil [121683 122240])
            ("gnus-data-list" function (:arguments ("backward")) nil [122242 122433])
            ("gnus-data-update-list" function (:arguments ("data" "offset")) nil [122435 122681])
            ("gnus-summary-article-pseudo-p" function (:arguments ("article")) nil [122683 122849])
            ("gnus-summary-article-sparse-p" function (:arguments ("article")) nil [122851 122999])
            ("gnus-summary-article-ancient-p" function (:arguments ("article")) nil [123001 123151])
            ("gnus-article-children" function (:arguments ("number")) nil [123153 123523])
            ("gnus-summary-skip-intangible" function nil nil [123525 123749])
            ("gnus-summary-article-intangible-p" function nil nil [123751 123897])
            ("gnus-summary-article-number" function nil nil [123929 124239])
            ("gnus-summary-article-header" function (:arguments ("number")) nil [124241 124430])
            ("gnus-summary-thread-level" function (:arguments ("number")) nil [124432 124758])
            ("gnus-summary-article-mark" function (:arguments ("number")) nil [124760 124941])
            ("gnus-summary-article-pos" function (:arguments ("number")) nil [124943 125137])
            ("defalias" code nil nil [125139 125208])
            ("gnus-summary-article-subject" function (:arguments ("number")) nil [125209 125586])
            ("gnus-summary-article-score" function (:arguments ("number")) nil [125588 125805])
            ("gnus-summary-article-children" function (:arguments ("number")) nil [125807 126268])
            ("gnus-summary-article-parent" function (:arguments ("number")) nil [126270 126845])
            ("gnus-unread-mark-p" function (:arguments ("mark")) nil [126847 126949])
            ("gnus-read-mark-p" function (:arguments ("mark")) nil [126951 127268])
            ("gnus-article-mark" function (:arguments ("number")) nil [127270 128091])
            ("gnus-save-hidden-threads" function (:arguments ("forms")) nil [128120 128452])
            ("put" code nil nil [128453 128508])
            ("put" code nil nil [128509 128566])
            ("gnus-data-compute-positions" function nil nil [128568 129025])
            ("gnus-hidden-threads-configuration" function nil nil [129027 129399])
            ("gnus-restore-hidden-threads-configuration" function (:arguments ("config")) nil [129401 129673])
            ("gnus-mouse-pick-article" function (:arguments ("e")) nil [129723 129833])
            ("gnus-summary-set-display-table" function nil nil [129835 130979])
            ("gnus-summary-set-article-display-arrow" function (:arguments ("pos")) nil [130981 131534])
            ("gnus-summary-setup-buffer" function (:arguments ("group")) nil [131536 132623])
            ("gnus-set-global-variables" function nil nil [132625 134385])
            ("gnus-summary-article-unread-p" function (:arguments ("article")) nil [134387 134516])
            ("gnus-summary-first-article-p" function (:arguments ("article")) nil [134518 134762])
            ("gnus-summary-last-article-p" function (:arguments ("article")) nil [134764 135067])
            ("gnus-make-thread-indent-array" function (:arguments ("n")) nil [135069 135524])
            ("gnus-update-summary-mark-positions" function nil nil [135526 137503])
            ("gnus-summary-insert-dummy-line" function (:arguments ("gnus-tmp-subject" "gnus-tmp-number")) nil [137505 137818])
            ("gnus-summary-extract-address-component" function (:arguments ("from")) nil [137820 137944])
            ("gnus-summary-from-or-to-or-newsgroups" function (:arguments ("header" "gnus-tmp-from")) nil [137946 139180])
            ("gnus-summary-insert-line" function (:arguments ("gnus-tmp-header" "gnus-tmp-level" "gnus-tmp-current" "undownloaded" "gnus-tmp-unread" "gnus-tmp-replied" "gnus-tmp-expirable" "gnus-tmp-subject-or-nil" "gnus-tmp-dummy" "gnus-tmp-score" "gnus-tmp-process")) nil [139182 142132])
            ("gnus-summary-update-line" function (:arguments ("dont-update")) nil [142134 143516])
            ("gnus-tmp-new-adopts" variable nil nil [143518 143550])
            ("gnus-summary-number-of-articles-in-thread" function (:arguments ("thread" "level" "char")) nil [143552 144422])
            ("gnus-summary-line-message-size" function (:arguments ("head")) nil [144424 144910])
            ("gnus-user-date-format-alist" variable (:default-value (quote (((gnus-seconds-today) . "Today, %H:%M") ((+ 86400 (gnus-seconds-today)) . "Yesterday, %H:%M") (604800 . "%A %H:%M") ((gnus-seconds-month) . "%A %d") ((gnus-seconds-year) . "%B %d") (t . "%b %d %Y")))) nil [144912 146260])
            ("gnus-user-date" function (:arguments ("messy-date")) nil [146262 147173])
            ("gnus-summary-set-local-parameters" function (:arguments ("group")) nil [147175 148061])
            ("gnus-summary-read-group" function (:arguments ("group" "show-all" "no-article" "kill-buffer" "no-display" "backward" "select-articles")) nil [148063 149357])
            ("gnus-summary-read-group-1" function (:arguments ("group" "show-all" "no-article" "kill-buffer" "no-display" "select-articles")) nil [149359 155238])
            ("gnus-summary-auto-select-subject" function nil nil [155240 155866])
            ("gnus-summary-prepare" function (:user-visible-flag t) nil [155868 156697])
            ("gnus-general-simplify-subject" function (:arguments ("subject")) nil [156699 157609])
            ("gnus-summary-simplify-subject-query" function (:user-visible-flag t) nil [157611 157847])
            ("gnus-gather-threads-by-subject" function (:arguments ("threads")) nil [157849 159127])
            ("gnus-gather-threads-by-references" function (:arguments ("threads")) nil [159129 160532])
            ("gnus-sort-gathered-threads" function (:arguments ("threads")) nil [160534 160883])
            ("gnus-thread-loop-p" function (:arguments ("root" "thread")) nil [160885 161599])
            ("gnus-make-threads" function nil nil [161601 162352])
            ("gnus-dependencies-add-header" function (:arguments ("header" "dependencies" "force-new")) nil [162380 165399])
            ("gnus-extract-message-id-from-in-reply-to" function (:arguments ("string")) nil [165401 165564])
            ("gnus-build-sparse-threads" function nil nil [165566 167423])
            ("gnus-build-old-threads" function nil nil [167425 168191])
            ("gnus-remove-odd-characters" function (:arguments ("string")) nil [168193 168401])
            ("gnus-nov-parse-line" function (:arguments ("number" "dependencies" "force-new")) nil [168506 170051])
            ("gnus-build-get-header" function (:arguments ("id")) nil [170053 171305])
            ("gnus-build-all-threads" function nil nil [171307 172226])
            ("gnus-summary-update-article-line" function (:arguments ("article" "header")) nil [172228 174456])
            ("gnus-summary-update-article" function (:arguments ("article" "iheader")) nil [174458 175297])
            ("gnus-rebuild-thread" function (:arguments ("id" "line")) nil [175299 177335])
            ("gnus-number-to-header" function (:arguments ("number")) nil [177337 177599])
            ("gnus-parent-headers" function (:arguments ("in-headers" "generation")) nil [177601 178145])
            ("gnus-id-to-thread" function (:arguments ("id")) nil [178147 178271])
            ("gnus-id-to-article" function (:arguments ("id")) nil [178273 178468])
            ("gnus-id-to-header" function (:arguments ("id")) nil [178470 178569])
            ("gnus-article-displayed-root-p" function (:arguments ("article")) nil [178571 179067])
            ("gnus-root-id" function (:arguments ("id")) nil [179069 179332])
            ("gnus-articles-in-thread" function (:arguments ("thread")) nil [179334 179523])
            ("gnus-remove-thread" function (:arguments ("id" "dont-remove")) nil [179525 181512])
            ("gnus-remove-thread-1" function (:arguments ("thread")) nil [181514 181985])
            ("gnus-sort-threads-recursive" function (:arguments ("threads" "func")) nil [181987 182470])
            ("gnus-sort-subthreads-recursive" function (:arguments ("threads" "func")) nil [182472 182722])
            ("gnus-sort-threads-loop" function (:arguments ("threads" "func")) nil [182724 183268])
            ("gnus-sort-threads" function (:arguments ("threads")) nil [183270 184030])
            ("gnus-sort-articles" function (:arguments ("articles")) nil [184032 184346])
            ("gnus-thread-header" function (:arguments ("thread")) nil [184410 184827])
            ("gnus-article-sort-by-number" function (:arguments ("h1" "h2")) nil [184829 184971])
            ("gnus-thread-sort-by-number" function (:arguments ("h1" "h2")) nil [184973 185139])
            ("gnus-article-sort-by-random" function (:arguments ("h1" "h2")) nil [185141 185236])
            ("gnus-thread-sort-by-random" function (:arguments ("h1" "h2")) nil [185238 185390])
            ("gnus-article-sort-by-lines" function (:arguments ("h1" "h2")) nil [185392 185537])
            ("gnus-thread-sort-by-lines" function (:arguments ("h1" "h2")) nil [185539 185709])
            ("gnus-article-sort-by-chars" function (:arguments ("h1" "h2")) nil [185711 185848])
            ("gnus-thread-sort-by-chars" function (:arguments ("h1" "h2")) nil [185850 186020])
            ("gnus-article-sort-by-author" function (:arguments ("h1" "h2")) nil [186022 186393])
            ("gnus-thread-sort-by-author" function (:arguments ("h1" "h2")) nil [186395 186554])
            ("gnus-article-sort-by-recipient" function (:arguments ("h1" "h2")) nil [186556 186974])
            ("gnus-thread-sort-by-recipient" function (:arguments ("h1" "h2")) nil [186976 187143])
            ("gnus-article-sort-by-subject" function (:arguments ("h1" "h2")) nil [187145 187376])
            ("gnus-thread-sort-by-subject" function (:arguments ("h1" "h2")) nil [187378 187539])
            ("gnus-article-sort-by-date" function (:arguments ("h1" "h2")) nil [187541 187733])
            ("gnus-thread-sort-by-date" function (:arguments ("h1" "h2")) nil [187735 187895])
            ("gnus-article-sort-by-score" function (:arguments ("h1" "h2")) nil [187897 188257])
            ("gnus-thread-sort-by-score" function (:arguments ("h1" "h2")) nil [188259 188422])
            ("gnus-thread-sort-by-total-score" function (:arguments ("h1" "h2")) nil [188424 188653])
            ("gnus-thread-total-score" function (:arguments ("thread")) nil [188655 189021])
            ("gnus-article-sort-by-most-recent-number" function (:arguments ("h1" "h2")) nil [189023 189145])
            ("gnus-thread-sort-by-most-recent-number" function (:arguments ("h1" "h2")) nil [189147 189361])
            ("gnus-thread-highest-number" function (:arguments ("thread")) nil [189363 189566])
            ("gnus-article-sort-by-most-recent-date" function (:arguments ("h1" "h2")) nil [189568 189686])
            ("gnus-thread-sort-by-most-recent-date" function (:arguments ("h1" "h2")) nil [189688 189892])
            ("gnus-thread-latest-date" function (:arguments ("thread")) nil [190167 190411])
            ("gnus-thread-total-score-1" function (:arguments ("root")) nil [190413 190909])
            ("gnus-tmp-prev-subject" variable nil nil [190960 190994])
            ("gnus-tmp-false-parent" variable nil nil [190995 191029])
            ("gnus-tmp-root-expunged" variable nil nil [191030 191065])
            ("gnus-tmp-dummy-line" variable nil nil [191066 191098])
            ("gnus-extra-header" function (:arguments ("type" "header")) nil [191100 191268])
            ("gnus-tmp-thread-tree-header-string" variable nil nil [191270 191316])
            ("gnus-sum-thread-tree-root" variable (:default-value "> ") nil [191318 191529])
            ("gnus-sum-thread-tree-false-root" variable (:default-value "> ") nil [191531 191752])
            ("gnus-sum-thread-tree-single-indent" variable nil nil [191754 191982])
            ("gnus-sum-thread-tree-vertical" variable (:default-value "| ") nil [191984 192138])
            ("gnus-sum-thread-tree-indent" variable (:default-value "  ") nil [192140 192278])
            ("gnus-sum-thread-tree-leaf-with-other" variable (:default-value "+-> ") nil [192280 192440])
            ("gnus-sum-thread-tree-single-leaf" variable (:default-value "\\-> ") nil [192442 192602])
            ("gnus-summary-display-while-building" variable nil nil [192604 192983])
            ("gnus-summary-prepare-threads" function (:arguments ("threads")) nil [192985 203726])
            ("gnus-summary-prepare-unthreaded" function (:arguments ("headers")) nil [203728 204987])
            ("declare-function" code nil nil [204989 205058])
            ("gnus-group-get-list-identifiers" function (:arguments ("group")) nil [205060 205328])
            ("gnus-summary-remove-list-identifiers" function nil nil [205330 206163])
            ("gnus-fetch-headers" function (:arguments ("articles" "limit" "force-new" "dependencies")) nil [206165 207028])
            ("gnus-select-newsgroup" function (:arguments ("group" "read-all" "select-articles")) nil [207030 213349])
            ("gnus-compute-unseen-list" function nil nil [213351 213646])
            ("declare-function" code nil nil [213648 213710])
            ("gnus-summary-display-make-predicate" function (:arguments ("display")) nil [213712 214337])
            ("gnus-number" variable nil nil [214393 214413])
            ("gnus-article-marked-p" function (:arguments ("type" "article")) nil [214414 215726])
            ("gnus-articles-to-read" function (:arguments ("group" "read-all")) nil [215728 219579])
            ("gnus-killed-articles" function (:arguments ("killed" "articles")) nil [219581 219801])
            ("gnus-article-mark-to-type" function (:arguments ("mark")) nil [219803 219942])
            ("gnus-article-unpropagatable-p" function (:arguments ("mark")) nil [219944 220097])
            ("gnus-adjust-marked-articles" function (:arguments ("info")) nil [220099 222980])
            ("gnus-update-missing-marks" function (:arguments ("missing")) nil [222982 223540])
            ("gnus-update-marks" function nil nil [223542 226309])
            ("gnus-set-mode-line" function (:arguments ("where")) nil [226311 228794])
            ("gnus-create-xref-hashtb" function (:arguments ("from-newsgroup" "headers" "unreads")) nil [228796 229946])
            ("gnus-mark-xrefs-as-read" function (:arguments ("from-newsgroup" "headers" "unreads")) nil [229948 231350])
            ("gnus-compute-read-articles" function (:arguments ("group" "articles")) nil [231352 232738])
            ("gnus-group-make-articles-read" function (:arguments ("group" "articles")) nil [232740 234655])
            ("gnus-get-newsgroup-headers" function (:arguments ("dependencies" "force-new")) nil [234657 239537])
            ("gnus-get-newsgroup-headers-xover" function (:arguments ("sequence" "force-new" "dependencies" "group" "also-fetch-heads")) nil [239601 241916])
            ("gnus-article-get-xrefs" function nil nil [241918 242727])
            ("gnus-summary-insert-subject" function (:arguments ("id" "old-header" "use-old-header")) nil [242729 245148])
            ("gnus-summary-work-articles" function (:arguments ("n")) nil [245192 246648])
            ("gnus-summary-iterate" function (:arguments ("arg" "forms")) nil [246650 247111])
            ("put" code nil nil [247113 247164])
            ("put" code nil nil [247165 247223])
            ("gnus-summary-save-process-mark" function (:user-visible-flag t) nil [247225 247430])
            ("gnus-summary-kill-process-mark" function (:user-visible-flag t) nil [247432 247641])
            ("gnus-summary-yank-process-mark" function (:user-visible-flag t) nil [247643 247906])
            ("gnus-summary-process-mark-set" function (:arguments ("set")) nil [247908 248090])
            ("gnus-summary-search-group" function (:arguments ("backward" "use-level")) nil [248117 248458])
            ("gnus-summary-best-group" function (:arguments ("exclude-group")) nil [248460 248718])
            ("gnus-summary-find-next" function (:arguments ("unread" "article" "backward")) nil [248720 249975])
            ("gnus-summary-find-prev" function (:arguments ("unread" "article")) nil [249977 251154])
            ("gnus-summary-find-subject" function (:arguments ("subject" "unread" "backward" "article")) nil [251156 251971])
            ("gnus-summary-search-forward" function (:arguments ("unread" "subject" "backward")) nil [251973 252357])
            ("gnus-recenter" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [252359 252702])
            ("put" code nil nil [252704 252742])
            ("gnus-forward-line-ignore-invisible" function (:arguments ("n")) nil [252744 253496])
            ("gnus-summary-recenter" function (:user-visible-flag t) nil [253498 255704])
            ("gnus-summary-jump-to-group" function (:arguments ("newsgroup")) nil [255706 256328])
            ("gnus-list-of-unread-articles" function (:arguments ("group")) nil [256495 257991])
            ("gnus-list-of-read-articles" function (:arguments ("group")) nil [257993 258639])
            ("gnus-sequence-of-unread-articles" function (:arguments ("group")) nil [258810 260241])
            ("gnus-summary-select-article-buffer" function (:user-visible-flag t) nil [260272 260826])
            ("gnus-summary-universal-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [260828 261493])
            ("gnus-summary-toggle-truncation" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [261495 261780])
            ("gnus-summary-find-for-reselect" function nil nil [261782 262641])
            ("gnus-summary-reselect-current-group" function
               (:user-visible-flag t
                :arguments ("all" "rescan"))
                nil [262643 263442])
            ("gnus-summary-rescan-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [263444 263790])
            ("gnus-summary-update-info" function (:arguments ("non-destructive")) nil [263792 265377])
            ("gnus-summary-save-newsrc" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [265379 265715])
            ("declare-function" code nil nil [265717 265790])
            ("declare-function" code nil nil [265791 265852])
            ("gnus-summary-exit" function
               (:user-visible-flag t
                :arguments ("temporary" "leave-hidden"))
                nil [265854 269750])
            ("declare-function" code nil nil [269752 269804])
            ("defalias" code nil nil [269806 269864])
            ("gnus-summary-exit-no-update" function
               (:user-visible-flag t
                :arguments ("no-questions"))
                nil [269865 271840])
            ("gnus-handle-ephemeral-exit" function (:arguments ("quit-config")) nil [271842 273916])
            ("gnus-dead-summary-mode-map" variable (:default-value (let ((map (make-keymap))) (suppress-keymap map) (substitute-key-definition (quote undefined) (quote gnus-summary-wake-up-the-dead) map) (dolist (key (quote ("" "" "" [delete]))) (define-key map key (quote gnus-summary-wake-up-the-dead))) (dolist (key (quote ("q" "Q"))) (define-key map key (quote bury-buffer))) map)) nil [273939 274294])
            ("define-minor-mode" code nil nil [274296 274518])
            ("gnus-deaden-summary" function nil nil [274520 275186])
            ("gnus-kill-or-deaden-summary" function (:arguments ("buffer")) nil [275188 275834])
            ("gnus-summary-wake-up-the-dead" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [275836 276222])
            ("gnus-summary-describe-group" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [276277 276442])
            ("gnus-summary-describe-briefly" function (:user-visible-flag t) nil [276444 276855])
            ("gnus-summary-next-group" function
               (:user-visible-flag t
                :arguments ("no-article" "target-group" "backward"))
                nil [276913 278819])
            ("gnus-summary-prev-group" function
               (:user-visible-flag t
                :arguments ("no-article"))
                nil [278821 279086])
            ("gnus-summary-first-subject" function
               (:user-visible-flag t
                :arguments ("unread" "undownloaded" "unseen"))
                nil [279122 281445])
            ("gnus-summary-next-subject" function
               (:user-visible-flag t
                :arguments ("n" "unread" "dont-display"))
                nil [281447 282174])
            ("gnus-summary-next-unread-subject" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [282176 282315])
            ("gnus-summary-prev-subject" function
               (:user-visible-flag t
                :arguments ("n" "unread"))
                nil [282317 282545])
            ("gnus-summary-prev-unread-subject" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [282547 282694])
            ("gnus-summary-goto-subjects" function (:arguments ("articles")) nil [282696 282996])
            ("gnus-summary-goto-subject" function
               (:user-visible-flag t
                :arguments ("article" "force" "silent"))
                nil [282998 283824])
            ("gnus-summary-expand-window" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [283885 284180])
            ("gnus-summary-display-article" function (:arguments ("article" "all-header")) nil [284182 285368])
            ("gnus-summary-select-article" function (:arguments ("all-headers" "force" "pseudo" "article")) nil [285370 287154])
            ("gnus-summary-force-verify-and-decrypt" function (:user-visible-flag t) nil [287156 287563])
            ("gnus-summary-next-article" function
               (:user-visible-flag t
                :arguments ("unread" "subject" "backward" "push"))
                nil [287565 290356])
            ("gnus-summary-walk-group-buffer" function (:arguments ("from-group" "cmd" "unread" "backward" "start")) nil [290358 291938])
            ("gnus-summary-next-unread-article" function (:user-visible-flag t) nil [291940 292255])
            ("gnus-summary-prev-article" function
               (:user-visible-flag t
                :arguments ("unread" "subject"))
                nil [292257 292488])
            ("gnus-summary-prev-unread-article" function (:user-visible-flag t) nil [292490 292807])
            ("declare-function" code nil nil [292809 292868])
            ("gnus-summary-next-page" function
               (:user-visible-flag t
                :arguments ("lines" "circular" "stop"))
                nil [292870 294847])
            ("gnus-summary-prev-page" function
               (:user-visible-flag t
                :arguments ("lines" "move"))
                nil [294849 296009])
            ("gnus-summary-prev-page-or-article" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [296011 296281])
            ("gnus-summary-scroll-up" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [296283 296953])
            ("gnus-summary-scroll-down" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [296955 297250])
            ("gnus-summary-next-same-subject" function (:user-visible-flag t) nil [297252 297441])
            ("gnus-summary-prev-same-subject" function (:user-visible-flag t) nil [297443 297636])
            ("gnus-summary-next-unread-same-subject" function (:user-visible-flag t) nil [297638 297839])
            ("gnus-summary-prev-unread-same-subject" function (:user-visible-flag t) nil [297841 298046])
            ("gnus-summary-first-unread-article" function (:user-visible-flag t) nil [298048 298399])
            ("gnus-summary-first-unread-subject" function (:user-visible-flag t) nil [298401 298722])
            ("gnus-summary-first-unseen-subject" function (:user-visible-flag t) nil [298724 299061])
            ("gnus-summary-first-unseen-or-unread-subject" function (:user-visible-flag t) nil [299063 299571])
            ("gnus-summary-first-article" function (:user-visible-flag t) nil [299573 299899])
            ("gnus-summary-best-unread-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [299901 300340])
            ("gnus-summary-best-unread-subject" function (:user-visible-flag t) nil [300342 300882])
            ("gnus-summary-better-unread-subject" function (:user-visible-flag t) nil [300884 301397])
            ("gnus-summary-last-subject" function nil nil [301399 301616])
            ("gnus-summary-goto-article" function
               (:user-visible-flag t
                :arguments ("article" "all-headers" "force"))
                nil [301618 302514])
            ("gnus-summary-goto-last-article" function (:user-visible-flag t) nil [302516 302740])
            ("gnus-summary-pop-article" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [302742 303130])
            ("gnus-summary-limit-to-articles" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [303200 303549])
            ("gnus-summary-pop-limit" function
               (:user-visible-flag t
                :arguments ("total"))
                nil [303551 303961])
            ("gnus-summary-limit-to-subject" function
               (:user-visible-flag t
                :arguments ("subject" "header" "not-matching"))
                nil [303963 304699])
            ("gnus-summary-limit-to-author" function
               (:user-visible-flag t
                :arguments ("from" "not-matching"))
                nil [304701 305384])
            ("gnus-summary-limit-to-recipient" function
               (:user-visible-flag t
                :arguments ("recipient" "not-matching"))
                nil [305386 306769])
            ("gnus-summary-limit-to-address" function
               (:user-visible-flag t
                :arguments ("address" "not-matching"))
                nil [306771 308458])
            ("gnus-summary-limit-strange-charsets-predicate" function (:arguments ("header")) nil [308460 308857])
            ("gnus-summary-limit-to-predicate" function (:arguments ("predicate")) nil [308859 309256])
            ("gnus-summary-limit-to-age" function
               (:user-visible-flag t
                :arguments ("age" "younger-p"))
                nil [309258 310662])
            ("gnus-summary-limit-to-extra" function
               (:user-visible-flag t
                :arguments ("header" "regexp" "not-matching"))
                nil [310664 311529])
            ("gnus-summary-limit-to-display-predicate" function (:user-visible-flag t) nil [311531 311975])
            ("gnus-summary-limit-to-unread" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [311977 312637])
            ("gnus-summary-limit-to-headers" function
               (:user-visible-flag t
                :arguments ("match" "reverse"))
                nil [312639 312936])
            ("declare-function" code nil nil [312938 312988])
            ("gnus-summary-limit-to-bodies" function
               (:user-visible-flag t
                :arguments ("match" "reverse" "headersp"))
                nil [312990 314154])
            ("gnus-summary-limit-to-singletons" function
               (:user-visible-flag t
                :arguments ("threadsp"))
                nil [314156 314990])
            ("gnus-summary-limit-to-replied" function
               (:user-visible-flag t
                :arguments ("unreplied"))
                nil [314992 315378])
            ("gnus-summary-limit-exclude-marks" function
               (:user-visible-flag t
                :arguments ("marks" "reverse"))
                nil [315380 315752])
            ("gnus-summary-limit-to-marks" function
               (:user-visible-flag t
                :arguments ("marks" "reverse"))
                nil [315754 316542])
            ("gnus-summary-limit-to-score" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [316544 317005])
            ("gnus-summary-limit-to-unseen" function (:user-visible-flag t) nil [317007 317185])
            ("gnus-summary-limit-include-thread" function
               (:user-visible-flag t
                :arguments ("id"))
                nil [317187 317992])
            ("gnus-summary-limit-include-matching-articles" function
               (:user-visible-flag t
                :arguments ("header" "regexp"))
                nil [317994 318397])
            ("gnus-summary-insert-dormant-articles" function (:user-visible-flag t) nil [318399 318735])
            ("gnus-summary-insert-ticked-articles" function (:user-visible-flag t) nil [318737 319060])
            ("gnus-summary-limit-include-dormant" function (:user-visible-flag t) nil [319062 319499])
            ("gnus-summary-include-articles" function (:arguments ("articles")) nil [319501 320020])
            ("gnus-summary-limit-exclude-dormant" function (:user-visible-flag t) nil [320022 320228])
            ("gnus-summary-limit-exclude-childless-dormant" function (:user-visible-flag t) nil [320230 320964])
            ("gnus-summary-limit-mark-excluded-as-read" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [320966 321937])
            ("gnus-summary-limit" function (:arguments ("articles" "pop")) nil [321939 323452])
            ("gnus-invisible-cut-children" function (:arguments ("threads")) nil [323454 323663])
            ("gnus-cut-thread" function (:arguments ("thread")) nil [323665 324725])
            ("gnus-cut-threads" function (:arguments ("threads")) nil [324727 325199])
            ("gnus-summary-initial-limit" function (:arguments ("show-if-empty")) nil [325201 326758])
            ("gnus-summary-limit-children" function (:arguments ("thread")) nil [326760 329420])
            ("gnus-expunge-thread" function (:arguments ("thread")) nil [329422 329958])
            ("gnus-summary-refer-parent-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [329998 331550])
            ("gnus-summary-refer-references" function (:user-visible-flag t) nil [331552 332247])
            ("gnus-delete-duplicate-headers" function (:arguments ("headers")) nil [332249 332711])
            ("gnus-summary-refer-thread" function
               (:user-visible-flag t
                :arguments ("limit"))
                nil [332713 335352])
            ("gnus-summary-open-group-with-article" function
               (:user-visible-flag t
                :arguments ("message-id"))
                nil [335354 336676])
            ("gnus-summary-refer-article" function
               (:user-visible-flag t
                :arguments ("message-id"))
                nil [336678 338432])
            ("gnus-refer-article-methods" function nil nil [338434 339312])
            ("gnus-summary-edit-parameters" function (:user-visible-flag t) nil [339314 339475])
            ("gnus-summary-customize-parameters" function (:user-visible-flag t) nil [339477 339639])
            ("gnus-summary-enter-digest-group" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [339641 342874])
            ("gnus-summary-read-document" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [342876 344749])
            ("gnus-summary-widget-forward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [344751 345074])
            ("gnus-summary-widget-backward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [345076 345464])
            ("gnus-summary-isearch-article" function
               (:user-visible-flag t
                :arguments ("regexp-p"))
                nil [345466 345846])
            ("gnus-summary-repeat-search-article-forward" function (:user-visible-flag t) nil [345848 346090])
            ("gnus-summary-repeat-search-article-backward" function (:user-visible-flag t) nil [346092 346338])
            ("gnus-summary-search-article-forward" function
               (:user-visible-flag t
                :arguments ("regexp" "backward"))
                nil [346340 347209])
            ("gnus-summary-search-article-backward" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [347211 347562])
            ("gnus-summary-search-article" function (:arguments ("regexp" "backward")) nil [347564 350115])
            ("gnus-find-matching-articles" function (:arguments ("header" "regexp")) nil [350117 350684])
            ("gnus-summary-find-matching" function (:arguments ("header" "regexp" "backward" "unread" "not-case-fold" "not-matching")) nil [350686 352223])
            ("gnus-summary-execute-command" function
               (:user-visible-flag t
                :arguments ("header" "regexp" "command" "backward"))
                nil [352225 353699])
            ("gnus-summary-beginning-of-article" function (:user-visible-flag t) nil [353701 354022])
            ("gnus-summary-end-of-article" function (:user-visible-flag t) nil [354024 354349])
            ("gnus-summary-print-truncate-and-quote" function (:arguments ("string" "len")) nil [354351 354608])
            ("gnus-summary-print-article" function
               (:user-visible-flag t
                :arguments ("filename" "n"))
                nil [354610 355695])
            ("gnus-print-buffer" function nil nil [355697 356259])
            ("declare-function" code nil nil [356261 356328])
            ("gnus-summary-show-complete-article" function (:user-visible-flag t) nil [356330 356947])
            ("gnus-summary-show-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [356949 360132])
            ("gnus-summary-show-raw-article" function (:user-visible-flag t) nil [360134 360298])
            ("gnus-summary-verbose-headers" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [360300 360703])
            ("declare-function" code nil nil [360705 360760])
            ("declare-function" code nil nil [360761 360824])
            ("declare-function" code nil nil [360825 360883])
            ("declare-function" code nil nil [360884 360983])
            ("gnus-summary-toggle-header" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [360985 362670])
            ("gnus-summary-show-all-headers" function (:user-visible-flag t) nil [362672 362796])
            ("gnus-summary-caesar-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [362798 363488])
            ("declare-function" code nil nil [363490 363541])
            ("gnus-summary-idna-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [363543 364654])
            ("gnus-summary-morse-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [364656 365314])
            ("gnus-summary-stop-page-breaking" function (:user-visible-flag t) nil [365316 365716])
            ("gnus-summary-move-article" function
               (:user-visible-flag t
                :arguments ("n" "to-newsgroup" "select-method" "action"))
                nil [365718 377385])
            ("gnus-summary-push-marks-to-backend" function (:arguments ("article")) nil [377387 377945])
            ("gnus-summary-copy-article" function
               (:user-visible-flag t
                :arguments ("n" "to-newsgroup" "select-method"))
                nil [377947 378470])
            ("gnus-summary-crosspost-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [378472 378650])
            ("gnus-summary-respool-default-method" variable nil nil [378652 378843])
            ("gnus-summary-respool-article" function
               (:user-visible-flag t
                :arguments ("n" "method"))
                nil [378845 380582])
            ("gnus-summary-import-article" function
               (:user-visible-flag t
                :arguments ("file" "edit"))
                nil [380584 382258])
            ("gnus-summary-create-article" function (:user-visible-flag t) nil [382260 383220])
            ("gnus-summary-article-posted-p" function (:user-visible-flag t) nil [383222 383778])
            ("gnus-summary-expire-articles" function
               (:user-visible-flag t
                :arguments ("now"))
                nil [383780 386364])
            ("gnus-summary-expire-articles-now" function (:user-visible-flag t) nil [386366 386765])
            ("gnus-summary-delete-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [386825 388840])
            ("gnus-summary-edit-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [388842 391872])
            ("defalias" code nil nil [391874 391944])
            ("gnus-summary-edit-article-done" function
               (:user-visible-flag t
                :arguments ("references" "read-only" "buffer" "no-highlight"))
                nil [391946 395342])
            ("gnus-summary-edit-wash" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [395344 395673])
            ("nnimap-split-fancy" variable nil nil [395691 395718])
            ("nnimap-split-methods" variable nil nil [395719 395748])
            ("gnus-summary-respool-query" function
               (:user-visible-flag t
                :arguments ("silent" "trace"))
                nil [395750 396733])
            ("gnus-summary-respool-trace" function (:user-visible-flag t) nil [396735 396956])
            ("gnus-summary-kill-same-subject-and-select" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [396988 397734])
            ("gnus-summary-kill-same-subject" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [397736 398353])
            ("gnus-summary-mark-same-subject" function (:arguments ("subject" "unmark")) nil [398355 399431])
            ("gnus-summary-mark-as-processable" function
               (:user-visible-flag t
                :arguments ("n" "unmark"))
                nil [399433 400346])
            ("gnus-summary-unmark-as-processable" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [400348 400634])
            ("gnus-summary-unmark-all-processable" function (:user-visible-flag t) nil [400636 400909])
            ("gnus-summary-add-mark" function (:arguments ("article" "type")) nil [400911 401488])
            ("gnus-summary-mark-as-expirable" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [401490 401767])
            ("gnus-summary-mark-as-spam" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [401769 402031])
            ("gnus-summary-mark-article-as-replied" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [402033 402586])
            ("gnus-summary-mark-article-as-forwarded" function (:arguments ("article")) nil [402588 403020])
            ("gnus-summary-set-bookmark" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [403022 403847])
            ("gnus-summary-remove-bookmark" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [403849 404245])
            ("gnus-summary-mark-as-dormant" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [404298 404569])
            ("gnus-summary-set-process-mark" function (:arguments ("article")) nil [404571 404949])
            ("gnus-summary-remove-process-mark" function (:arguments ("articles")) nil [404951 405366])
            ("gnus-summary-set-saved-mark" function (:arguments ("article")) nil [405368 405610])
            ("gnus-summary-mark-forward" function
               (:user-visible-flag t
                :arguments ("n" "mark" "no-expire"))
                nil [405612 406687])
            ("gnus-summary-mark-article-as-read" function (:arguments ("mark")) nil [406689 407856])
            ("gnus-summary-mark-article-as-unread" function (:arguments ("mark")) nil [407858 409746])
            ("gnus-summary-mark-article" function (:arguments ("article" "mark" "no-expire")) nil [409748 411601])
            ("gnus-summary-update-secondary-mark" function (:arguments ("article")) nil [411603 412295])
            ("gnus-summary-update-download-mark" function (:arguments ("article")) nil [412297 412646])
            ("gnus-summary-update-mark" function (:arguments ("mark" "type")) nil [412648 413501])
            ("gnus-mark-article-as-read" function (:arguments ("article" "mark")) nil [413503 414409])
            ("gnus-mark-article-as-unread" function (:arguments ("article" "mark")) nil [414411 415721])
            ("gnus-summary-tick-article-forward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [415723 415981])
            ("gnus-summary-tick-article-backward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [415983 416205])
            ("gnus-summary-tick-article" function
               (:user-visible-flag t
                :arguments ("article" "clear-mark"))
                nil [416207 416560])
            ("gnus-summary-mark-as-read-forward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [416562 416862])
            ("gnus-summary-mark-as-read-backward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [416864 417135])
            ("gnus-summary-mark-as-read" function (:arguments ("article" "mark")) nil [417137 417393])
            ("gnus-summary-clear-mark-forward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [417395 417660])
            ("gnus-summary-clear-mark-backward" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [417662 417891])
            ("gnus-summary-mark-unread-as-read" function nil nil [417893 418117])
            ("gnus-summary-mark-read-and-unread-as-read" function (:arguments ("new-mark")) nil [418119 418449])
            ("gnus-summary-mark-current-read-and-unread-as-read" function (:arguments ("new-mark")) nil [418451 418798])
            ("gnus-summary-mark-unread-as-ticked" function nil nil [418800 419028])
            ("gnus-summary-mark-region-as-read" function
               (:user-visible-flag t
                :arguments ("point" "mark" "all"))
                nil [419030 419610])
            ("gnus-summary-mark-below" function
               (:user-visible-flag t
                :arguments ("score" "mark"))
                nil [419612 420050])
            ("gnus-summary-kill-below" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [420052 420222])
            ("gnus-summary-clear-above" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [420224 420403])
            ("gnus-summary-tick-above" function
               (:user-visible-flag t
                :arguments ("score"))
                nil [420405 420571])
            ("gnus-summary-mark-above" function
               (:user-visible-flag t
                :arguments ("score" "mark"))
                nil [420573 421016])
            ("defalias" code nil nil [421069 421148])
            ("gnus-summary-limit-include-expunged" function
               (:user-visible-flag t
                :arguments ("no-error"))
                nil [421149 422049])
            ("gnus-summary-catchup" function
               (:user-visible-flag t
                :arguments ("all" "quietly" "to-here" "not-mark" "reverse"))
                nil [422051 424188])
            ("gnus-summary-catchup-to-here" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [424190 424624])
            ("gnus-summary-catchup-from-here" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [424626 425083])
            ("gnus-summary-catchup-all" function
               (:user-visible-flag t
                :arguments ("quietly"))
                nil [425085 425364])
            ("gnus-summary-catchup-and-exit" function
               (:user-visible-flag t
                :arguments ("all" "quietly"))
                nil [425366 425886])
            ("gnus-summary-catchup-all-and-exit" function
               (:user-visible-flag t
                :arguments ("quietly"))
                nil [425888 426209])
            ("gnus-summary-catchup-and-goto-next-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [426211 426517])
            ("gnus-summary-catchup-and-goto-prev-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [426519 426839])
            ("gnus-with-article" function (:arguments ("article" "forms")) nil [426867 427844])
            ("put" code nil nil [427846 427894])
            ("put" code nil nil [427895 427950])
            ("gnus-summary-articles-in-thread" function (:arguments ("article")) nil [427979 429408])
            ("gnus-summary-rethread-current" function (:user-visible-flag t) nil [429410 429855])
            ("gnus-summary-reparent-thread" function (:user-visible-flag t) nil [429857 430728])
            ("gnus-summary-reparent-children" function
               (:user-visible-flag t
                :arguments ("parent" "children"))
                nil [430730 432109])
            ("gnus-summary-toggle-threads" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [432111 432650])
            ("gnus-summary-show-all-threads" function (:user-visible-flag t) nil [432652 432827])
            ("gnus-summary--inv" function (:arguments ("p")) nil [432829 432919])
            ("gnus-summary-show-thread" function (:user-visible-flag t) nil [432921 433747])
            ("gnus-summary-maybe-hide-threads" function nil nil [433749 434100])
            ("gnus-article-unread-p" function (:arguments ("header")) nil [434126 434224])
            ("gnus-article-unseen-p" function (:arguments ("header")) nil [434226 434323])
            ("gnus-map-articles" function (:arguments ("predicate" "articles")) nil [434325 434581])
            ("gnus-summary-hide-all-threads" function
               (:user-visible-flag t
                :arguments ("predicate"))
                nil [434583 435218])
            ("gnus-summary-hide-thread" function (:user-visible-flag t) nil [435220 436331])
            ("gnus-summary-go-to-next-thread" function (:arguments ("previous")) nil [436333 436910])
            ("gnus-summary-next-thread" function
               (:user-visible-flag t
                :arguments ("n" "silent"))
                nil [436912 437447])
            ("gnus-summary-prev-thread" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [437449 437659])
            ("gnus-summary-go-down-thread" function nil nil [437661 437866])
            ("gnus-summary-go-up-thread" function nil nil [437868 438055])
            ("gnus-summary-down-thread" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [438057 438506])
            ("gnus-summary-up-thread" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [438508 438732])
            ("gnus-summary-top-thread" function (:user-visible-flag t) nil [438734 438887])
            ("gnus-summary-expire-thread" function (:user-visible-flag t) nil [438889 439024])
            ("gnus-summary-kill-thread" function
               (:user-visible-flag t
                :arguments ("unmark"))
                nil [439026 440308])
            ("gnus-summary-sort-by-number" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440339 440537])
            ("gnus-summary-sort-by-most-recent-number" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440539 440773])
            ("gnus-summary-sort-by-random" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440775 440989])
            ("gnus-summary-sort-by-author" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [440991 441263])
            ("gnus-summary-sort-by-recipient" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [441265 441546])
            ("gnus-summary-sort-by-subject" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [441548 441839])
            ("gnus-summary-sort-by-date" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [441841 442025])
            ("gnus-summary-sort-by-most-recent-date" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [442027 442247])
            ("gnus-summary-sort-by-score" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [442249 442436])
            ("gnus-summary-sort-by-lines" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [442438 442639])
            ("gnus-summary-sort-by-chars" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [442641 442837])
            ("gnus-summary-sort-by-original" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [442839 443236])
            ("gnus-summary-sort" function (:arguments ("predicate" "reverse")) nil [443238 444002])
            ("gnus-summary-save-article" function
               (:user-visible-flag t
                :arguments ("n" "not-saved"))
                nil [444033 446165])
            ("declare-function" code nil nil [446167 446246])
            ("gnus-summary-pipe-output" function
               (:user-visible-flag t
                :arguments ("n" "sym"))
                nil [446248 448928])
            ("gnus-summary-save-article-mail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [448930 449392])
            ("gnus-summary-save-article-rmail" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [449394 449851])
            ("gnus-summary-save-article-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [449853 450301])
            ("gnus-summary-write-article-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [450303 450780])
            ("gnus-summary-save-article-body-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [450782 451245])
            ("gnus-summary-write-article-body-file" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [451247 451739])
            ("gnus-summary-muttprint" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [451741 452193])
            ("gnus-summary-pipe-message" function
               (:user-visible-flag t
                :arguments ("program"))
                nil [452195 452633])
            ("gnus-get-split-value" function (:arguments ("methods")) nil [452635 453676])
            ("gnus-valid-move-group-p" function (:arguments ("group")) nil [453678 453926])
            ("gnus-read-move-group-name" function (:arguments ("prompt" "default" "articles" "prefix")) nil [453928 455727])
            ("gnus-summary-save-parts-counter" variable nil nil [455729 455769])
            ("declare-function" code nil nil [455770 455841])
            ("gnus-summary-save-parts" function
               (:user-visible-flag t
                :arguments ("type" "dir" "n" "reverse"))
                nil [455843 457104])
            ("gnus-summary-save-parts-1" function (:arguments ("type" "dir" "handle" "reverse")) nil [457106 457870])
            ("gnus-summary-insert-pseudos" function (:arguments ("pslist" "not-view")) nil [457901 460224])
            ("gnus-pseudos<" function (:arguments ("p1" "p2")) nil [460226 460356])
            ("gnus-request-pseudo-article" function (:arguments ("props")) nil [460358 460595])
            ("gnus-execute-command" function (:arguments ("command" "automatic")) nil [460597 461148])
            ("gnus-summary-edit-global-kill" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [461177 461352])
            ("gnus-summary-edit-local-kill" function (:user-visible-flag t) nil [461354 461614])
            ("gnus-read-header" function (:arguments ("id" "header")) nil [461637 464199])
            ("gnus-remove-header" function (:arguments ("number")) nil [464201 464639])
            ("gnus-highlight-selected-summary" function nil nil [464673 465754])
            ("gnus-summary-highlight-line-cached" variable nil nil [465756 465803])
            ("gnus-summary-highlight-line-trigger" variable nil nil [465804 465852])
            ("gnus-summary-highlight-line-0" function nil nil [465854 466538])
            ("gnus-summary-highlight-line" function nil nil [466540 467658])
            ("gnus-update-read-articles" function (:arguments ("group" "unread" "compute")) nil [467660 470214])
            ("gnus-offer-save-summaries" function nil nil [470216 471196])
            ("gnus-summary-setup-default-charset" function nil nil [471198 471885])
            ("gnus-summary-display-buttonized" function
               (:user-visible-flag t
                :arguments ("show-all-parts"))
                nil [471914 472313])
            ("gnus-summary-repair-multipart" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [472315 473033])
            ("gnus-summary-toggle-display-buttonized" function (:user-visible-flag t) nil [473035 473371])
            ("gnus-summary-marking-alist" variable (:default-value (quote ((read gnus-del-mark "d") (unread gnus-unread-mark "u") (ticked gnus-ticked-mark "!") (dormant gnus-dormant-mark "?") (expirable gnus-expirable-mark "e")))) nil [473419 473668])
            ("gnus-summary-generic-mark-map" variable (:default-value (make-sparse-keymap)) nil [473670 473729])
            ("gnus-summary-mark-map" variable nil nil [473730 473760])
            ("gnus-summary-make-all-marking-commands" function nil nil [473762 473979])
            ("gnus-summary-make-marking-command" function (:arguments ("name" "mark" "keystroke")) nil [473981 474511])
            ("gnus-summary-make-marking-command-1" function (:arguments ("mark" "way" "lway" "name")) nil [474513 475068])
            ("gnus-summary-generic-mark" function (:arguments ("n" "mark" "move" "unread")) nil [475070 475819])
            ("gnus-summary-insert-articles" function (:arguments ("articles")) nil [475821 477727])
            ("gnus-summary-insert-old-articles" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [477729 480030])
            ("gnus-summary-insert-new-articles" function (:user-visible-flag t) nil [480032 480862])
            ("declare-function" code nil nil [480895 480953])
            ("declare-function" code nil nil [480954 481066])
            ("declare-function" code nil nil [481067 481130])
            ("declare-function" code nil nil [481131 481191])
            ("declare-function" code nil nil [481192 481256])
            ("bookmark-yank-point" variable nil nil [481257 481285])
            ("bookmark-current-buffer" variable nil nil [481286 481318])
            ("gnus-summary-bookmark-make-record" function nil nil [481320 482597])
            ("gnus-summary-bookmark-jump" function (:arguments ("bookmark")) nil [482614 483637])
            ("gnus-summary-make-all-marking-commands" code nil nil [483639 483679])
            ("gnus-ems-redefine" code nil nil [483681 483700])
            ("gnus-sum" package nil nil [483702 483721])
            ("run-hooks" code nil nil [483723 483754]))          
      :file "gnus-sum.el.gz"
      :pointmax 483828
      :fsize 112067
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 60582 . 60583) (symbol 60375 . 60392) (open-paren 60374 . 60375) (close-paren 989 . 990) (symbol 918 . 935) (open-paren 917 . 918) (close-paren 915 . 916) (symbol 882 . 899) (open-paren 881 . 882)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [902 915])
            ("gnus" include nil nil [918 933])
            ("gnus-start" include nil nil [934 955])
            ("gnus-spec" include nil nil [956 976])
            ("gnus-group" include nil nil [977 998])
            ("gnus-int" include nil nil [999 1018])
            ("gnus-range" include nil nil [1019 1040])
            ("gnus-group-make-nnir-group" function (:prototype-flag t) nil [1042 1087])
            ("gnus-server-mode-hook" variable nil nil [1089 1206])
            ("gnus-server-exit-hook" variable nil nil [1208 1326])
            ("gnus-server-line-format" variable (:default-value "     {%(%h:%w%)} %s%a%c
") nil [1328 1793])
            ("gnus-server-mode-line-format" variable (:default-value "Gnus: %%b") nil [1795 1947])
            ("gnus-server-browse-in-group-buffer" variable nil nil [1949 2192])
            ("gnus-tmp-how" variable nil nil [2219 2240])
            ("gnus-tmp-name" variable nil nil [2241 2263])
            ("gnus-tmp-where" variable nil nil [2264 2287])
            ("gnus-tmp-status" variable nil nil [2288 2312])
            ("gnus-tmp-agent" variable nil nil [2313 2336])
            ("gnus-tmp-cloud" variable nil nil [2337 2360])
            ("gnus-tmp-news-server" variable nil nil [2361 2390])
            ("gnus-tmp-news-method" variable nil nil [2391 2420])
            ("gnus-tmp-user-defined" variable nil nil [2421 2451])
            ("gnus-inserted-opened-servers" variable nil nil [2453 2494])
            ("gnus-server-line-format-alist" variable (:default-value (\` ((104 gnus-tmp-how 115) (110 gnus-tmp-name 115) (119 gnus-tmp-where 115) (115 gnus-tmp-status 115) (97 gnus-tmp-agent 115) (99 gnus-tmp-cloud 115)))) nil [2496 2695])
            ("gnus-server-mode-line-format-alist" variable (:default-value (\` ((83 gnus-tmp-news-server 115) (77 gnus-tmp-news-method 115) (117 gnus-tmp-user-defined 115)))) nil [2697 2841])
            ("gnus-server-line-format-spec" variable nil nil [2843 2884])
            ("gnus-server-mode-line-format-spec" variable nil nil [2885 2931])
            ("gnus-server-killed-servers" variable nil nil [2932 2971])
            ("gnus-server-mode-map" variable nil nil [2973 3002])
            ("gnus-server-menu-hook" variable (:user-visible-flag t) nil [3004 3096])
            ("gnus-server-make-menu-bar" function nil nil [3098 4377])
            ("gnus-server-mode-map" variable nil nil [4379 4412])
            ("put" code nil nil [4413 4457])
            ("unless" code nil nil [4459 5529])
            ("gnus-server-agent" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "PaleTurquoise" :bold t)) (((class color) (background dark)) (:foreground "PaleTurquoise" :bold t)) (t (:bold t))))
                :type "face")
                nil [5531 5810])
            ("put" code nil nil [5843 5903])
            ("put" code nil nil [5904 5955])
            ("gnus-server-cloud" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "ForestGreen" :bold t)) (((class color) (background dark)) (:foreground "PaleGreen" :bold t)) (t (:bold t))))
                :type "face")
                nil [5957 6230])
            ("gnus-server-opened" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Green3" :bold t)) (((class color) (background dark)) (:foreground "Green1" :bold t)) (t (:bold t))))
                :type "face")
                nil [6232 6495])
            ("put" code nil nil [6528 6590])
            ("put" code nil nil [6591 6643])
            ("gnus-server-closed" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Steel Blue" :italic t)) (((class color) (background dark)) (:foreground "LightBlue" :italic t)) (t (:italic t))))
                :type "face")
                nil [6645 6926])
            ("put" code nil nil [6959 7021])
            ("put" code nil nil [7022 7074])
            ("gnus-server-denied" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Red" :bold t)) (((class color) (background dark)) (:foreground "Pink" :bold t)) (t (:inverse-video t :bold t))))
                :type "face")
                nil [7076 7351])
            ("put" code nil nil [7384 7446])
            ("put" code nil nil [7447 7499])
            ("gnus-server-offline" variable
               (:default-value (quote ((((class color) (background light)) (:foreground "Orange" :bold t)) (((class color) (background dark)) (:foreground "Yellow" :bold t)) (t (:inverse-video t :bold t))))
                :type "face")
                nil [7501 7783])
            ("put" code nil nil [7816 7880])
            ("put" code nil nil [7881 7934])
            ("gnus-server-font-lock-keywords" variable (:default-value (quote (("(\\(agent\\))" 1 (quote gnus-server-agent)) ("(\\(cloud\\))" 1 (quote gnus-server-cloud)) ("(\\(opened\\))" 1 (quote gnus-server-opened)) ("(\\(closed\\))" 1 (quote gnus-server-closed)) ("(\\(offline\\))" 1 (quote gnus-server-offline)) ("(\\(denied\\))" 1 (quote gnus-server-denied))))) nil [7936 8244])
            ("gnus-server-mode" function (:user-visible-flag t) nil [8246 9228])
            ("gnus-server-insert-server-line" function (:arguments ("name" "method")) nil [9230 10181])
            ("gnus-enter-server-buffer" function nil nil [10183 10674])
            ("gnus-server-setup-buffer" function nil nil [10676 10883])
            ("gnus-server-prepare" function nil nil [10885 11956])
            ("gnus-server-server-name" function nil nil [11958 12097])
            ("gnus-server-named-server" function nil nil [12099 12337])
            ("defalias" code nil nil [12339 12394])
            ("gnus-server-edit-buffer" variable
               (:constant-flag t
                :default-value "*Gnus edit server*")
                nil [12396 12451])
            ("gnus-server-update-server" function (:arguments ("server")) nil [12453 13279])
            ("gnus-server-set-info" function (:arguments ("server" "info")) nil [13281 14210])
            ("gnus-server-kill-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [14247 15289])
            ("gnus-server-yank-server" function (:user-visible-flag t) nil [15291 16101])
            ("gnus-server-exit" function (:user-visible-flag t) nil [16103 16294])
            ("gnus-server-list-servers" function (:user-visible-flag t) nil [16296 16577])
            ("gnus-server-set-status" function (:arguments ("method" "status")) nil [16579 16805])
            ("gnus-opened-servers-remove" function (:arguments ("method")) nil [16807 16998])
            ("gnus-server-open-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [17000 17385])
            ("gnus-server-open-all-servers" function (:user-visible-flag t) nil [17387 17556])
            ("gnus-server-close-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [17558 17938])
            ("gnus-server-offline-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [17940 18334])
            ("gnus-server-close-all-servers" function (:user-visible-flag t) nil [18336 18590])
            ("gnus-server-deny-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [18592 18962])
            ("gnus-server-remove-denials" function (:user-visible-flag t) nil [18964 19215])
            ("gnus-server-copy-server" function
               (:user-visible-flag t
                :arguments ("from" "to"))
                nil [19217 19946])
            ("gnus-server-add-server" function (:arguments ("how" "where")) nil [19948 20395])
            ("gnus-server-goto-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [20397 20729])
            ("gnus-server-edit-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [20731 21278])
            ("gnus-server-show-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [21280 21657])
            ("gnus-server-scan-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [21659 22078])
            ("gnus-server-read-server-in-server-buffer" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [22080 22306])
            ("gnus-server-read-server" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [22308 22621])
            ("gnus-server-pick-server" function (:arguments ("e")) nil [22623 22754])
            ("gnus-browse-menu-hook" variable (:user-visible-flag t) nil [22790 22882])
            ("gnus-browse-subscribe-newsgroup-method" variable (:default-value (quote gnus-subscribe-alphabetically)) nil [22884 23961])
            ("gnus-browse-mode-hook" variable nil nil [23963 23997])
            ("gnus-browse-mode-map" variable nil nil [23998 24031])
            ("put" code nil nil [24032 24076])
            ("unless" code nil nil [24078 24949])
            ("gnus-browse-make-menu-bar" function nil nil [24951 25504])
            ("gnus-browse-current-method" variable nil nil [25506 25545])
            ("gnus-browse-return-buffer" variable nil nil [25546 25584])
            ("gnus-browse-buffer" variable (:default-value "*Gnus Browse Server*") nil [25586 25636])
            ("gnus-browse-foreign-server" function (:arguments ("server" "return-buffer")) nil [25638 29749])
            ("define-derived-mode" code nil nil [29751 30500])
            ("gnus-browse-read-group" function
               (:user-visible-flag t
                :arguments ("no-article" "number"))
                nil [30502 31059])
            ("gnus-browse-select-group" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [31061 31242])
            ("gnus-browse-next-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [31244 31389])
            ("gnus-browse-prev-group" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [31391 31504])
            ("gnus-browse-unsubscribe-current-group" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [31506 32087])
            ("gnus-browse-group-name" function nil nil [32089 32407])
            ("gnus-browse-describe-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [32409 32571])
            ("gnus-browse-delete-group" function
               (:user-visible-flag t
                :arguments ("group" "force"))
                nil [32573 33031])
            ("gnus-browse-unsubscribe-group" function nil nil [33033 34515])
            ("gnus-browse-exit" function (:user-visible-flag t) nil [34517 34952])
            ("gnus-browse-describe-briefly" function (:user-visible-flag t) nil [34954 35322])
            ("gnus-server-regenerate-server" function (:user-visible-flag t) nil [35324 36034])
            ("gnus-server-compact-server" function (:user-visible-flag t) nil [36170 37268])
            ("gnus-server-toggle-cloud-server" function (:user-visible-flag t) nil [37270 37997])
            ("gnus-srvr" package nil nil [37999 38019]))          
      :file "gnus-srvr.el.gz"
      :pointmax 38048
      :fsize 9492
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 915 . 916) (symbol 884 . 901) (open-paren 883 . 884)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [896 909])
            ("gnus" include nil nil [912 927])
            ("gnus-sum" include nil nil [928 947])
            ("unless" code nil nil [970 1053])
            ("gnus-cache-active-file" variable
               (:user-visible-flag t
                :default-value (expand-file-name "active" gnus-cache-directory))
                nil [1056 1204])
            ("gnus-cache-enter-articles" variable (:default-value (quote (ticked dormant))) nil [1206 1405])
            ("gnus-cache-remove-articles" variable (:default-value (quote (read))) nil [1407 1598])
            ("gnus-cacheable-groups" variable (:user-visible-flag t) nil [1600 1939])
            ("gnus-uncacheable-groups" variable (:user-visible-flag t) nil [1941 2289])
            ("gnus-cache-overview-coding-system" variable (:default-value (quote raw-text)) nil [2291 2387])
            ("gnus-cache-coding-system" variable (:default-value (quote raw-text)) nil [2389 2476])
            ("gnus-cache-removable-articles" variable nil nil [2506 2548])
            ("gnus-cache-buffer" variable nil nil [2549 2579])
            ("gnus-cache-active-hashtb" variable nil nil [2580 2617])
            ("gnus-cache-active-altered" variable nil nil [2618 2656])
            ("gnus-cache-total-fetched-hashtb" variable nil nil [2657 2701])
            ("declare-function" code nil nil [2703 2774])
            ("nnml-generate-nov-databases-directory" function (:prototype-flag t) nil [2776 2832])
            ("nnvirtual-find-group-art" function (:prototype-flag t) nil [2833 2881])
            ("gnus-cache-open" function nil nil [2919 3115])
            ("ignore-errors" code nil nil [3186 3247])
            ("gnus-cache-close" function nil nil [3249 3395])
            ("gnus-cache-save-buffers" function nil nil [3397 4782])
            ("gnus-cache-possibly-enter-article" function (:arguments ("group" "article" "ticked" "dormant" "unread" "force")) nil [4784 7445])
            ("gnus-cache-enter-remove-article" function (:arguments ("article")) nil [7447 7607])
            ("gnus-cache-possibly-remove-articles" function nil nil [7609 8167])
            ("gnus-cache-possibly-remove-articles-1" function nil nil [8169 8997])
            ("gnus-cache-request-article" function (:arguments ("article" "group")) nil [8999 9415])
            ("gnus-cache-possibly-alter-active" function (:arguments ("group" "active")) nil [9417 9843])
            ("gnus-cache-retrieve-headers" function (:arguments ("articles" "group" "fetch-old")) nil [9845 11459])
            ("gnus-cache-enter-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [11461 12268])
            ("gnus-cache-remove-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [12270 13243])
            ("gnus-cached-article-p" function (:arguments ("article")) nil [13245 13379])
            ("gnus-summary-insert-cached-articles" function (:user-visible-flag t) nil [13381 13900])
            ("gnus-summary-limit-include-cached" function (:user-visible-flag t) nil [13902 14244])
            ("gnus-cache-change-buffer" function (:arguments ("group")) nil [14271 15211])
            ("gnus-cache-member-of-class" function (:arguments ("class" "ticked" "dormant" "unread")) nil [15266 15524])
            ("gnus-cache-decoded-group-names" variable nil nil [15526 15739])
            ("gnus-cache-unified-group-names" variable nil nil [15741 16351])
            ("gnus-cache-decoded-group-name" function (:arguments ("group")) nil [16353 16991])
            ("gnus-cache-file-name" function (:arguments ("group" "article")) nil [16993 17722])
            ("gnus-cache-update-article" function (:arguments ("group" "article")) nil [17724 18066])
            ("gnus-cache-possibly-remove-article" function (:arguments ("article" "ticked" "dormant" "unread" "force")) nil [18068 19356])
            ("gnus-cache-articles-in-group" function (:arguments ("group")) nil [19358 20122])
            ("gnus-cache-braid-nov" function (:arguments ("group" "cached" "file")) nil [20124 21210])
            ("gnus-cache-braid-heads" function (:arguments ("group" "cached")) nil [21212 22296])
            ("gnus-jog-cache" function (:user-visible-flag t) nil [22313 23044])
            ("gnus-cache-read-active" function (:arguments ("force")) nil [23046 23724])
            ("gnus-cache-write-active" function (:arguments ("force")) nil [23726 24072])
            ("gnus-cache-possibly-update-active" function (:arguments ("group" "active")) nil [24074 24759])
            ("gnus-cache-update-active" function (:arguments ("group" "number" "low")) nil [24761 25326])
            ("gnus-cache-generate-active" function
               (:user-visible-flag t
                :arguments ("directory"))
                nil [25343 27360])
            ("gnus-cache-generate-nov-databases" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [27377 27708])
            ("gnus-cache-move-cache" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [27710 27873])
            ("gnus-cache-fully-p" function (:arguments ("group")) nil [27875 28345])
            ("gnus-cache-rename-group" function (:arguments ("old-group" "new-group")) nil [28362 29499])
            ("gnus-cache-delete-group" function (:arguments ("group")) nil [29516 30339])
            ("gnus-cache-inhibit-update-total-fetched-for" variable nil nil [30341 30397])
            ("gnus-cache-need-update-total-fetched-for" variable nil nil [30398 30451])
            ("gnus-cache-with-refreshed-group" function (:arguments ("group" "body")) nil [30453 30838])
            ("gnus-cache-update-file-total-fetched-for" function (:arguments ("group" "file" "subtract")) nil [30840 31698])
            ("gnus-cache-update-overview-total-fetched-for" function (:arguments ("group" "file")) nil [31700 32292])
            ("gnus-cache-rename-group-total-fetched-for" function (:arguments ("old-group" "new-group")) nil [32294 32693])
            ("gnus-cache-delete-group-total-fetched-for" function (:arguments ("group")) nil [32695 32917])
            ("gnus-cache-total-fetched-for" function (:arguments ("group" "no-inhibit")) nil [32919 33521])
            ("gnus-cache" package nil nil [33523 33544]))          
      :file "gnus-cache.el.gz"
      :pointmax 33574
      :fsize 8331
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1053 . 1054) (symbol 950 . 967) (open-paren 949 . 950) (close-paren 909 . 910) (symbol 878 . 895) (open-paren 877 . 878)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [917 930])
            ("mm-util" include nil nil [933 951])
            ("gnus-ems" include nil nil [952 971])
            ("gnus-util" include nil nil [972 992])
            ("gnus" include nil nil [993 1008])
            ("gnus-face-properties-alist" variable nil nil [1010 1045])
            ("gnus-x-face-directory" variable
               (:user-visible-flag t
                :default-value (expand-file-name "x-faces" gnus-directory))
                nil [1047 1230])
            ("gnus-x-face-omit-files" variable nil nil [1232 1412])
            ("gnus-face-directory" variable
               (:user-visible-flag t
                :default-value (expand-file-name "faces" gnus-directory))
                nil [1414 1591])
            ("gnus-face-omit-files" variable nil nil [1593 1769])
            ("gnus-convert-pbm-to-x-face-command" variable (:default-value "pbmtoxbm %s | compface") nil [1771 1942])
            ("gnus-convert-image-to-x-face-command" variable (:default-value "convert -scale 48x48! %s xbm:- | xbm2xface.pl") nil [1944 2503])
            ("gnus-convert-image-to-face-command" variable (:default-value "convert -scale 48x48! %s -colors %d png:-") nil [2505 3117])
            ("gnus-shell-command-to-string" function (:arguments ("command")) nil [3119 3356])
            ("gnus--random-face-with-type" function (:arguments ("dir" "ext" "omit" "fun")) nil [3373 3833])
            ("message-goto-eoh" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3850 3894])
            ("message-insert-header" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3895 3944])
            ("gnus--insert-random-face-with-type" function (:arguments ("fun" "type")) nil [3946 4378])
            ("gnus-random-x-face" function (:user-visible-flag t) nil [4397 4901])
            ("gnus-insert-random-x-face-header" function (:user-visible-flag t) nil [4918 5108])
            ("gnus-x-face-from-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [5125 5511])
            ("gnus-face-from-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [5528 6364])
            ("gnus-face-encode" function nil nil [6366 6725])
            ("gnus-convert-face-to-png" function (:arguments ("face")) nil [6742 7005])
            ("gnus-convert-png-to-face" function (:arguments ("file")) nil [7022 7364])
            ("gnus-random-face" function (:user-visible-flag t) nil [7381 7702])
            ("gnus-insert-random-face-header" function nil nil [7719 7883])
            ("gnus-x-face" variable
               (:default-value (quote ((t (:foreground "black" :background "white"))))
                :type "face")
                nil [7885 8112])
            ("declare-function" code nil nil [8114 8171])
            ("declare-function" code nil nil [8172 8235])
            ("declare-function" code nil nil [8236 8307])
            ("declare-function" code nil nil [8308 8369])
            ("gnus-display-x-face-in-from" function (:arguments ("data")) nil [8371 9183])
            ("gnus-grab-cam-x-face" function (:user-visible-flag t) nil [9185 9832])
            ("gnus-grab-cam-face" function (:user-visible-flag t) nil [9834 10669])
            ("gnus-fun-ppm-change-string" function nil nil [10671 11018])
            ("gnus-funcall-no-warning" function (:arguments ("function" "args")) nil [11020 11127])
            ("gnus-fun" package nil nil [11129 11148]))          
      :file "gnus-fun.el.gz"
      :pointmax 11176
      :fsize 3545
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 930 . 931) (symbol 897 . 914) (open-paren 896 . 897)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [909 922])
            ("gnus-range-normalize" function (:arguments ("range")) nil [955 1135])
            ("gnus-last-element" function (:arguments ("list")) nil [1137 1263])
            ("gnus-copy-sequence" function (:arguments ("list")) nil [1265 1541])
            ("gnus-set-difference" function (:arguments ("list1" "list2")) nil [1543 1888])
            ("gnus-range-nconcat" function (:arguments ("ranges")) nil [1890 2953])
            ("gnus-range-difference" function (:arguments ("range1" "range2")) nil [2955 4537])
            ("gnus-sorted-difference" function (:arguments ("list1" "list2")) nil [4556 5058])
            ("gnus-sorted-ndifference" function (:arguments ("list1" "list2")) nil [5075 5586])
            ("gnus-sorted-complement" function (:arguments ("list1" "list2")) nil [5603 6199])
            ("gnus-intersection" function (:arguments ("list1" "list2")) nil [6216 6417])
            ("gnus-sorted-intersection" function (:arguments ("list1" "list2")) nil [6434 6864])
            ("gnus-sorted-range-intersection" function (:arguments ("range1" "range2")) nil [6881 8906])
            ("defalias" code nil nil [8923 8990])
            ("gnus-sorted-nintersection" function (:arguments ("list1" "list2")) nil [9007 9539])
            ("gnus-sorted-union" function (:arguments ("list1" "list2")) nil [9556 10198])
            ("gnus-sorted-nunion" function (:arguments ("list1" "list2")) nil [10215 10890])
            ("gnus-compress-sequence" function (:arguments ("numbers" "always-list")) nil [10892 11811])
            ("defalias" code nil nil [11813 11872])
            ("gnus-uncompress-range" function (:arguments ("ranges")) nil [11873 12675])
            ("gnus-add-to-range" function (:arguments ("ranges" "list")) nil [12677 14559])
            ("gnus-remove-from-range" function (:arguments ("range1" "range2")) nil [14561 17328])
            ("gnus-member-of-range" function (:arguments ("number" "ranges")) nil [17330 17839])
            ("gnus-list-range-intersection" function (:arguments ("list" "ranges")) nil [17841 18449])
            ("defalias" code nil nil [18451 18527])
            ("gnus-list-range-difference" function (:arguments ("list" "ranges")) nil [18529 19150])
            ("gnus-range-length" function (:arguments ("range")) nil [19152 19463])
            ("gnus-range-add" function (:arguments ("range1" "range2")) nil [19465 21154])
            ("gnus-add-to-sorted-list" function (:arguments ("list" "num")) nil [21171 21473])
            ("gnus-range-map" function (:arguments ("func" "range")) nil [21475 21876])
            ("gnus-range" package nil nil [21878 21899]))          
      :file "gnus-range.el.gz"
      :pointmax 21929
      :fsize 4834
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 922 . 923) (symbol 891 . 908) (open-paren 890 . 891)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [860 875])
            ("gnus-cache" include nil nil [876 897])
            ("nnmail" include nil nil [898 915])
            ("nnvirtual" include nil nil [916 936])
            ("gnus-sum" include nil nil [937 956])
            ("gnus-score" include nil nil [957 978])
            ("gnus-srvr" include nil nil [979 999])
            ("gnus-util" include nil nil [1000 1020])
            ("cl" include nil nil [1113 1126])
            ("if" code nil nil [1042 1110])
            ("gnus-server-update-server" function (:prototype-flag t) nil [1129 1178])
            ("gnus-agent-customize-category" function (:prototype-flag t) nil [1179 1231])
            ("gnus-agent-directory" variable (:default-value (nnheader-concat gnus-directory "agent/")) nil [1233 1394])
            ("gnus-agent-plugged-hook" variable nil nil [1396 1515])
            ("gnus-agent-unplugged-hook" variable nil nil [1517 1640])
            ("gnus-agent-fetched-hook" variable nil nil [1642 1780])
            ("gnus-agent-handle-level" variable (:default-value gnus-level-subscribed) nil [1782 1954])
            ("gnus-agent-expire-days" variable (:default-value 7) nil [1956 2169])
            ("gnus-agent-expire-all" variable nil nil [2171 2355])
            ("gnus-agent-group-mode-hook" variable nil nil [2357 2475])
            ("when" code nil nil [2549 2647])
            ("gnus-agent-summary-mode-hook" variable nil nil [2649 2771])
            ("when" code nil nil [2845 2947])
            ("gnus-agent-server-mode-hook" variable nil nil [2949 3070])
            ("when" code nil nil [3144 3244])
            ("gnus-agent-confirmation-function" variable (:default-value (quote y-or-n-p)) nil [3246 3401])
            ("gnus-agent-synchronize-flags" variable nil nil [3403 3840])
            ("gnus-agent-go-online" variable (:default-value (quote ask)) nil [3842 4121])
            ("gnus-agent-mark-unread-after-downloaded" variable (:default-value t) nil [4123 4295])
            ("gnus-agent-download-marks" variable (:default-value (quote (download))) nil [4297 4451])
            ("gnus-agent-consider-all-articles" variable nil nil [4453 5013])
            ("gnus-agent-max-fetch-size" variable (:default-value 10000000) nil [5015 5254])
            ("gnus-agent-enable-expiration" variable (:default-value (quote ENABLE)) nil [5256 5825])
            ("gnus-agent-expire-unagentized-dirs" variable
               (:user-visible-flag t
                :default-value t)
                nil [5827 6146])
            ("gnus-agent-auto-agentize-methods" variable nil nil [6148 6444])
            ("gnus-agent-queue-mail" variable (:default-value t) nil [6446 6813])
            ("gnus-agent-prompt-send-queue" variable nil nil [6815 6993])
            ("gnus-agent-article-alist-save-format" variable (:default-value 1) nil [6995 7489])
            ("gnus-agent-history-buffers" variable nil nil [7515 7554])
            ("gnus-agent-buffer-alist" variable nil nil [7555 7591])
            ("gnus-agent-article-alist" variable nil nil [7592 8283])
            ("gnus-agent-group-alist" variable nil nil [8284 8319])
            ("gnus-category-alist" variable nil nil [8320 8352])
            ("gnus-agent-current-history" variable nil nil [8353 8392])
            ("gnus-agent-overview-buffer" variable nil nil [8393 8432])
            ("gnus-category-predicate-cache" variable nil nil [8433 8475])
            ("gnus-category-group-cache" variable nil nil [8476 8514])
            ("gnus-agent-spam-hashtb" variable nil nil [8515 8550])
            ("gnus-agent-file-name" variable nil nil [8551 8584])
            ("gnus-agent-file-coding-system" variable (:default-value (quote raw-text)) nil [8585 8633])
            ("gnus-agent-file-loading-cache" variable nil nil [8634 8676])
            ("gnus-agent-total-fetched-hashtb" variable nil nil [8677 8721])
            ("gnus-agent-inhibit-update-total-fetched-for" variable nil nil [8722 8778])
            ("gnus-agent-need-update-total-fetched-for" variable nil nil [8779 8832])
            ("gnus-headers" variable nil nil [8855 8876])
            ("gnus-score" variable nil nil [8877 8896])
            ("unless" code nil nil [8945 9241])
            ("gnus-open-agent" function nil nil [9263 9550])
            ("gnus-agent-create-buffer" function nil nil [9552 9830])
            ("gnus-add-shutdown" code nil nil [9832 9875])
            ("gnus-close-agent" function nil nil [9877 10054])
            ("gnus-agent-with-refreshed-group" function (:arguments ("group" "body")) nil [10087 10595])
            ("gnus-agent-read-file" function (:arguments ("file")) nil [10597 10813])
            ("gnus-agent-method" function nil nil [10815 10996])
            ("gnus-agent-directory" function nil nil [10998 11176])
            ("gnus-agent-lib-file" function (:arguments ("file")) nil [11178 11380])
            ("gnus-agent-cat-set-property" function (:arguments ("category" "property" "value")) nil [11382 11895])
            ("gnus-agent-cat-defaccessor" function (:arguments ("name" "prop-name")) nil [11918 12546])
            ("gnus-agent-cat-name" function (:arguments ("category")) nil [12552 12612])
            ("gnus-agent-cat-defaccessor" code nil nil [12614 12706])
            ("gnus-agent-cat-defaccessor" code nil nil [12707 12802])
            ("gnus-agent-cat-defaccessor" code nil nil [12803 12887])
            ("gnus-agent-cat-defaccessor" code nil nil [12888 12976])
            ("gnus-agent-cat-defaccessor" code nil nil [12977 13067])
            ("gnus-agent-cat-defaccessor" code nil nil [13068 13159])
            ("gnus-agent-cat-defaccessor" code nil nil [13160 13247])
            ("gnus-agent-cat-defaccessor" code nil nil [13248 13335])
            ("gnus-agent-cat-defaccessor" code nil nil [13336 13419])
            ("gnus-agent-cat-defaccessor" code nil nil [13420 13523])
            ("defsetf" code nil nil [13723 13780])
            ("gnus-agent-set-cat-groups" function (:arguments ("category" "groups")) nil [13782 15263])
            ("gnus-agent-cat-make" function (:arguments ("name" "default-agent-predicate")) nil [15265 15408])
            ("gnus-agent-read-group" function nil nil [15410 15682])
            ("gnus-agent-start-fetch" function nil nil [15715 15832])
            ("gnus-agent-stop-fetch" function nil nil [15834 16000])
            ("gnus-agent-with-fetch" function (:arguments ("forms")) nil [16002 16194])
            ("put" code nil nil [16196 16248])
            ("put" code nil nil [16249 16303])
            ("gnus-agent-append-to-list" function (:arguments ("tail" "value")) nil [16305 16403])
            ("gnus-agent-message" function (:arguments ("level" "args")) nil [16405 16510])
            ("gnus-agent-mode-hook" variable nil nil [16542 16616])
            ("gnus-agent-mode" variable nil nil [16618 16646])
            ("gnus-agent-mode-status" variable (:default-value (quote (gnus-agent-mode " Plugged"))) nil [16647 16708])
            ("gnus-agent-mode" function nil nil [16710 18022])
            ("gnus-agent-group-mode-map" variable (:default-value (make-sparse-keymap)) nil [18024 18079])
            ("gnus-define-keys" code nil nil [18080 18417])
            ("gnus-agent-group-make-menu-bar" function nil nil [18419 19150])
            ("gnus-agent-summary-mode-map" variable (:default-value (make-sparse-keymap)) nil [19152 19209])
            ("gnus-define-keys" code nil nil [19210 19518])
            ("gnus-agent-summary-make-menu-bar" function nil nil [19520 20045])
            ("gnus-agent-server-mode-map" variable (:default-value (make-sparse-keymap)) nil [20047 20103])
            ("gnus-define-keys" code nil nil [20104 20243])
            ("gnus-agent-server-make-menu-bar" function nil nil [20245 20566])
            ("gnus-agent-make-mode-line-string" function (:arguments ("string" "mouse-button" "mouse-func")) nil [20568 21077])
            ("gnus-agent-toggle-plugged" function
               (:user-visible-flag t
                :arguments ("set-to"))
                nil [21079 22081])
            ("gnus-agent-while-plugged" function (:arguments ("body")) nil [22083 22324])
            ("put" code nil nil [22326 22381])
            ("put" code nil nil [22382 22439])
            ("gnus-agent-close-connections" function nil nil [22441 22638])
            ("gnus-unplugged" function (:user-visible-flag t) nil [22655 22757])
            ("gnus-plugged" function (:user-visible-flag t) nil [22774 22870])
            ("gnus-slave-unplugged" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [22887 23037])
            ("gnus-agentize" function (:user-visible-flag t) nil [23054 24275])
            ("gnus-agent-queue-setup" function (:arguments ("group-name")) nil [24277 24860])
            ("gnus-agent-send-mail" function nil nil [24862 25322])
            ("gnus-agent-insert-meta-information" function (:arguments ("type" "method")) nil [25324 25874])
            ("gnus-agent-restore-gcc" function nil nil [25876 26134])
            ("gnus-agent-any-covered-gcc" function nil nil [26136 26565])
            ("gnus-agent-possibly-save-gcc" function nil nil [26582 26913])
            ("gnus-agent-possibly-do-gcc" function nil nil [26915 27069])
            ("gnus-agent-fetch-groups" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [27104 27356])
            ("gnus-agent-fetch-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [27358 27941])
            ("gnus-agent-add-group" function
               (:user-visible-flag t
                :arguments ("category" "arg"))
                nil [27943 28652])
            ("gnus-agent-remove-group" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [28654 29025])
            ("gnus-agent-synchronize-flags" function (:user-visible-flag t) nil [29027 29329])
            ("gnus-agent-possibly-synchronize-flags" function (:user-visible-flag t) nil [29331 29676])
            ("gnus-agent-synchronize-flags-server" function (:arguments ("method")) nil [29678 30839])
            ("gnus-agent-possibly-synchronize-flags-server" function (:arguments ("method")) nil [30841 31349])
            ("gnus-agent-rename-group" function (:arguments ("old-group" "new-group")) nil [31366 32855])
            ("gnus-agent-delete-group" function (:arguments ("group")) nil [32872 33804])
            ("gnus-agent-add-server" function (:user-visible-flag t) nil [33840 34511])
            ("gnus-agent-remove-server" function (:user-visible-flag t) nil [34513 35151])
            ("gnus-agent-read-servers" function nil nil [35153 35677])
            ("gnus-agent-read-servers-validate" function nil nil [35679 36384])
            ("gnus-agent-read-servers-validate-native" function (:arguments ("native-method")) nil [36386 36701])
            ("gnus-agent-write-servers" function nil nil [36703 37106])
            ("gnus-agent-mark-article" function
               (:user-visible-flag t
                :arguments ("n" "unmark"))
                nil [37138 37813])
            ("gnus-agent-unmark-article" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [37815 38088])
            ("gnus-agent-toggle-mark" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [38090 38365])
            ("gnus-summary-set-agent-mark" function (:arguments ("article" "unmark")) nil [38367 39175])
            ("gnus-agent-get-undownloaded-list" function nil nil [39192 41458])
            ("gnus-agent-catchup" function (:user-visible-flag t) nil [41460 42089])
            ("gnus-agent-summary-fetch-series" function (:user-visible-flag t) nil [42091 43178])
            ("gnus-agent-summary-fetch-group" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [43180 44707])
            ("gnus-agent-fetch-selected-article" function nil nil [44709 45282])
            ("gnus-agent-synchronize-group-flags" function (:arguments ("group" "actions" "server")) nil [45316 47093])
            ("gnus-agent-save-active" function (:arguments ("method" "groups-p")) nil [47095 47868])
            ("gnus-agent-write-active" function (:arguments ("file" "new")) nil [47870 48271])
            ("gnus-agent-possibly-alter-active" function (:arguments ("group" "active" "info")) nil [48288 50535])
            ("gnus-agent-save-group-info" function (:arguments ("method" "group" "active")) nil [50537 51803])
            ("gnus-agent-get-group-info" function (:arguments ("method" "group")) nil [51805 52801])
            ("gnus-agent-decoded-group-names" variable nil nil [52803 52899])
            ("gnus-agent-decoded-group-name" function (:arguments ("group")) nil [52901 53230])
            ("gnus-agent-group-path" function (:arguments ("group")) nil [53232 53917])
            ("gnus-agent-group-pathname" function (:arguments ("group")) nil [53919 54396])
            ("gnus-agent-get-function" function (:arguments ("method")) nil [54398 54521])
            ("gnus-agent-covered-methods" function nil nil [54523 54697])
            ("gnus-agent-history-buffer" function nil nil [54722 54821])
            ("gnus-agent-open-history" function nil nil [54823 55329])
            ("gnus-agent-close-history" function nil nil [55331 55600])
            ("gnus-agent-fetch-articles" function (:arguments ("group" "articles")) nil [55624 61915])
            ("gnus-agent-unfetch-articles" function (:arguments ("group" "articles")) nil [61917 63200])
            ("gnus-agent-crosspost" function (:arguments ("crosses" "article" "date")) nil [63202 64438])
            ("gnus-agent-backup-overview-buffer" function nil nil [64440 64929])
            ("gnus-agent-check-overview-buffer" function (:arguments ("buffer")) nil [64931 66340])
            ("gnus-agent-flush-server" function (:arguments ("server-or-method")) nil [66342 66921])
            ("gnus-agent-flush-group" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [66923 68018])
            ("gnus-agent-flush-cache" function (:user-visible-flag t) nil [68020 69105])
            ("gnus-agent-find-parameter" function (:arguments ("group" "symbol")) nil [69122 69989])
            ("gnus-agent-fetch-headers" function (:arguments ("group")) nil [69991 75395])
            ("gnus-agent-read-article-number" function nil nil [75397 76209])
            ("gnus-agent-copy-nov-line" function (:arguments ("article")) nil [76211 76812])
            ("gnus-agent-braid-nov" function (:arguments ("articles" "file")) nil [76814 79569])
            ("gnus-agent-read-agentview" variable nil nil [79663 79697])
            ("gnus-agent-load-alist" function (:arguments ("group")) nil [79699 80190])
            ("gnus-agent-read-agentview" function (:arguments ("file")) nil [80192 82356])
            ("gnus-agent-save-alist" function (:arguments ("group" "articles" "state")) nil [82358 84333])
            ("gnus-agent-article-local" variable nil nil [84335 84372])
            ("gnus-agent-article-local-times" variable nil nil [84373 84416])
            ("gnus-agent-file-loading-local" variable nil nil [84417 84459])
            ("gnus-agent-load-local" function (:arguments ("method")) nil [84461 85220])
            ("gnus-agent-read-and-cache-local" function (:arguments ("file")) nil [85222 85625])
            ("gnus-agent-read-local" function (:arguments ("file")) nil [85627 87115])
            ("gnus-agent-save-local" function (:arguments ("force")) nil [87117 88329])
            ("gnus-agent-get-local" function (:arguments ("group" "gmane" "method")) nil [88331 89263])
            ("gnus-agent-set-local" function (:arguments ("group" "min" "max" "gmane" "method" "local")) nil [89265 90076])
            ("gnus-agent-article-name" function (:arguments ("article" "group")) nil [90078 90240])
            ("gnus-agent-batch-confirmation" function (:arguments ("msg")) nil [90242 90354])
            ("gnus-agent-batch-fetch" function (:user-visible-flag t) nil [90371 90590])
            ("gnus-agent-fetch-session" function (:user-visible-flag t) nil [90592 92311])
            ("gnus-agent-short-article" variable (:default-value 500) nil [92313 92406])
            ("gnus-agent-long-article" variable (:default-value 1000) nil [92408 92499])
            ("gnus-agent-low-score" variable nil nil [92501 92597])
            ("gnus-agent-high-score" variable nil nil [92599 92698])
            ("gnus-agent-fetch-group-1" function (:arguments ("group" "method")) nil [92700 101185])
            ("gnus-category-mode-hook" variable nil nil [101220 101302])
            ("gnus-category-line-format" variable (:default-value "     %(%20c%): %g
") nil [101304 101579])
            ("gnus-category-mode-line-format" variable (:default-value "Gnus: %%b") nil [101581 101689])
            ("gnus-agent-predicate" variable (:default-value (quote false)) nil [101691 101795])
            ("gnus-category-buffer" variable (:default-value "*Agent Category*") nil [101823 101871])
            ("gnus-tmp-name" variable nil nil [101873 101895])
            ("gnus-tmp-groups" variable nil nil [101896 101920])
            ("gnus-category-line-format-alist" variable (:default-value (\` ((99 gnus-tmp-name 115) (103 gnus-tmp-groups 100)))) nil [101922 102017])
            ("gnus-category-mode-line-format-alist" variable (:default-value (\` ((117 user-defined 115)))) nil [102019 102090])
            ("gnus-category-line-format-spec" variable nil nil [102092 102135])
            ("gnus-category-mode-line-format-spec" variable nil nil [102136 102184])
            ("gnus-category-mode-map" variable nil nil [102186 102221])
            ("put" code nil nil [102222 102268])
            ("unless" code nil nil [102270 102778])
            ("gnus-category-menu-hook" variable (:user-visible-flag t) nil [102780 102862])
            ("gnus-category-make-menu-bar" function nil nil [102864 103481])
            ("define-derived-mode" code nil nil [103483 104087])
            ("defalias" code nil nil [104089 104146])
            ("gnus-category-insert-line" function (:arguments ("category")) nil [104148 104517])
            ("gnus-enter-category-buffer" function (:user-visible-flag t) nil [104519 104697])
            ("gnus-category-setup-buffer" function nil nil [104699 104880])
            ("gnus-category-prepare" function nil nil [104882 105189])
            ("gnus-category-name" function nil nil [105191 105334])
            ("gnus-category-read" function nil nil [105336 106727])
            ("gnus-category-write" function nil nil [106729 107470])
            ("gnus-category-edit-predicate" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [107472 108191])
            ("gnus-category-edit-score" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [108193 108921])
            ("gnus-category-edit-groups" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [108923 109598])
            ("gnus-category-kill" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [109600 109901])
            ("gnus-category-copy" function
               (:user-visible-flag t
                :arguments ("category" "to"))
                nil [109903 110359])
            ("gnus-category-add" function
               (:user-visible-flag t
                :arguments ("category"))
                nil [110361 110662])
            ("gnus-category-list" function (:user-visible-flag t) nil [110664 110760])
            ("gnus-category-exit" function (:user-visible-flag t) nil [110762 110908])
            ("gnus-category-not" variable (:default-value (list (quote !) (quote not) (intern (format "%c" 172)))) nil [110966 111034])
            ("gnus-category-predicate-alist" variable (:default-value (quote ((spam . gnus-agent-spam-p) (short . gnus-agent-short-p) (long . gnus-agent-long-p) (low . gnus-agent-low-scored-p) (high . gnus-agent-high-scored-p) (read . gnus-agent-read-p) (true . gnus-agent-true) (false . gnus-agent-false)))) nil [111036 111406])
            ("gnus-agent-spam-p" function nil nil [111408 111836])
            ("gnus-agent-short-p" function nil nil [111838 111975])
            ("gnus-agent-long-p" function nil nil [111977 112111])
            ("gnus-agent-low-scored-p" function nil nil [112113 112236])
            ("gnus-agent-high-scored-p" function nil nil [112238 112364])
            ("gnus-agent-read-p" function nil nil [112366 112552])
            ("gnus-category-make-function" function (:arguments ("predicate")) nil [112554 112815])
            ("gnus-agent-true" function nil nil [112817 112861])
            ("gnus-agent-false" function nil nil [112863 112912])
            ("gnus-category-make-function-1" function (:arguments ("predicate")) nil [112914 113505])
            ("gnus-get-predicate" function (:arguments ("predicate")) nil [113507 113781])
            ("gnus-predicate-implies-unread" function (:arguments ("predicate")) nil [113783 114151])
            ("gnus-function-implies-unread-1" function (:arguments ("function")) nil [114153 116581])
            ("gnus-group-category" function (:arguments ("group")) nil [116583 117062])
            ("gnus-agent-expire-current-dirs" variable nil nil [117064 117103])
            ("gnus-agent-expire-stats" variable nil nil [117104 117136])
            ("gnus-agent-expire-group" function
               (:user-visible-flag t
                :arguments ("group" "articles" "force"))
                nil [117138 119035])
            ("gnus-agent-expire-group-1" function (:arguments ("group" "overview" "active" "articles" "force")) nil [119037 131870])
            ("gnus-agent-expire" function
               (:user-visible-flag t
                :arguments ("articles" "group" "force"))
                nil [131872 134298])
            ("gnus-agent-expire-done-message" function nil nil [134300 134879])
            ("gnus-agent-expire-unagentized-dirs" function nil nil [134881 138552])
            ("gnus-agent-batch" function (:user-visible-flag t) nil [138569 138869])
            ("gnus-agent-unread-articles" function (:arguments ("group")) nil [138871 139842])
            ("gnus-agent-uncached-articles" function (:arguments ("articles" "group" "cached-header")) nil [139844 141355])
            ("gnus-agent-retrieve-headers" function (:arguments ("articles" "group" "fetch-old")) nil [141357 147062])
            ("gnus-agent-request-article" function (:arguments ("article" "group")) nil [147064 147799])
            ("gnus-agent-store-article" function (:arguments ("article" "group")) nil [147801 148472])
            ("gnus-agent-regenerate-group" function
               (:user-visible-flag t
                :arguments ("group" "reread"))
                nil [148474 156435])
            ("gnus-agent-regenerate" function
               (:user-visible-flag t
                :arguments ("_clean" "reread"))
                nil [156452 156999])
            ("gnus-agent-go-online" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [157001 157385])
            ("gnus-agent-toggle-group-plugged" function
               (:user-visible-flag t
                :arguments ("group"))
                nil [157387 157965])
            ("gnus-agent-group-covered-p" function (:arguments ("group")) nil [157967 158059])
            ("gnus-agent-update-files-total-fetched-for" function (:arguments ("group" "delta" "method" "path")) nil [158061 159355])
            ("gnus-agent-update-view-total-fetched-for" function (:arguments ("group" "agent-over" "method" "path")) nil [159357 160323])
            ("gnus-agent-total-fetched-for" function (:arguments ("group" "method" "no-inhibit")) nil [160325 161149])
            ("gnus-agent" package nil nil [161151 161172]))          
      :file "gnus-agent.el.gz"
      :pointmax 161202
      :fsize 37875
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 12549 . 12550) (symbol 11898 . 11915) (open-paren 11897 . 11898) (close-paren 9241 . 9242) (symbol 8926 . 8942) (open-paren 8925 . 8926) (close-paren 1126 . 1127) (symbol 1022 . 1039) (open-paren 1021 . 1022)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [902 915])
            ("tool-bar-map" variable nil nil [917 938])
            ("w3m-minor-mode-map" variable nil nil [939 966])
            ("gnus" include nil nil [968 983])
            ("gnus-sum" include nil nil [984 1003])
            ("gnus-spec" include nil nil [1004 1024])
            ("gnus-int" include nil nil [1025 1044])
            ("gnus-win" include nil nil [1045 1064])
            ("mm-bodies" include nil nil [1065 1085])
            ("mail-parse" include nil nil [1086 1107])
            ("mm-decode" include nil nil [1108 1128])
            ("mm-view" include nil nil [1129 1147])
            ("wid-edit" include nil nil [1148 1167])
            ("mm-uu" include nil nil [1168 1184])
            ("message" include nil nil [1185 1203])
            ("mouse" include nil nil [1204 1220])
            ("gnus-msg-mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1222 1264])
            ("gnus-button-mailto" function (:prototype-flag t) nil [1265 1306])
            ("gnus-button-reply" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1307 1353])
            ("parse-time-string" function (:prototype-flag t) nil [1354 1404])
            ("ansi-color-apply-on-region" function (:prototype-flag t) nil [1405 1456])
            ("mm-url-insert-file-contents-external" function (:prototype-flag t) nil [1457 1514])
            ("mm-extern-cache-contents" function (:prototype-flag t) nil [1515 1563])
            ("url-expand-file-name" function (:prototype-flag t) nil [1564 1609])
            ("gnus-article" customgroup (:user-visible-flag t) nil [1611 1722])
            ("gnus-article-treat" customgroup (:user-visible-flag t) nil [1724 1856])
            ("gnus-article-hiding" customgroup (:user-visible-flag t) nil [1858 1989])
            ("gnus-article-highlight" customgroup (:user-visible-flag t) nil [1991 2153])
            ("gnus-article-signature" customgroup (:user-visible-flag t) nil [2155 2290])
            ("gnus-article-headers" customgroup (:user-visible-flag t) nil [2292 2419])
            ("gnus-article-washing" customgroup (:user-visible-flag t) nil [2421 2562])
            ("gnus-article-emphasis" customgroup (:user-visible-flag t) nil [2564 2702])
            ("gnus-article-saving" customgroup (:user-visible-flag t) nil [2704 2831])
            ("gnus-article-mime" customgroup (:user-visible-flag t) nil [2833 2964])
            ("gnus-article-buttons" customgroup (:user-visible-flag t) nil [2966 3117])
            ("gnus-article-various" customgroup (:user-visible-flag t) nil [3119 3250])
            ("gnus-ignored-headers" variable
               (:user-visible-flag t
                :default-value (mapcar (lambda (header) (concat "^" header ":")) (quote ("Path" "Expires" "Date-Received" "References" "Xref" "Lines" "Relay-Version" "Message-ID" "Approved" "Sender" "Received" "X-UIDL" "MIME-Version" "Return-Path" "In-Reply-To" "Content-Type" "Content-Transfer-Encoding" "X-WebTV-Signature" "X-MimeOLE" "X-MSMail-Priority" "X-Priority" "X-Loop" "X-Authentication-Warning" "X-MIME-Autoconverted" "X-Face" "X-Attribution" "X-Originating-IP" "Delivered-To" "NNTP-[-A-Za-z]+" "Distribution" "X-no-archive" "X-Trace" "X-Complaints-To" "X-NNTP-Posting-Host" "X-Orig.*" "Abuse-Reports-To" "Cache-Post-Path" "X-Article-Creation-Date" "X-Poster" "X-Mail2News-Path" "X-Server-Date" "X-Cache" "Originator" "X-Problems-To" "X-Auth-User" "X-Post-Time" "X-Admin" "X-UID" "Resent-[-A-Za-z]+" "X-Mailing-List" "Precedence" "Original-[-A-Za-z]+" "X-filename" "X-Orcpt" "Old-Received" "X-Pgp" "X-Auth" "X-From-Line" "X-Gnus-Article-Number" "X-Majordomo" "X-Url" "X-Sender" "MBOX-Line" "Priority" "X400-[-A-Za-z]+" "Status" "X-Gnus-Mail-Source" "Cancel-Lock" "X-FTN" "X-EXP32-SerialNo" "Encoding" "Importance" "Autoforwarded" "Original-Encoded-Information-Types" "X-Ya-Pop3" "X-Face-Version" "X-Vms-To" "X-ML-NAME" "X-ML-COUNT" "Mailing-List" "X-finfo" "X-md5sum" "X-md5sum-Origin" "X-Sun-Charset" "X-Accept-Language" "X-Envelope-Sender" "List-[A-Za-z]+" "X-Listprocessor-Version" "X-Received" "X-Distribute" "X-Sequence" "X-Juno-Line-Breaks" "X-Notes-Item" "X-MS-TNEF-Correlator" "x-uunet-gateway" "X-Received" "Content-length" "X-precedence" "X-Authenticated-User" "X-Comment" "X-Report" "X-Abuse-Info" "X-HTTP-Proxy" "X-Mydeja-Info" "X-Copyright" "X-No-Markup" "X-Abuse-Info" "X-From_" "X-Accept-Language" "Errors-To" "X-BeenThere" "X-Mailman-Version" "List-Help" "List-Post" "List-Subscribe" "List-Id" "List-Unsubscribe" "List-Archive" "X-Content-length" "X-Posting-Agent" "Original-Received" "X-Request-PGP" "X-Fingerprint" "X-WRIEnvto" "X-WRIEnvfrom" "X-Virus-Scanned" "X-Delivery-Agent" "Posted-Date" "X-Gateway" "X-Local-Origin" "X-Local-Destination" "X-UserInfo1" "X-Received-Date" "X-Hashcash" "Face" "X-DMCA-Notifications" "X-Abuse-and-DMCA-Info" "X-Postfilter" "X-Gpg-.*" "X-Disclaimer" "Envelope-To" "X-Spam-Score" "System-Type" "X-Injected-Via-Gmane" "X-Gmane-NNTP-Posting-Host" "Jabber-ID" "Archived-At" "Envelope-Sender" "Envelope-Recipients"))))
                nil [3252 6110])
            ("gnus-visible-headers" variable
               (:user-visible-flag t
                :default-value "^From:\\|^Newsgroups:\\|^Subject:\\|^Date:\\|^Followup-To:\\|^Reply-To:\\|^Organization:\\|^Summary:\\|^Keywords:\\|^To:\\|^[BGF]?Cc:\\|^Posted-To:\\|^Mail-Copies-To:\\|^Mail-Followup-To:\\|^Apparently-To:\\|^Gnus-Warning:\\|^Resent-From:")
                nil [6112 6922])
            ("gnus-sorted-header-list" variable
               (:user-visible-flag t
                :default-value (quote ("^From:" "^Subject:" "^Summary:" "^Keywords:" "^Newsgroups:" "^Followup-To:" "^To:" "^Cc:" "^Date:" "^Organization:")))
                nil [6924 7337])
            ("gnus-boring-article-headers" variable (:default-value (quote (empty followup-to reply-to))) nil [7339 8625])
            ("gnus-article-skip-boring" variable nil nil [8627 8995])
            ("gnus-signature-separator" variable (:default-value (quote ("^-- $" "^-- *$"))) nil [8997 9399])
            ("gnus-signature-limit" variable nil nil [9401 10099])
            ("gnus-hidden-properties" variable (:default-value (quote (invisible t))) nil [10101 10456])
            ("gnus-article-x-face-command" variable
               (:user-visible-flag t
                :default-value (if (featurep (quote xemacs)) (if (or (gnus-image-type-available-p (quote xface)) (gnus-image-type-available-p (quote pbm))) (quote gnus-display-x-face-in-from) "{ echo '/* Format_version=1, Width=48, Height=48, Depth=1, Valid_bits_per_item=16 */'; uncompface; } | icontopbm | ee -") (if (gnus-image-type-available-p (quote pbm)) (quote gnus-display-x-face-in-from) "{ echo '/* Format_version=1, Width=48, Height=48, Depth=1, Valid_bits_per_item=16 */'; uncompface; } | icontopbm | display -")))
                nil [10557 11440])
            ("gnus-article-x-face-too-ugly" variable nil nil [11442 11627])
            ("gnus-article-banner-alist" variable nil nil [11629 11933])
            ("gnus-define-group-parameter" code nil nil [11935 12635])
            ("gnus-article-address-banner-alist" variable nil nil [12637 13423])
            ("gnus-emphasis-custom-with-format" function (:arguments ("body")) nil [13425 13657])
            ("gnus-emphasis-custom-value-to-external" function (:arguments ("value")) nil [13659 13912])
            ("gnus-emphasis-custom-value-to-internal" function (:arguments ("value")) nil [13914 14318])
            ("gnus-emphasis-alist" variable
               (:user-visible-flag t
                :default-value (let ((types (quote (("\\*" "\\*" bold nil 2) ("_" "_" underline) ("/" "/" italic) ("_/" "/_" underline-italic) ("_\\*" "\\*_" underline-bold) ("\\*/" "/\\*" bold-italic) ("_\\*/" "/\\*_" underline-bold-italic))))) (nconc (gnus-emphasis-custom-with-format (mapcar (lambda (spec) (list (format format (car spec) (cadr spec)) (or (nth 3 spec) 2) (or (nth 4 spec) 3) (intern (format "gnus-emphasis-%s" (nth 2 spec))))) types)) (quote (("\\(\\s-\\|^\\)\\(_\\(\\(\\w\\|_[^_]\\)+\\)_\\)\\(\\s-\\|[?!.,;]\\)" 2 3 gnus-emphasis-underline))))))
                nil [14320 16902])
            ("gnus-emphasize-whitespace-regexp" variable (:default-value "^[ 	]+\\|[ 	]*
") nil [16904 17305])
            ("gnus-emphasis-bold" variable
               (:default-value (quote ((t (:bold t))))
                :type "face")
                nil [17307 17446])
            ("gnus-emphasis-italic" variable
               (:default-value (quote ((t (:italic t))))
                :type "face")
                nil [17448 17591])
            ("gnus-emphasis-underline" variable
               (:default-value (quote ((t (:underline t))))
                :type "face")
                nil [17593 17746])
            ("gnus-emphasis-underline-bold" variable
               (:default-value (quote ((t (:bold t :underline t))))
                :type "face")
                nil [17748 17921])
            ("gnus-emphasis-underline-italic" variable
               (:default-value (quote ((t (:italic t :underline t))))
                :type "face")
                nil [17923 18102])
            ("gnus-emphasis-bold-italic" variable
               (:default-value (quote ((t (:bold t :italic t))))
                :type "face")
                nil [18104 18267])
            ("gnus-emphasis-underline-bold-italic" variable
               (:default-value (quote ((t (:bold t :italic t :underline t))))
                :type "face")
                nil [18269 18480])
            ("gnus-emphasis-strikethru" variable
               (:default-value (if (featurep (quote xemacs)) (quote ((t (:strikethru t)))) (quote ((t (:strike-through t)))))
                :type "face")
                nil [18482 18699])
            ("gnus-emphasis-highlight-words" variable
               (:default-value (quote ((t (:background "black" :foreground "yellow"))))
                :type "face")
                nil [18701 18872])
            ("gnus-article-time-format" variable (:default-value "%a, %d %b %Y %T %Z") nil [18874 19325])
            ("gnus-save-all-headers" variable
               (:user-visible-flag t
                :default-value t)
                nil [19327 19620])
            ("gnus-prompt-before-saving" variable
               (:user-visible-flag t
                :default-value (quote always))
                nil [19622 20261])
            ("gnus-article-show-cursor" variable nil nil [20263 20436])
            ("gnus-saved-headers" variable (:default-value gnus-visible-headers) nil [20438 20971])
            ("gnus-default-article-saver" variable (:default-value (quote gnus-summary-save-in-rmail)) nil [21043 23126])
            ("gnus-article-save-coding-system" variable (:default-value (or (and (mm-coding-system-p (quote utf-8)) (quote utf-8)) (and (mm-coding-system-p (quote iso-2022-7bit)) (quote iso-2022-7bit)) (and (mm-coding-system-p (quote emacs-mule)) (quote emacs-mule)) (and (mm-coding-system-p (quote escape-quoted)) (quote escape-quoted)))) nil [23128 24642])
            ("gnus-rmail-save-name" variable (:default-value (quote gnus-plain-save-name)) nil [24644 24890])
            ("gnus-mail-save-name" variable (:default-value (quote gnus-plain-save-name)) nil [24892 25141])
            ("gnus-folder-save-name" variable (:default-value (quote gnus-folder-save-name)) nil [25143 25390])
            ("gnus-file-save-name" variable (:default-value (quote gnus-numeric-save-name)) nil [25392 25641])
            ("gnus-split-methods" variable
               (:user-visible-flag t
                :default-value (quote ((gnus-article-archive-name) (gnus-article-nndoc-name))))
                nil [25643 26824])
            ("gnus-page-delimiter" variable
               (:user-visible-flag t
                :default-value "^")
                nil [26826 27058])
            ("gnus-article-mode-line-format" variable
               (:user-visible-flag t
                :default-value "Gnus: %g %S%m")
                nil [27060 27426])
            ("gnus-article-mode-hook" variable (:user-visible-flag t) nil [27428 27546])
            ("when" code nil nil [27548 27894])
            ("gnus-article-menu-hook" variable (:user-visible-flag t) nil [27896 28038])
            ("gnus-article-prepare-hook" variable (:user-visible-flag t) nil [28040 28203])
            ("gnus-copy-article-ignored-headers" variable nil nil [28205 28436])
            ("make-obsolete-variable" code nil nil [28438 28522])
            ("gnus-button" variable
               (:default-value (quote ((t (:weight bold))))
                :type "face")
                nil [28524 28663])
            ("gnus-article-button-face" variable (:default-value (quote gnus-button)) nil [28665 28922])
            ("gnus-article-mouse-face" variable (:default-value (quote highlight)) nil [28924 29154])
            ("gnus-signature-face" variable (:default-value (quote gnus-signature)) nil [29156 29417])
            ("gnus-signature" variable
               (:default-value (quote ((t (:italic t))))
                :type "face")
                nil [29419 29601])
            ("put" code nil nil [29634 29688])
            ("put" code nil nil [29689 29737])
            ("gnus-header-from" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "PaleGreen1")) (((class color) (background light)) (:foreground "red3")) (t (:italic t))))
                :type "face")
                nil [29739 30049])
            ("put" code nil nil [30082 30140])
            ("put" code nil nil [30141 30191])
            ("gnus-header-subject" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SeaGreen1")) (((class color) (background light)) (:foreground "red4")) (t (:bold t :italic t))))
                :type "face")
                nil [30193 30516])
            ("put" code nil nil [30549 30613])
            ("put" code nil nil [30614 30667])
            ("gnus-header-newsgroups" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "yellow" :italic t)) (((class color) (background light)) (:foreground "MidnightBlue" :italic t)) (t (:italic t))))
                :type "face")
                nil [30669 31085])
            ("put" code nil nil [31118 31188])
            ("put" code nil nil [31189 31245])
            ("gnus-header-name" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SpringGreen2")) (((class color) (background light)) (:foreground "maroon")) (t (:bold t))))
                :type "face")
                nil [31247 31559])
            ("put" code nil nil [31592 31650])
            ("put" code nil nil [31651 31701])
            ("gnus-header-content" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "SpringGreen1" :italic t)) (((class color) (background light)) (:foreground "indianred4" :italic t)) (t (:italic t))))
                :type "face")
                nil [31703 32045])
            ("put" code nil nil [32078 32142])
            ("put" code nil nil [32143 32196])
            ("gnus-header-face-alist" variable
               (:user-visible-flag t
                :default-value (quote (("From" nil gnus-header-from) ("Subject" nil gnus-header-subject) ("Newsgroups:.*," nil gnus-header-newsgroups) ("" gnus-header-name gnus-header-content))))
                nil [32198 33174])
            ("gnus-face-properties-alist" variable (:default-value (if (featurep (quote xemacs)) (quote ((xface :face gnus-x-face))) (quote ((pbm :face gnus-x-face) (png))))) nil [33176 34149])
            ("gnus-article-decode-hook" variable
               (:user-visible-flag t
                :default-value (quote (article-decode-charset article-decode-encoded-words article-decode-group-name article-decode-idna-rhs)))
                nil [34151 34391])
            ("gnus-display-mime-function" variable (:default-value (quote gnus-display-mime)) nil [34393 34535])
            ("gnus-decode-header-function" variable (:default-value (quote mail-decode-encoded-word-region)) nil [34537 34643])
            ("gnus-decode-address-function" variable (:default-value (quote mail-decode-encoded-address-region)) nil [34645 34757])
            ("gnus-article-dumbquotes-map" variable (:default-value (quote ((128 "EUR") (130 ",") (131 "f") (132 ",,") (133 "...") (139 "<") (140 "OE") (145 "`") (146 "'") (147 "``") (148 "\"") (149 "*") (150 "-") (151 "--") (152 "~") (153 "(TM)") (155 ">") (156 "oe") (180 "'")))) nil [34759 35153])
            ("gnus-ignored-mime-types" variable nil nil [35155 35320])
            ("gnus-unbuttonized-mime-types" variable (:default-value (quote (".*/.*"))) nil [35322 35668])
            ("gnus-buttonized-mime-types" variable nil nil [35670 36266])
            ("gnus-inhibit-mime-unbuttonizing" variable nil nil [36268 36588])
            ("gnus-body-boundary-delimiter" variable (:default-value "_") nil [36590 36900])
            ("gnus-picon-databases" variable (:default-value (quote ("/usr/lib/picon" "/usr/local/faces" "/usr/share/picons"))) nil [36902 37367])
            ("gnus-picons-installed-p" function nil nil [37369 37600])
            ("gnus-article-mime-part-function" variable nil nil [37602 37900])
            ("gnus-mime-multipart-functions" variable nil nil [37902 38123])
            ("gnus-article-date-headers" variable (:default-value (quote (combined-lapsed))) nil [38125 39164])
            ("gnus-article-update-date-headers" variable nil nil [39166 39438])
            ("gnus-article-mime-match-handle-function" variable (:default-value (quote undisplayed-alternative)) nil [39440 40127])
            ("gnus-mime-action-alist" variable (:default-value (quote (("save to file" . gnus-mime-save-part) ("save and strip" . gnus-mime-save-part-and-strip) ("replace with file" . gnus-mime-replace-part) ("delete part" . gnus-mime-delete-part) ("display as text" . gnus-mime-inline-part) ("view the part" . gnus-mime-view-part) ("pipe to command" . gnus-mime-pipe-part) ("toggle display" . gnus-article-press-button) ("toggle display" . gnus-article-view-part-as-charset) ("view as type" . gnus-mime-view-part-as-type) ("view internally" . gnus-mime-view-part-internally) ("view externally" . gnus-mime-view-part-externally)))) nil [40129 40921])
            ("gnus-auto-select-part" variable (:default-value 1) nil [40923 41374])
            ("gnus-part-display-hook" variable nil nil [41413 41504])
            ("gnus-article-treat-custom" variable (:default-value (quote (choice (const :tag "Off" nil) (const :tag "On" t) (const :tag "Header" head) (const :tag "First" first) (const :tag "Last" last) (integer :tag "Less") (repeat :tag "Groups" regexp) (sexp :tag "Predicate")))) nil [41506 41778])
            ("gnus-article-treat-head-custom" variable (:default-value (quote (choice (const :tag "Off" nil) (const :tag "Header" head)))) nil [41780 41885])
            ("gnus-article-treat-types" variable (:default-value (quote ("text/plain" "text/x-verbatim" "text/x-patch" "text/html"))) nil [41887 42027])
            ("gnus-inhibit-treatment" variable nil nil [42029 42098])
            ("gnus-treat-highlight-signature" variable (:default-value (quote (or t (typep "text/x-vcard")))) nil [42100 42441])
            ("put" code nil nil [42442 42492])
            ("gnus-treat-buttonize" variable (:default-value (quote (and 100000 (typep "text/plain")))) nil [42494 42817])
            ("put" code nil nil [42818 42858])
            ("gnus-treat-buttonize-head" variable (:default-value (quote head)) nil [42860 43176])
            ("put" code nil nil [43177 43222])
            ("gnus-treat-date" variable (:default-value (quote head)) nil [43224 43592])
            ("gnus-treat-emphasize" variable (:default-value 50000) nil [43594 43891])
            ("put" code nil nil [43892 43932])
            ("gnus-treat-strip-cr" variable nil nil [43934 44255])
            ("gnus-treat-unsplit-urls" variable nil nil [44257 44591])
            ("gnus-treat-leading-whitespace" variable nil nil [44593 44937])
            ("gnus-treat-hide-headers" variable (:default-value (quote head)) nil [44939 45242])
            ("gnus-treat-hide-boring-headers" variable nil nil [45244 45559])
            ("gnus-treat-hide-signature" variable nil nil [45561 45865])
            ("gnus-treat-fill-article" variable nil nil [45867 46167])
            ("gnus-treat-hide-citation" variable nil nil [46169 46553])
            ("gnus-treat-hide-citation-maybe" variable nil nil [46555 46990])
            ("gnus-treat-strip-list-identifiers" variable (:default-value (quote head)) nil [46992 47357])
            ("gnus-define-group-parameter" code nil nil [47359 47939])
            ("make-obsolete-variable" code nil nil [47941 48019])
            ("gnus-treat-strip-pem" variable nil nil [48021 48322])
            ("gnus-treat-strip-banner" variable (:default-value t) nil [48324 48705])
            ("gnus-treat-highlight-headers" variable (:default-value (quote head)) nil [48707 49024])
            ("put" code nil nil [49025 49073])
            ("gnus-treat-highlight-citation" variable (:default-value t) nil [49075 49383])
            ("put" code nil nil [49384 49433])
            ("gnus-treat-strip-headers-in-body" variable (:default-value t) nil [49435 49809])
            ("gnus-treat-strip-trailing-blank-lines" variable nil nil [49811 50233])
            ("gnus-treat-strip-leading-blank-lines" variable nil nil [50235 50623])
            ("gnus-treat-strip-multiple-blank-lines" variable nil nil [50625 50949])
            ("gnus-treat-unfold-headers" variable (:default-value (quote head)) nil [50951 51283])
            ("gnus-article-unfold-long-headers" variable nil nil [51285 51708])
            ("gnus-treat-fold-headers" variable nil nil [51710 52024])
            ("gnus-treat-fold-newsgroups" variable (:default-value (quote head)) nil [52026 52376])
            ("gnus-treat-overstrike" variable (:default-value t) nil [52378 52687])
            ("put" code nil nil [52688 52729])
            ("gnus-treat-ansi-sequences" variable (:default-value (if (locate-library "ansi-color") t)) nil [52731 53082])
            ("make-obsolete-variable" code nil nil [53084 53177])
            ("gnus-treat-display-x-face" variable (:default-value (and (not noninteractive) (gnus-image-type-available-p (quote xbm)) (if (featurep (quote xemacs)) (featurep (quote xface)) (condition-case nil (and (string-match "^0x" (shell-command-to-string "uncompface")) (executable-find "icontopbm")) (error nil))) (quote head))) nil [53179 54517])
            ("put" code nil nil [54518 54563])
            ("gnus-treat-display-face" variable (:default-value (and (not noninteractive) (gnus-image-type-available-p (quote png)) (quote head))) nil [54565 55051])
            ("put" code nil nil [55052 55095])
            ("gnus-treat-display-smileys" variable (:default-value (gnus-image-type-available-p (quote xpm))) nil [55097 55531])
            ("put" code nil nil [55532 55578])
            ("gnus-treat-from-picon" variable (:default-value (if (and (gnus-image-type-available-p (quote xpm)) (gnus-picons-installed-p)) (quote head) nil)) nil [55580 56110])
            ("put" code nil nil [56111 56152])
            ("gnus-treat-mail-picon" variable (:default-value (if (and (gnus-image-type-available-p (quote xpm)) (gnus-picons-installed-p)) (quote head) nil)) nil [56154 56686])
            ("put" code nil nil [56687 56728])
            ("gnus-treat-newsgroups-picon" variable (:default-value (if (and (gnus-image-type-available-p (quote xpm)) (gnus-picons-installed-p)) (quote head) nil)) nil [56730 57289])
            ("put" code nil nil [57290 57337])
            ("gnus-treat-from-gravatar" variable nil nil [57339 57794])
            ("put" code nil nil [57795 57839])
            ("gnus-treat-mail-gravatar" variable nil nil [57841 58298])
            ("put" code nil nil [58299 58343])
            ("gnus-treat-body-boundary" variable (:default-value (if (or gnus-treat-newsgroups-picon gnus-treat-mail-picon gnus-treat-from-picon gnus-treat-from-gravatar gnus-treat-mail-gravatar) (quote head) nil)) nil [58345 58908])
            ("gnus-treat-capitalize-sentences" variable nil nil [58910 59254])
            ("gnus-treat-wash-html" variable nil nil [59256 59569])
            ("gnus-treat-fill-long-lines" variable (:default-value (quote (typep "text/plain"))) nil [59571 59909])
            ("gnus-treat-x-pgp-sig" variable nil nil [59911 60300])
            ("gnus-article-encrypt-protocol-alist" variable (:default-value (quote (("PGP" . mml2015-self-encrypt)))) nil [60302 60382])
            ("gnus-article-encrypt-protocol" variable (:default-value "PGP") nil [60473 60673])
            ("idna-program" variable nil nil [60675 60696])
            ("gnus-use-idna" variable (:default-value (and (mm-coding-system-p (quote utf-8)) (condition-case nil (require (quote idna)) (file-error) (invalid-operation)) idna-program (executable-find idna-program))) nil [60698 61116])
            ("gnus-article-over-scroll" variable nil nil [61118 61297])
            ("gnus-inhibit-images" variable nil nil [61299 61467])
            ("gnus-blocked-images" variable (:default-value (quote gnus-block-private-groups)) nil [61469 61914])
            ("gnus-english-month-names" variable (:default-value (quote ("January" "February" "March" "April" "May" "June" "July" "August" "September" "October" "November" "December"))) nil [61940 62092])
            ("article-goto-body-goes-to-point-min-p" variable nil nil [62094 62144])
            ("gnus-article-wash-types" variable nil nil [62145 62181])
            ("gnus-article-emphasis-alist" variable nil nil [62182 62222])
            ("gnus-article-image-alist" variable nil nil [62223 62260])
            ("gnus-article-mime-handle-alist-1" variable nil nil [62262 62307])
            ("gnus-treatment-function-alist" variable (:default-value (quote ((gnus-treat-strip-cr gnus-article-remove-cr) (gnus-treat-x-pgp-sig gnus-article-verify-x-pgp-sig) (gnus-treat-strip-banner gnus-article-strip-banner) (gnus-treat-strip-headers-in-body gnus-article-strip-headers-in-body) (gnus-treat-highlight-signature gnus-article-highlight-signature) (gnus-treat-buttonize gnus-article-add-buttons) (gnus-treat-fill-article gnus-article-fill-cited-article) (gnus-treat-fill-long-lines gnus-article-fill-cited-long-lines) (gnus-treat-unsplit-urls gnus-article-unsplit-urls) (gnus-treat-display-x-face gnus-article-display-x-face) (gnus-treat-display-face gnus-article-display-face) (gnus-treat-hide-headers gnus-article-maybe-hide-headers) (gnus-treat-hide-boring-headers gnus-article-hide-boring-headers) (gnus-treat-hide-signature gnus-article-hide-signature) (gnus-treat-strip-list-identifiers gnus-article-hide-list-identifiers) (gnus-treat-leading-whitespace gnus-article-remove-leading-whitespace) (gnus-treat-from-picon gnus-treat-from-picon) (gnus-treat-mail-picon gnus-treat-mail-picon) (gnus-treat-newsgroups-picon gnus-treat-newsgroups-picon) (gnus-treat-strip-pem gnus-article-hide-pem) (gnus-treat-date gnus-article-treat-date) (gnus-treat-from-gravatar gnus-treat-from-gravatar) (gnus-treat-mail-gravatar gnus-treat-mail-gravatar) (gnus-treat-highlight-headers gnus-article-highlight-headers) (gnus-treat-highlight-signature gnus-article-highlight-signature) (gnus-treat-strip-trailing-blank-lines gnus-article-remove-trailing-blank-lines) (gnus-treat-strip-leading-blank-lines gnus-article-strip-leading-blank-lines) (gnus-treat-strip-multiple-blank-lines gnus-article-strip-multiple-blank-lines) (gnus-treat-overstrike gnus-article-treat-overstrike) (gnus-treat-ansi-sequences gnus-article-treat-ansi-sequences) (gnus-treat-unfold-headers gnus-article-treat-unfold-headers) (gnus-treat-fold-newsgroups gnus-article-treat-fold-newsgroups) (gnus-treat-fold-headers gnus-article-treat-fold-headers) (gnus-treat-buttonize-head gnus-article-add-buttons-to-head) (gnus-treat-display-smileys gnus-treat-smiley) (gnus-treat-capitalize-sentences gnus-article-capitalize-sentences) (gnus-treat-wash-html gnus-article-wash-html) (gnus-treat-emphasize gnus-article-emphasize) (gnus-treat-hide-citation gnus-article-hide-citation) (gnus-treat-hide-citation-maybe gnus-article-hide-citation-maybe) (gnus-treat-highlight-citation gnus-article-highlight-citation) (gnus-treat-body-boundary gnus-article-treat-body-boundary)))) nil [62308 64988])
            ("gnus-article-mime-handle-alist" variable nil nil [64990 65033])
            ("article-lapsed-timer" variable nil nil [65034 65067])
            ("gnus-article-current-summary" variable nil nil [65068 65109])
            ("gnus-article-mode-syntax-table" variable (:default-value (let ((table (copy-syntax-table text-mode-syntax-table))) (modify-syntax-entry 62 ")<" table) (modify-syntax-entry 60 "(>" table) (modify-syntax-entry 39 " " table) (modify-syntax-entry 96 " " table) table)) nil [65111 65619])
            ("gnus-save-article-buffer" variable nil nil [65621 65658])
            ("gnus-number-of-articles-to-be-saved" variable nil nil [65660 65708])
            ("gnus-inhibit-hiding" variable nil nil [65710 65742])
            ("gnus-article-edit-mode" variable nil nil [65744 65779])
            ("gnus-with-article-headers" function (:arguments ("forms")) nil [65830 66087])
            ("put" code nil nil [66089 66145])
            ("put" code nil nil [66146 66204])
            ("gnus-with-article-buffer" function (:arguments ("forms")) nil [66206 66415])
            ("put" code nil nil [66417 66472])
            ("put" code nil nil [66473 66530])
            ("gnus-article-goto-header" function (:arguments ("header")) nil [66532 66680])
            ("gnus-article-hide-text" function (:arguments ("b" "e" "props")) nil [66682 66830])
            ("gnus-article-unhide-text" function (:arguments ("b" "e")) nil [66832 66990])
            ("gnus-article-hide-text-type" function (:arguments ("b" "e" "type")) nil [66992 67195])
            ("gnus-article-unhide-text-type" function (:arguments ("b" "e" "type")) nil [67197 67407])
            ("gnus-article-delete-text-of-type" function (:arguments ("type")) nil [67409 68201])
            ("gnus-article-delete-invisible-text" function nil nil [68203 68515])
            ("gnus-article-header-rank" function nil nil [68517 68794])
            ("article-hide-headers" function
               (:user-visible-flag t
                :arguments ("_arg" "_delete"))
                nil [68796 71125])
            ("article-hide-boring-headers" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [71127 75913])
            ("gnus-article-hide-header" function (:arguments ("header")) nil [75915 76261])
            ("gnus-article-normalized-header-length" variable (:default-value 40) nil [76263 76346])
            ("article-normalize-headers" function (:user-visible-flag t) nil [76348 77070])
            ("article-treat-dumbquotes" function (:user-visible-flag t) nil [77072 77630])
            ("org-entities" variable nil nil [77632 77653])
            ("article-treat-non-ascii" function (:user-visible-flag t) nil [77655 78608])
            ("article-translate-strings" function (:arguments ("map")) nil [78610 79190])
            ("article-treat-overstrike" function (:user-visible-flag t) nil [79192 80140])
            ("article-treat-ansi-sequences" function (:user-visible-flag t) nil [80142 80400])
            ("gnus-article-treat-unfold-headers" function (:user-visible-flag t) nil [80402 81299])
            ("gnus-article-treat-fold-headers" function (:user-visible-flag t) nil [81301 81547])
            ("gnus-treat-smiley" function (:user-visible-flag t) nil [81549 81975])
            ("gnus-article-remove-images" function (:user-visible-flag t) nil [81977 82223])
            ("w3m-toggle-inline-images" function (:prototype-flag t) nil [82225 82267])
            ("gnus-article-show-images" function (:user-visible-flag t) nil [82269 82807])
            ("gnus-article-treat-fold-newsgroups" function (:user-visible-flag t) nil [82809 83251])
            ("gnus-article-truncate-lines" variable (:default-value (default-value (quote truncate-lines))) nil [83253 83626])
            ("gnus-article-toggle-truncate-lines" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [83628 84456])
            ("gnus-article-treat-body-boundary" function (:user-visible-flag t) nil [84458 85194])
            ("article-fill-long-lines" function (:user-visible-flag t) nil [85196 85856])
            ("article-capitalize-sentences" function (:user-visible-flag t) nil [85858 86140])
            ("article-remove-cr" function (:user-visible-flag t) nil [86142 86505])
            ("article-remove-trailing-blank-lines" function (:user-visible-flag t) nil [86507 86941])
            ("gnus-face-properties-alist" variable nil nil [86943 86978])
            ("article-display-face" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [86980 88790])
            ("article-display-x-face" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [88792 91264])
            ("article-decode-mime-words" function (:user-visible-flag t) nil [91266 91668])
            ("article-decode-charset" function
               (:user-visible-flag t
                :arguments ("prompt"))
                nil [91670 93253])
            ("article-decode-encoded-words" function nil nil [93255 94197])
            ("article-decode-group-name" function nil nil [94199 95234])
            ("idna-to-unicode" function (:prototype-flag t) nil [95236 95270])
            ("article-decode-idna-rhs" function nil nil [95272 96094])
            ("article-de-quoted-unreadable" function
               (:user-visible-flag t
                :arguments ("force" "read-charset"))
                nil [96096 97272])
            ("article-de-base64-unreadable" function
               (:user-visible-flag t
                :arguments ("force" "read-charset"))
                nil [97274 98526])
            ("rfc1843" include nil nil [98549 98567])
            ("article-decode-HZ" function (:user-visible-flag t) nil [98570 98778])
            ("article-unsplit-urls" function (:user-visible-flag t) nil [98780 99177])
            ("article-wash-html" function (:user-visible-flag t) nil [99179 99581])
            ("gnus-article-browse-html-temp-list" variable nil nil [99583 99722])
            ("gnus-article-browse-delete-temp" variable (:default-value (quote ask)) nil [99724 100253])
            ("gnus-article-browse-delete-temp-files" function (:arguments ("how")) nil [100330 101559])
            ("gnus-article-browse-html-save-cid-content" function (:arguments ("cid" "handles" "directory")) nil [101561 102648])
            ("gnus-article-browse-html-parts" function (:arguments ("list" "header")) nil [102650 110702])
            ("gnus-article-browse-html-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [110704 112775])
            ("article-hide-list-identifiers" function (:user-visible-flag t) nil [112777 113521])
            ("article-hide-pem" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [113523 114431])
            ("article-strip-banner" function (:user-visible-flag t) nil [114433 115405])
            ("article-really-strip-banner" function (:arguments ("banner")) nil [115407 116132])
            ("article-babel" function (:user-visible-flag t) nil [116134 116545])
            ("article-hide-signature" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [116547 117053])
            ("article-strip-headers-in-body" function (:user-visible-flag t) nil [117055 117290])
            ("article-strip-leading-blank-lines" function (:user-visible-flag t) nil [117292 117613])
            ("article-narrow-to-head" function nil nil [117615 118047])
            ("article-goto-body" function nil nil [118049 118371])
            ("article-strip-multiple-blank-lines" function (:user-visible-flag t) nil [118373 119084])
            ("article-strip-leading-space" function (:user-visible-flag t) nil [119086 119402])
            ("article-strip-trailing-space" function (:user-visible-flag t) nil [119404 119715])
            ("article-strip-blank-lines" function (:user-visible-flag t) nil [119717 119940])
            ("article-strip-all-blank-lines" function (:user-visible-flag t) nil [119942 120214])
            ("gnus-article-narrow-to-signature" function nil nil [120216 121125])
            ("gnus-article-search-signature" function nil nil [121127 121616])
            ("gnus-article-hidden-arg" function nil nil [121618 121803])
            ("gnus-article-check-hidden-text" function (:arguments ("type" "arg")) nil [121805 122295])
            ("gnus-article-hidden-text-p" function (:arguments ("type")) nil [122297 122715])
            ("gnus-article-show-hidden-text" function (:arguments ("type" "_dummy")) nil [122717 123117])
            ("article-time-units" variable
               (:constant-flag t
                :default-value (\` ((year \, (* 365.25 24 60 60)) (week \, (* 7 24 60 60)) (day \, (* 24 60 60)) (hour \, (* 60 60)) (minute . 60) (second . 1))))
                nil [123119 123337])
            ("gnus-article-forward-header" function nil nil [123339 123652])
            ("article-treat-date" function nil nil [123654 123870])
            ("article-date-ut" function
               (:user-visible-flag t
                :arguments ("type" "_highlight" "date-position"))
                nil [123872 126114])
            ("article-transform-date" function (:arguments ("date" "type" "bface" "eface")) nil [126116 127021])
            ("article-make-date-line" function (:arguments ("date" "type")) nil [127023 129889])
            ("article-lapsed-string" function (:arguments ("time" "max-segments")) nil [129891 131357])
            ("article-date-local" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [131359 131529])
            ("article-date-english" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [131531 131719])
            ("article-date-original" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [131721 132027])
            ("article-date-lapsed" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [132029 132212])
            ("article-date-combined-lapsed" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [132214 132415])
            ("article-update-date-lapsed" function nil nil [132417 133811])
            ("gnus-start-date-timer" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [133813 134153])
            ("gnus-stop-date-timer" function (:user-visible-flag t) nil [134155 134342])
            ("article-date-user" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [134344 134584])
            ("article-date-iso8601" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [134586 134749])
            ("gnus-article-save-original-date" function (:arguments ("forms")) nil [134751 135497])
            ("article-remove-leading-whitespace" function (:user-visible-flag t) nil [135720 136071])
            ("article-emphasize" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [136073 137304])
            ("gnus-article-setup-highlight-words" function (:arguments ("highlight-words")) nil [137306 138086])
            ("gnus-summary-article-menu" variable nil nil [138088 138122])
            ("gnus-summary-post-menu" variable nil nil [138123 138154])
            ("gnus-article-save" function (:arguments ("save-buffer" "file" "num")) nil [138179 139522])
            ("gnus-read-save-file-name" function (:arguments ("prompt" "filename" "function" "group" "headers" "variable" "dir-var")) nil [139524 142490])
            ("gnus-article-archive-name" function (:arguments ("_group")) nil [142492 142796])
            ("gnus-article-nndoc-name" function (:arguments ("group")) nil [142798 143025])
            ("gnus-summary-save-in-rmail" function (:arguments ("filename")) nil [143027 143704])
            ("gnus-summary-save-in-mail" function (:arguments ("filename")) nil [143706 144384])
            ("put" code nil nil [144386 144428])
            ("put" code nil nil [144429 144490])
            ("gnus-summary-save-in-file" function (:arguments ("filename" "overwrite")) nil [144491 145100])
            ("put" code nil nil [145102 145145])
            ("put" code nil nil [145146 145216])
            ("put" code nil nil [145217 145279])
            ("gnus-summary-write-to-file" function (:arguments ("filename")) nil [145280 145741])
            ("put" code nil nil [145743 145790])
            ("gnus-summary-save-body-in-file" function (:arguments ("filename" "overwrite")) nil [145791 146489])
            ("put" code nil nil [146491 146539])
            ("put" code nil nil [146540 146625])
            ("gnus-summary-write-body-to-file" function (:arguments ("filename")) nil [146626 147107])
            ("put" code nil nil [147109 147151])
            ("put" code nil nil [147152 147213])
            ("gnus-summary-save-in-pipe" function (:arguments ("command" "raw")) nil [147214 149382])
            ("gnus-summary-pipe-to-muttprint" function (:arguments ("command")) nil [149384 149824])
            ("gnus-capitalize-newsgroup" function (:arguments ("newsgroup")) nil [149863 150068])
            ("gnus-Numeric-save-name" function (:arguments ("newsgroup" "headers" "last-file")) nil [150070 150833])
            ("gnus-numeric-save-name" function (:arguments ("newsgroup" "headers" "last-file")) nil [150835 151571])
            ("gnus-plain-save-name" function (:arguments ("newsgroup" "_headers" "last-file")) nil [151573 152090])
            ("gnus-sender-save-name" function (:arguments ("_newsgroup" "headers" "_last-file")) nil [152092 152396])
            ("article-verify-x-pgp-sig" function (:user-visible-flag t) nil [152398 155001])
            ("canlock-verify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [155003 155045])
            ("article-verify-cancel-lock" function (:user-visible-flag t) nil [155062 155255])
            ("mapc" code nil nil [155277 157178])
            ("put" code nil nil [157213 157258])
            ("set-keymap-parent" code nil nil [157260 157315])
            ("gnus-define-keys" code nil nil [157317 158215])
            ("substitute-key-definition" code nil nil [158217 158310])
            ("gnus-article-send-map" variable nil nil [158312 158342])
            ("gnus-define-keys" code nil nil [158344 158456])
            ("if" code nil nil [158457 158654])
            ("gnus-article-make-menu-bar" function nil nil [158656 160319])
            ("bookmark-make-record-function" variable nil nil [160321 160359])
            ("shr-put-image-function" variable nil nil [160360 160391])
            ("define-derived-mode" code nil nil [160393 162575])
            ("gnus-article-setup-buffer" function nil nil [162577 165039])
            ("gnus-article-stop-animations" function nil nil [165041 165240])
            ("gnus-stop-downloads" function nil nil [165242 165344])
            ("gnus-article-set-window-start" function (:arguments ("line")) nil [165450 165873])
            ("gnus-tmp-internal-hook" variable nil nil [165875 165906])
            ("gnus-article-prepare" function (:arguments ("article" "all-headers" "_header")) nil [165908 170256])
            ("gnus-mime-display-attachment-buttons-in-header" variable nil nil [170258 170313])
            ("gnus-article-prepare-display" function nil nil [170330 171068])
            ("define-derived-mode" code nil nil [171108 171845])
            ("gnus-sticky-article" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [171847 173339])
            ("gnus-kill-sticky-article-buffer" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [173341 173721])
            ("gnus-kill-sticky-article-buffers" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [173723 174135])
            ("gnus-mime-button-line-format" variable (:default-value "%{%([%p. %d%T]%)%}%e
") nil [174178 174605])
            ("gnus-tmp-type" variable nil nil [174607 174629])
            ("gnus-tmp-type-long" variable nil nil [174630 174657])
            ("gnus-tmp-name" variable nil nil [174658 174680])
            ("gnus-tmp-description" variable nil nil [174681 174710])
            ("gnus-tmp-id" variable nil nil [174711 174731])
            ("gnus-tmp-length" variable nil nil [174732 174756])
            ("gnus-tmp-dots" variable nil nil [174757 174779])
            ("gnus-tmp-info" variable nil nil [174780 174802])
            ("gnus-tmp-pressed-details" variable nil nil [174803 174836])
            ("gnus-mime-button-line-format-alist" variable (:default-value (quote ((116 gnus-tmp-type 115) (84 gnus-tmp-type-long 115) (110 gnus-tmp-name 115) (100 gnus-tmp-description 115) (112 gnus-tmp-id 115) (108 gnus-tmp-length 100) (101 gnus-tmp-dots 115)))) nil [174838 175076])
            ("gnus-mime-button-commands" variable (:default-value (quote ((gnus-article-press-button "" "Toggle Display") (gnus-mime-view-part "v" "View Interactively...") (gnus-mime-view-part-as-type "t" "View As Type...") (gnus-mime-view-part-as-charset "C" "View As charset...") (gnus-mime-save-part "o" "Save...") (gnus-mime-save-part-and-strip "" "Save and Strip") (gnus-mime-replace-part "r" "Replace part") (gnus-mime-delete-part "d" "Delete part") (gnus-mime-copy-part "c" "View As Text, In Other Buffer") (gnus-mime-inline-part "i" "View As Text, In This Buffer") (gnus-mime-view-part-internally "E" "View Internally") (gnus-mime-view-part-externally "e" "View Externally") (gnus-mime-print-part "p" "Print") (gnus-mime-pipe-part "|" "Pipe To Command...") (gnus-mime-action-on-part "." "Take action on the part...")))) nil [175078 175942])
            ("gnus-article-mime-part-status" function nil nil [175944 176172])
            ("gnus-mime-button-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map gnus-mouse-2 (quote gnus-article-push-button)) (define-key map gnus-down-mouse-3 (quote gnus-mime-button-menu)) (dolist (c gnus-mime-button-commands) (define-key map (cadr c) (car c))) map)) nil [176174 176453])
            ("easy-menu-define" code nil nil [176455 176655])
            ("gnus-url-button-commands" variable (:default-value (quote ((gnus-article-copy-string "u" "Copy URL to kill ring")))) nil [176657 176750])
            ("gnus-url-button-map" variable (:default-value (let ((map (make-sparse-keymap))) (dolist (c gnus-url-button-commands) (define-key map (cadr c) (car c))) map)) nil [176752 176907])
            ("easy-menu-define" code nil nil [176909 177106])
            ("gnus-bind-mm-vars" function (:arguments ("body")) nil [177108 178099])
            ("gnus-mime-button-menu" function
               (:user-visible-flag t
                :arguments ("event" "prefix"))
                nil [178101 178442])
            ("gnus-mime-view-all-parts" function
               (:user-visible-flag t
                :arguments ("handles"))
                nil [178444 179057])
            ("gnus-article-jump-to-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [179059 179959])
            ("gnus-mime-buttonized-part-id" variable nil nil [179961 180120])
            ("gnus-article-edit-part" function (:arguments ("handles" "current-id")) nil [180143 182380])
            ("gnus-mime-replace-part" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [182383 182738])
            ("gnus-mime-save-part-and-strip" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [182740 184190])
            ("gnus-mime-delete-part" function (:user-visible-flag t) nil [184316 186018])
            ("gnus-mime-save-part" function (:user-visible-flag t) nil [186020 186230])
            ("gnus-mime-pipe-part" function
               (:user-visible-flag t
                :arguments ("cmd"))
                nil [186232 186496])
            ("gnus-mime-view-part" function (:user-visible-flag t) nil [186498 186887])
            ("gnus-mime-view-part-as-type-internal" function nil nil [186889 187474])
            ("gnus-mime-view-part-as-type" function
               (:user-visible-flag t
                :arguments ("mime-type" "pred"))
                nil [187476 188798])
            ("gnus-mime-copy-part" function
               (:user-visible-flag t
                :arguments ("handle" "arg"))
                nil [188800 190894])
            ("gnus-mime-print-part" function
               (:user-visible-flag t
                :arguments ("handle" "filename"))
                nil [190896 191743])
            ("gnus-mime-inline-part" function
               (:user-visible-flag t
                :arguments ("handle" "arg"))
                nil [191745 194582])
            ("gnus-mime-set-charset-parameters" function (:arguments ("handle" "charset")) nil [194584 195308])
            ("gnus-mime-view-part-as-charset" function
               (:user-visible-flag t
                :arguments ("handle" "arg"))
                nil [195310 196754])
            ("gnus-mime-view-part-externally" function
               (:user-visible-flag t
                :arguments ("handle"))
                nil [196756 197482])
            ("gnus-mime-view-part-internally" function
               (:user-visible-flag t
                :arguments ("handle"))
                nil [197484 198227])
            ("gnus-mime-action-on-part" function
               (:user-visible-flag t
                :arguments ("action"))
                nil [198229 198573])
            ("gnus-article-part-wrapper" function (:arguments ("n" "function" "no-handle" "interactive")) nil [198575 201712])
            ("gnus-article-pipe-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [201714 201867])
            ("gnus-article-save-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [201869 202022])
            ("gnus-article-interactively-view-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202024 202219])
            ("gnus-article-copy-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202221 202381])
            ("gnus-article-view-part-as-charset" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202383 202587])
            ("gnus-article-view-part-externally" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202589 202782])
            ("gnus-article-inline-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202784 202950])
            ("gnus-article-save-part-and-strip" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [202952 203167])
            ("gnus-article-replace-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [203169 203360])
            ("gnus-article-delete-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [203362 203574])
            ("gnus-article-view-part-as-type" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [203576 203783])
            ("gnus-article-mime-match-handle-first" function (:arguments ("condition")) nil [203785 204435])
            ("gnus-article-view-part" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [204437 205220])
            ("gnus-article-mime-total-parts" function nil nil [205222 205381])
            ("gnus-mm-display-part" function (:arguments ("handle")) nil [205383 208643])
            ("gnus-article-goto-part" function (:arguments ("n")) nil [208645 209903])
            ("gnus-insert-mime-button" function (:arguments ("handle" "id" "displayed")) nil [209905 211863])
            ("gnus-widget-press-button" function (:arguments ("elems" "_el")) nil [211865 211978])
            ("gnus-displaying-mime" variable nil nil [211980 212013])
            ("gnus-display-mime" function (:arguments ("ihandles")) nil [212015 213947])
            ("gnus-mime-display-multipart-as-mixed" variable nil nil [213949 214240])
            ("gnus-mime-display-multipart-alternative-as-mixed" variable nil nil [214242 214438])
            ("gnus-mime-display-multipart-related-as-mixed" variable nil nil [214440 214817])
            ("gnus-mime-display-attachment-buttons-in-header" variable (:default-value t) nil [214819 215263])
            ("gnus-mime-display-part" function (:arguments ("handle")) nil [215265 216572])
            ("gnus-mime-part-function" function (:arguments ("handles")) nil [216574 216754])
            ("gnus-mime-display-mixed" function (:arguments ("handles")) nil [216756 216840])
            ("gnus-mime-display-single" function (:arguments ("handle")) nil [216842 219913])
            ("gnus-unbuttonized-mime-type-p" function (:arguments ("type")) nil [219915 220367])
            ("gnus-article-insert-newline" function nil nil [220369 220545])
            ("gnus-mime-display-alternative" function (:arguments ("handles" "preferred" "ibegend" "id")) nil [220547 223740])
            ("gnus-article-wash-status-strings" variable
               (:constant-flag t
                :default-value (let ((alist (quote ((cite "c" "Possible hidden citation text" " " "All citation text visible") (headers "h" "Hidden headers" " " "All headers visible.") (pgp "p" "Encrypted or signed message status hidden" " " "No hidden encryption nor digital signature status") (signature "s" "Signature has been hidden" " " "Signature is visible") (overstrike "o" "Overstrike (^H) characters applied" " " "No overstrike characters applied") (emphasis "e" "/*_Emphasis_*/ characters applied" " " "No /*_emphasis_*/ characters applied")))) result) (dolist (entry alist result) (let ((key (nth 0 entry)) (on (copy-sequence (nth 1 entry))) (on-help (nth 2 entry)) (off (copy-sequence (nth 3 entry))) (off-help (nth 4 entry))) (put-text-property 0 1 (quote help-echo) on-help on) (put-text-property 0 1 (quote help-echo) off-help off) (push (list key on off) result)))))
                nil [223742 225017])
            ("gnus-article-wash-status-entry" function (:arguments ("key" "value")) nil [225019 225175])
            ("gnus-article-wash-status" function nil nil [225177 226247])
            ("gnus-add-wash-type" function (:arguments ("type")) nil [226249 226377])
            ("gnus-delete-wash-type" function (:arguments ("type")) nil [226379 226533])
            ("gnus-add-image" function (:arguments ("category" "image")) nil [226535 226821])
            ("gnus-delete-images" function (:arguments ("category")) nil [226823 227139])
            ("defalias" code nil nil [227141 227221])
            ("gnus-article-maybe-hide-headers" function nil nil [227223 227571])
            ("declare-function" code nil nil [227573 227638])
            ("gnus-shr-put-image" function (:arguments ("data" "alt" "flags")) nil [227640 228098])
            ("gnus-article-mime-handles" function (:arguments ("alist" "id" "all")) nil [228100 229362])
            ("gnus-mime-buttonize-attachments-in-header" function
               (:user-visible-flag t
                :arguments ("interactive"))
                nil [229364 232009])
            ("gnus-output-to-file" function (:arguments ("file-name")) nil [232032 233954])
            ("gnus-narrow-to-page" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [233956 235717])
            ("gnus-article-goto-next-page" function (:user-visible-flag t) nil [235745 235970])
            ("gnus-article-goto-prev-page" function (:user-visible-flag t) nil [235973 236245])
            ("gnus-article-next-page" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [236690 237750])
            ("gnus-article-beginning-of-window" function nil nil [237752 238419])
            ("scroll-in-place" variable nil nil [238421 238445])
            ("gnus-article-next-page-1" function (:arguments ("lines")) nil [238447 238734])
            ("gnus-article-prev-page" function
               (:user-visible-flag t
                :arguments ("lines"))
                nil [238736 239497])
            ("gnus-article-only-boring-p" function nil nil [239499 240183])
            ("gnus-article-refer-article" function (:user-visible-flag t) nil [240185 240657])
            ("gnus-article-show-summary" function (:user-visible-flag t) nil [240659 241036])
            ("gnus-article-describe-briefly" function (:user-visible-flag t) nil [241038 241423])
            ("gnus-article-check-buffer" function nil nil [241425 241609])
            ("gnus-pick-mode" variable nil nil [241611 241634])
            ("gnus-article-read-summary-keys" function
               (:user-visible-flag t
                :arguments ("_arg" "key" "not-restore-window"))
                nil [241636 245716])
            ("gnus-article-read-summary-send-keys" function nil nil [245718 245887])
            ("gnus-article-describe-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [245889 246702])
            ("gnus-article-describe-key-briefly" function
               (:user-visible-flag t
                :arguments ("key" "insert"))
                nil [246704 247598])
            ("gnus-agent-summary-mode" variable nil nil [247653 247685])
            ("gnus-draft-mode" variable nil nil [247686 247710])
            ("help-xref-stack-item" variable nil nil [247711 247740])
            ("help-xref-following" variable nil nil [247741 247769])
            ("gnus-article-describe-bindings" function
               (:user-visible-flag t
                :arguments ("prefix"))
                nil [247771 249886])
            ("gnus-article-reply-with-original" function
               (:user-visible-flag t
                :arguments ("wide"))
                nil [249888 250608])
            ("gnus-article-wide-reply-with-original" function (:user-visible-flag t) nil [250610 250878])
            ("gnus-article-followup-with-original" function (:user-visible-flag t) nil [250880 251569])
            ("gnus-article-hide" function
               (:user-visible-flag t
                :arguments ("arg" "force"))
                nil [251571 252013])
            ("gnus-check-group-server" function nil nil [252015 252308])
            ("declare-function" code nil nil [252310 252369])
            ("gnus-request-article-this-buffer" function (:arguments ("article" "group")) nil [252371 258922])
            ("gnus-block-private-groups" function (:arguments ("group")) nil [258924 259219])
            ("gnus-blocked-images" function nil nil [259221 259370])
            ("gnus-article-edit-mode-hook" variable nil nil [259401 259532])
            ("gnus-article-edit-done-function" variable nil nil [259534 259578])
            ("gnus-article-edit-mode-map" variable nil nil [259580 259619])
            ("unless" code nil nil [259664 261200])
            ("easy-menu-define" code nil nil [261202 261925])
            ("define-derived-mode" code nil nil [261927 262535])
            ("gnus-article-edit" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [262537 263165])
            ("gnus-article-edit-article" function (:arguments ("start-func" "exit-func" "quiet")) nil [263167 263786])
            ("gnus-article-edit-done" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [263788 264876])
            ("gnus-flush-original-article-buffer" function nil nil [264878 265068])
            ("gnus-article-edit-exit" function (:user-visible-flag t) nil [265070 265844])
            ("gnus-article-edit-full-stops" function (:user-visible-flag t) nil [265846 266150])
            ("gnus-button-url-regexp" variable (:default-value (concat "\\b\\(\\(www\\.\\|\\(s?https?\\|ftp\\|file\\|gopher\\|" "nntp\\|news\\|telnet\\|wais\\|mailto\\|info\\):\\)" "\\(//[-a-z0-9_.]+:[0-9]*\\)?" (if (string-match "[[:digit:]]" "1") (let ((chars "-a-z0-9_=#$@~%&*+\\/[:word:]") (punct "!?:;.,")) (concat "\\(?:" "[" chars punct "]+" "(" "[" chars punct "]+" "[" chars "]*)" "\\(?:" "[" chars punct "]+" "[" chars "]" "\\)?" "\\|" "[" chars punct "]+" "[" chars "]" "\\)")) (concat "\\([-a-z0-9_=!?#$@~%&*+\\/:;.,]\\|\\w\\)+" "\\([-a-z0-9_=#$@~%&*+\\/]\\|\\w\\)")) "\\)")) nil [266262 267163])
            ("gnus-button-valid-fqdn-regexp" variable (:default-value message-valid-fqdn-regexp) nil [267165 267349])
            ("gnus-button-valid-localpart-regexp" variable (:default-value "[a-z0-9$%(*-=?[_][^<>\")!;:,{}
	 @]*") nil [267423 267652])
            ("gnus-button-man-handler" variable (:default-value (quote manual-entry)) nil [267654 268001])
            ("gnus-button-mid-or-mail-regexp" variable (:default-value (concat "\\b\\(<?" gnus-button-valid-localpart-regexp "@" gnus-button-valid-fqdn-regexp ">?\\)\\b")) nil [268003 268286])
            ("gnus-button-prefer-mid-or-mail" variable (:default-value (quote gnus-button-mid-or-mail-heuristic)) nil [268288 269067])
            ("gnus-button-mid-or-mail-heuristic-alist" variable (:default-value (quote ((-10.0 . ".+\\$.+@") (-10.0 . "#") (-10.0 . "\\*") (-5.0 . "\\+[^+]*\\+.*@") (-5.0 . "@[Nn][Ee][Ww][Ss]") (-5.0 . "@.*[Dd][Ii][Aa][Ll][Uu][Pp]") (-1.0 . "^[^a-z]+@") (-5.0 . "\\.[0-9][0-9]+.*@") (-5.0 . "[a-z].*[A-Z].*[a-z].*[A-Z].*@") (-3.0 . "[A-Z][A-Z][a-z][a-z].*@") (-5.0 . "\\...?.?@") (-2.0 . "^[0-9]") (-1.0 . "^[0-9][0-9]") (-3.0 . "^[0-9][0-9a-fA-F][0-9a-fA-F][^0-9a-fA-F]") (-5.0 . "^[0-9][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][^0-9a-fA-F]") (-3.0 . "[0-9][0-9][0-9][0-9][0-9][^0-9].*@") (-3.0 . "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][^0-9].*@") (-3.0 . "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].*@") (25.0 . "-dated-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]+.*@") (-20.0 . "\\.fsf@") (-20.0 . "^slrn") (-20.0 . "^Pine") (-20.0 . "^alpine\\.") (-20.0 . "_-_") (-20.0 . "\\.ln@") (-30.0 . "@ID-[0-9]+\\.[a-zA-Z]+\\.dfncis\\.de") (-30.0 . "@4[Aa][Xx]\\.com") (10.0 . "^[^0-9]+@") (3.0 . "^[^0-9]+[0-9][0-9]?[0-9]?@") (3.0 . "@stud") (2.0 . "[a-z][a-z][._-][A-Z][a-z].*@") (0.5 . "^[A-Z][a-z]") (0.5 . "^[A-Z][a-z][a-z]") (1.5 . "^[A-Z][a-z][A-Z][a-z][^a-z]") (2.0 . "^[A-Z][a-z][A-Z][a-z][a-z][^a-z]")))) nil [269069 271378])
            ("gnus-button-mid-or-mail-heuristic" function (:arguments ("mid-or-mail")) nil [271380 274037])
            ("gnus-button-handle-mid-or-mail" function (:arguments ("mid-or-mail")) nil [274039 275008])
            ("gnus-button-handle-custom" function (:arguments ("fun" "arg")) nil [275010 275282])
            ("gnus-button-handle-describe-prefix" variable (:default-value "^\\(C-h\\|<?[Ff]1>?\\)") nil [275284 275352])
            ("gnus-button-handle-describe-function" function (:arguments ("url")) nil [275354 275581])
            ("gnus-button-handle-describe-variable" function (:arguments ("url")) nil [275583 275810])
            ("gnus-button-handle-symbol" function (:arguments ("url")) nil [275812 276144])
            ("gnus-button-handle-describe-key" function (:arguments ("url")) nil [276146 276509])
            ("gnus-button-handle-apropos" function (:arguments ("url")) nil [276511 276692])
            ("gnus-button-handle-apropos-command" function (:arguments ("url")) nil [276694 276894])
            ("gnus-button-handle-apropos-variable" function (:arguments ("url")) nil [276896 277152])
            ("gnus-button-handle-apropos-documentation" function (:arguments ("url")) nil [277154 277425])
            ("gnus-button-handle-library" function (:arguments ("url")) nil [277427 277773])
            ("gnus-button-man-level" variable
               (:user-visible-flag t
                :default-value 5)
                nil [277775 278329])
            ("gnus-button-emacs-level" variable
               (:user-visible-flag t
                :default-value 5)
                nil [278331 278907])
            ("gnus-button-message-level" variable
               (:user-visible-flag t
                :default-value 5)
                nil [278909 279234])
            ("gnus-button-browse-level" variable
               (:user-visible-flag t
                :default-value 5)
                nil [279236 279566])
            ("gnus-button-alist" variable
               (:user-visible-flag t
                :default-value (quote (("<\\(url:[>
	 ]*?\\)?\\(nntp\\|news\\):[>
	 ]*\\([^>
	 ]*@[^>
	 ]*\\)>" 0 (>= gnus-button-message-level 0) gnus-button-handle-news 3) ((concat "\\b\\(nntp\\|news\\):\\(" gnus-button-valid-localpart-regexp "@[a-z0-9.-]+[a-z]\\)") 0 t gnus-button-handle-news 2) ("\\(\\b<\\(url:[>
	 ]*\\)?\\(nntp\\|news\\):[>
	 ]*\\(//\\)?\\([^>
	 ]*\\)>\\)" 1 (>= gnus-button-message-level 0) gnus-button-fetch-group 5) ("\\b\\(nntp\\|news\\):\\(//\\)?\\([^'\">
	 ]+\\)" 0 (>= gnus-button-message-level 0) gnus-button-fetch-group 3) ("\\bmid:\\(//\\)?\\([^'\">
	 ]+@[^'\">
	 /]+\\)" 0 (>= gnus-button-message-level 0) gnus-button-message-id 2) ("\\bin\\( +article\\| +message\\)? +\\(<\\([^
 @<>]+@[^
 @<>]+\\)>\\)" 2 (>= gnus-button-message-level 0) gnus-button-message-id 3) ("\\b\\(mid\\|message-id\\):? +\\(<\\([^
 @<>]+@[^
 @<>]+\\)>\\)" 2 (>= gnus-button-message-level 0) gnus-button-message-id 3) ("\\(<URL: *\\)mailto: *\\([^> 
	]+\\)>" 0 (>= gnus-button-message-level 0) gnus-url-mailto 2) ("\\bmailto:\\([-a-z.@_+0-9%=?&/]+\\)" 0 (>= gnus-button-message-level 0) gnus-url-mailto 1) ("\\bmailto:\\([^ 
	]+\\)" 0 (>= gnus-button-message-level 0) gnus-url-mailto 1) ("\\binfo://?\\([^'\">
	]+\\)" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url 1) ("\\binfo://\\([^'\">
	 ]+\\)" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url 1) ("\\binfo:\\([^('
	 \"><][^'
	 \"><]*\\)" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url-gnome 1) ("<\\(info:\\(([^)]+)[^>
]*\\)\\)>" 1 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url-kde 2) ("\\((Info-goto-node\\|(info\\)[ 	
]*\\(\"[^\"]*\"\\))" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-url 2) ("\\b\\(C-h\\|<?[Ff]1>?\\)[ 	
]+i[ 	
]+d?[ 	
]?m[ 	
]+[^ ]+ ?[^ ]+[ 	
]+RET\\([ 	
]+i[ 	
]+[^ ]+ ?[^ ]+[ 	
]+RET\\([ 	
,]*\\)\\)?" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-info-keystrokes 0) ("M-x[ 	
]\\(customize-[^ ]+\\)[ 	
]RET[ 	
]\\([^ ]+\\)[ 	
]RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-custom 1 2) ("M-x[ 	
]+apropos[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos 1) ("M-x[ 	
]+apropos-command[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos-command 1) ("M-x[ 	
]+apropos-variable[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos-variable 1) ("M-x[ 	
]+apropos-documentation[ 	
]+RET[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-apropos-documentation 1) ("/\\([a-z][-a-z0-9]+\\.el\\)\\>[^.?]" 1 (>= gnus-button-emacs-level 8) gnus-button-handle-library 1) ("['`‘]\\([a-z][-a-z0-9]+\\.el\\)['’]" 1 (>= gnus-button-emacs-level 8) gnus-button-handle-library 1) ("['`‘]\\([a-z][a-z0-9]+-[a-z0-9]+-[-a-z0-9]*[a-z]\\|\\(gnus\\|message\\)-[-a-z]+\\)['’]" 0 (>= gnus-button-emacs-level 8) gnus-button-handle-symbol 1) ("['`‘]\\([a-z][a-z0-9]+-[a-z]+\\)['’]" 0 (>= gnus-button-emacs-level 9) gnus-button-handle-symbol 1) ("(setq[ 	
]+\\([a-z][a-z0-9]+-[-a-z0-9]+\\)[ 	
]+.+)" 1 (>= gnus-button-emacs-level 7) gnus-button-handle-describe-variable 1) ("\\bM-x[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 1 (>= gnus-button-emacs-level 7) gnus-button-handle-describe-function 1) ("\\b\\(C-h\\|<?[Ff]1>?\\)[ 	
]+f[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-describe-function 2) ("\\b\\(C-h\\|<?[Ff]1>?\\)[ 	
]+v[ 	
]+\\([^ 	
]+\\)[ 	
]+RET\\>" 0 (>= gnus-button-emacs-level 1) gnus-button-handle-describe-variable 2) ("['`‘]\\(\\(C-h\\|<?[Ff]1>?\\)[ 	
]+k[ 	
]+\\([^'’]+\\)\\)['’]" 1 (>= gnus-button-emacs-level 1) gnus-button-handle-describe-key 3) ("<URL: *\\([^
<>]*\\)>" 1 (>= gnus-button-browse-level 0) gnus-button-embedded-url 1) ("\"URL: *\\([^
\"]*\\)\"" 1 (>= gnus-button-browse-level 0) gnus-button-embedded-url 1) (gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("\\b\\([a-z][a-z]+([1-9])\\)\\W" 0 (and (>= gnus-button-man-level 1) (< gnus-button-man-level 3)) gnus-button-handle-man 1) ("\\b\\([a-z][-_.a-z0-9]+([1-9])\\)\\W" 0 (and (>= gnus-button-man-level 3) (< gnus-button-man-level 5)) gnus-button-handle-man 1) ("\\b\\(\\(?:[a-z][-+_.:a-z0-9]+([1-9][X1a-z]*)\\)\\|\\b\\(?:X([1-9])\\)\\)\\W" 0 (>= gnus-button-man-level 5) gnus-button-handle-man 1) ("^--- \\([^ .]+\\.el\\).*
.*
@@ -?\\([0-9]+\\)" 1 (>= gnus-button-message-level 4) gnus-button-patch 1 2) ("^\\*\\*\\* \\([^ .]+\\.el\\).*
.*
\\*+
\\*\\*\\* \\([0-9]+\\)" 1 (>= gnus-button-message-level 4) gnus-button-patch 1 2) (gnus-button-mid-or-mail-regexp 0 (>= gnus-button-message-level 5) gnus-button-handle-mid-or-mail 1))))
                nil [279568 287384])
            ("put" code nil nil [287385 287433])
            ("gnus-header-button-alist" variable
               (:user-visible-flag t
                :default-value (quote (("^\\(References\\|Message-I[Dd]\\|^In-Reply-To\\):" "<[^<>]+>" 0 (>= gnus-button-message-level 0) gnus-button-message-id 0) ("^\\(From\\|Reply-To\\):" ": *\\(.+\\)$" 1 (>= gnus-button-message-level 0) gnus-button-reply 1) ("^\\(Cc\\|To\\):" "[^ 	
<>,()\"]+@[^ 	
<>,()\"]+" 0 (>= gnus-button-message-level 0) gnus-msg-mail 0) ("^X-[Uu][Rr][Ll]:" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("^Subject:" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("^[^:]+:" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) browse-url 0) ("^OpenPGP:.*url=" gnus-button-url-regexp 0 (>= gnus-button-browse-level 0) gnus-button-openpgp 0) ("^[^:]+:" "\\bmailto:\\([-a-z.@_+0-9%=?&/]+\\)" 0 (>= gnus-button-message-level 0) gnus-url-mailto 1) ("^[^:]+:" "\\(<\\(url: \\)?\\(nntp\\|news\\):\\([^>
 ]*\\)>\\)" 1 (>= gnus-button-message-level 0) gnus-button-message-id 4))))
                nil [287435 289131])
            ("put" code nil nil [289132 289187])
            ("gnus-article-push-button" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [289204 289719])
            ("gnus-article-press-button" function (:user-visible-flag t) nil [289721 290078])
            ("gnus-article-highlight" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [290080 290593])
            ("gnus-article-highlight-some" function
               (:user-visible-flag t
                :arguments ("_force"))
                nil [290595 291000])
            ("gnus-article-highlight-headers" function (:user-visible-flag t) nil [291002 292072])
            ("gnus-article-highlight-signature" function (:user-visible-flag t) nil [292074 292771])
            ("gnus-button-in-region-p" function (:arguments ("b" "e" "prop")) nil [292773 292897])
            ("gnus-article-add-buttons" function (:user-visible-flag t) nil [292899 294140])
            ("gnus-article-extend-url-button" function (:arguments ("beg" "start" "end")) nil [294142 296254])
            ("gnus-article-add-buttons-to-head" function (:user-visible-flag t) nil [296298 297244])
            ("gnus-article-add-button" function (:arguments ("from" "to" "fun" "data" "text")) nil [297271 297925])
            ("gnus-article-copy-string" function (:user-visible-flag t) nil [297927 298249])
            ("gnus-article-set-globals" function nil nil [298276 298387])
            ("gnus-signature-toggle" function (:arguments ("end")) nil [298389 299072])
            ("gnus-button-push" function (:arguments ("marker-and-entry")) nil [299074 300461])
            ("gnus-parse-news-url" function (:arguments ("url")) nil [300463 301355])
            ("nntp-port-number" variable nil nil [301357 301382])
            ("gnus-button-handle-news" function (:arguments ("url")) nil [301384 302018])
            ("gnus-button-patch" function
               (:user-visible-flag t
                :arguments ("library" "line"))
                nil [302020 302361])
            ("gnus-button-handle-man" function (:arguments ("url")) nil [302363 302694])
            ("gnus-button-handle-info-url" function (:arguments ("url")) nil [302696 303239])
            ("gnus-button-handle-info-url-gnome" function (:arguments ("url")) nil [303241 303644])
            ("gnus-button-handle-info-url-kde" function (:arguments ("url")) nil [303646 303773])
            ("declare-function" code nil nil [303807 303869])
            ("declare-function" code nil nil [303870 303917])
            ("gnus-button-handle-info-keystrokes" function (:arguments ("url")) nil [303919 305013])
            ("pgg-snarf-keys-region" function (:prototype-flag t) nil [305015 305054])
            ("declare-function" code nil nil [305118 305187])
            ("gnus-button-openpgp" function (:arguments ("url")) nil [305189 305456])
            ("gnus-button-message-id" function (:arguments ("message-id")) nil [305458 305611])
            ("gnus-button-fetch-group" function (:arguments ("address" "_ignore")) nil [305613 306595])
            ("gnus-url-parse-query-string" function (:arguments ("query" "downcase")) nil [306597 307215])
            ("gnus-url-mailto" function (:arguments ("url")) nil [307217 308174])
            ("gnus-button-embedded-url" function (:arguments ("address")) nil [308176 308305])
            ("gnus-next-page-line-format" variable (:default-value "%{%(Next page...%)%}
") nil [308353 308413])
            ("gnus-prev-page-line-format" variable (:default-value "%{%(Previous page...%)%}
") nil [308414 308478])
            ("gnus-prev-page-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map gnus-mouse-2 (quote gnus-button-prev-page)) (define-key map "" (quote gnus-button-prev-page)) map)) nil [308480 308658])
            ("gnus-next-page-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map gnus-mouse-2 (quote gnus-button-next-page)) (define-key map "" (quote gnus-button-next-page)) map)) nil [308660 308838])
            ("gnus-insert-prev-page-button" function nil nil [308840 309435])
            ("gnus-button-next-page" function
               (:user-visible-flag t
                :arguments ("_args" "_more-args"))
                nil [309437 309690])
            ("gnus-button-prev-page" function
               (:user-visible-flag t
                :arguments ("_args" "_more-args"))
                nil [309692 309945])
            ("gnus-insert-next-page-button" function nil nil [309947 310612])
            ("gnus-article-button-next-page" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [310614 310857])
            ("gnus-article-button-prev-page" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [310859 311102])
            ("gnus-decode-header-methods" variable (:default-value (quote (mail-decode-encoded-word-region))) nil [311104 311602])
            ("gnus-decode-header-methods-cache" variable nil nil [311604 311649])
            ("gnus-multi-decode-header" function (:arguments ("start" "end")) nil [311651 312418])
            ("gnus-inhibit-article-treatments" variable nil nil [312463 312507])
            ("part-number" variable nil nil [312531 312551])
            ("total-parts" variable nil nil [312603 312623])
            ("gnus-treat-type" variable nil nil [312675 312699])
            ("gnus-treat-condition" variable nil nil [312700 312729])
            ("gnus-treat-length" variable nil nil [312730 312756])
            ("gnus-treat-article" function (:arguments ("condition" "part-num" "total" "type")) nil [312758 313863])
            ("gnus-treat-predicate" function (:arguments ("val")) nil [313865 314828])
            ("gnus-article-encrypt-body" function
               (:user-visible-flag t
                :arguments ("protocol" "n"))
                nil [314830 317613])
            ("gnus-mime-security-button-line-format" variable (:default-value "%{%([[%t:%i]%D]%)%}
") nil [317615 317814])
            ("gnus-mime-security-button-end-line-format" variable (:default-value "%{%([[End of %t]%D]%)%}
") nil [317816 318023])
            ("gnus-mime-security-button-line-format-alist" variable (:default-value (quote ((116 gnus-tmp-type 115) (105 gnus-tmp-info 115) (100 gnus-tmp-details 115) (68 gnus-tmp-pressed-details 115)))) nil [318025 318196])
            ("gnus-mime-security-button-commands" variable (:default-value (quote ((gnus-article-press-button "" "Show Detail") (undefined "v") (undefined "t") (undefined "C") (gnus-mime-security-save-part "o" "Save...") (undefined "") (undefined "r") (undefined "d") (undefined "c") (undefined "i") (undefined "E") (undefined "e") (undefined "p") (gnus-mime-security-pipe-part "|" "Pipe To Command...") (undefined ".")))) nil [318198 318645])
            ("gnus-mime-security-button-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map gnus-mouse-2 (quote gnus-article-push-button)) (define-key map gnus-down-mouse-3 (quote gnus-mime-security-button-menu)) (dolist (c gnus-mime-security-button-commands) (define-key map (cadr c) (car c))) map)) nil [318647 318953])
            ("easy-menu-define" code nil nil [318955 319249])
            ("gnus-mime-security-button-menu" function
               (:user-visible-flag t
                :arguments ("event" "prefix"))
                nil [319251 319622])
            ("gnus-mime-security-details-buffer" variable nil nil [319624 319670])
            ("gnus-mime-security-button-pressed" variable nil nil [319672 319718])
            ("gnus-mime-security-show-details-inline" variable (:default-value t) nil [319720 319821])
            ("gnus-mime-security-verify-or-decrypt" function (:arguments ("handle")) nil [319823 320583])
            ("gnus-mime-security-show-details" function (:arguments ("handle")) nil [320585 321923])
            ("gnus-mime-security-press-button" function (:arguments ("handle")) nil [321925 322149])
            ("gnus-insert-mime-security-button" function (:arguments ("handle" "_displayed")) nil [322151 324068])
            ("gnus-mime-display-security" function (:arguments ("handle")) nil [324070 324703])
            ("gnus-mime-security-run-function" function (:arguments ("function")) nil [324705 325387])
            ("gnus-mime-security-save-part" function (:user-visible-flag t) nil [325389 325534])
            ("gnus-mime-security-pipe-part" function (:user-visible-flag t) nil [325536 325694])
            ("gnus-ems-redefine" code nil nil [325696 325715])
            ("gnus-art" package nil nil [325717 325736])
            ("run-hooks" code nil nil [325738 325769]))          
      :file "gnus-art.el.gz"
      :pointmax 325797
      :fsize 77121
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 182380 . 182381) (symbol 180123 . 180140) (open-paren 180122 . 180123) (close-paren 157178 . 157179) (symbol 155258 . 155274) (open-paren 155257 . 155258) (close-paren 98567 . 98568) (symbol 98529 . 98546) (open-paren 98528 . 98529) (close-paren 915 . 916) (symbol 882 . 899) (open-paren 881 . 882)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [1016 1031])
            ("gnus-sum" include nil nil [1032 1051])
            ("format-spec" include nil nil [1052 1074])
            ("sieve-mode" function (:prototype-flag t) nil [1075 1110])
            ("sieve" include nil nil [1132 1148])
            ("gnus-sieve" customgroup (:user-visible-flag t) nil [1165 1239])
            ("gnus-sieve-file" variable (:default-value "~/.sieve") nil [1241 1345])
            ("gnus-sieve-region-start" variable (:default-value "
## Begin Gnus Sieve Script
") nil [1347 1532])
            ("gnus-sieve-region-end" variable (:default-value "
## End Gnus Sieve Script
") nil [1534 1713])
            ("gnus-sieve-select-method" variable nil nil [1715 1935])
            ("gnus-sieve-crosspost" variable (:default-value t) nil [1937 2072])
            ("gnus-sieve-update-shell-command" variable (:default-value "echo put %f | sieveshell %s") nil [2074 2394])
            ("gnus-sieve-update" function (:user-visible-flag t) nil [2411 3010])
            ("gnus-sieve-generate" function (:user-visible-flag t) nil [3027 3790])
            ("gnus-sieve-guess-rule-for-article" function nil nil [3792 4036])
            ("gnus-sieve-article-add-rule" function nil nil [4053 4518])
            ("gnus-sieve-string-list" function (:arguments ("list")) nil [4571 4819])
            ("gnus-sieve-test-list" function (:arguments ("list")) nil [4821 5143])
            ("gnus-sieve-test-token" function (:arguments ("token")) nil [5173 5832])
            ("gnus-sieve-test" function (:arguments ("test")) nil [5834 6319])
            ("gnus-sieve-script" function (:arguments ("method" "crosspost")) nil [6321 7683])
            ("gnus-sieve" package nil nil [7685 7706]))          
      :file "gnus-sieve.el.gz"
      :pointmax 7736
      :fsize 2727
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1148 . 1149) (symbol 1112 . 1129) (open-paren 1111 . 1112)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [879 894])
            ("gnus-win" include nil nil [895 914])
            ("gnus-int" include nil nil [915 934])
            ("gnus-spec" include nil nil [935 955])
            ("gnus-range" include nil nil [956 977])
            ("gnus-util" include nil nil [978 998])
            ("gnus-cloud" include nil nil [999 1020])
            ("message-make-date" function (:prototype-flag t) nil [1021 1060])
            ("gnus-agent-read-servers-validate" function (:prototype-flag t) nil [1061 1118])
            ("gnus-agent-save-local" function (:prototype-flag t) nil [1119 1165])
            ("gnus-agent-possibly-alter-active" function (:prototype-flag t) nil [1166 1223])
            ("cl" include nil nil [1246 1259])
            ("gnus-agent-covered-methods" variable nil nil [1262 1297])
            ("gnus-agent-file-loading-local" variable nil nil [1298 1336])
            ("gnus-agent-file-loading-cache" variable nil nil [1337 1375])
            ("gnus-startup-file" variable (:default-value (nnheader-concat gnus-home-directory ".newsrc")) nil [1377 1568])
            ("gnus-backup-startup-file" variable (:default-value (quote never)) nil [1570 1900])
            ("gnus-save-startup-file-via-temp-buffer" variable (:default-value t) nil [1902 2335])
            ("gnus-init-file" variable (:default-value (nnheader-concat gnus-home-directory ".gnus")) nil [2337 2565])
            ("gnus-site-init-file" variable (:default-value (condition-case nil (concat (file-name-directory (directory-file-name installation-directory)) "site-lisp/gnus-init") (error nil))) nil [2567 2958])
            ("gnus-use-dribble-file" variable
               (:user-visible-flag t
                :default-value t)
                nil [2960 3232])
            ("gnus-dribble-directory" variable (:user-visible-flag t) nil [3234 3481])
            ("gnus-check-new-newsgroups" variable
               (:user-visible-flag t
                :default-value (quote ask-server))
                nil [3483 5060])
            ("gnus-check-bogus-newsgroups" variable (:user-visible-flag t) nil [5062 5385])
            ("gnus-read-active-file" variable
               (:user-visible-flag t
                :default-value (quote some))
                nil [5387 6150])
            ("gnus-level-subscribed" variable
               (:constant-flag t
                :default-value 5)
                nil [6152 6261])
            ("gnus-level-unsubscribed" variable
               (:constant-flag t
                :default-value 7)
                nil [6263 6701])
            ("gnus-level-zombie" variable
               (:constant-flag t
                :default-value 8)
                nil [6703 6779])
            ("gnus-level-killed" variable
               (:constant-flag t
                :default-value 9)
                nil [6781 6850])
            ("gnus-level-default-subscribed" variable
               (:user-visible-flag t
                :default-value 3)
                nil [6852 7001])
            ("gnus-level-default-unsubscribed" variable
               (:user-visible-flag t
                :default-value 6)
                nil [7003 7158])
            ("gnus-activate-level" variable
               (:user-visible-flag t
                :default-value (1+ gnus-level-subscribed))
                nil [7160 7449])
            ("gnus-activate-foreign-newsgroups" variable
               (:user-visible-flag t
                :default-value 4)
                nil [7451 8152])
            ("gnus-read-newsrc-file" variable
               (:user-visible-flag t
                :default-value t)
                nil [8154 8575])
            ("gnus-save-newsrc-file" variable
               (:user-visible-flag t
                :default-value t)
                nil [8577 8979])
            ("gnus-save-killed-list" variable
               (:user-visible-flag t
                :default-value t)
                nil [8981 9794])
            ("gnus-ignored-newsgroups" variable
               (:user-visible-flag t
                :default-value (mapconcat (quote identity) (quote ("^to\\." "^[0-9. 	]+\\( \\|$\\)" "^[\"][\"#'()]")) "\\|"))
                nil [9796 10299])
            ("gnus-subscribe-newsgroup-method" variable
               (:user-visible-flag t
                :default-value (quote gnus-subscribe-zombies))
                nil [10301 11342])
            ("define-obsolete-variable-alias" code nil nil [11344 11453])
            ("gnus-subscribe-newsgroup-functions" variable (:user-visible-flag t) nil [11454 11672])
            ("gnus-subscribe-options-newsgroup-method" variable
               (:user-visible-flag t
                :default-value (quote gnus-subscribe-alphabetically))
                nil [11674 12501])
            ("gnus-subscribe-hierarchical-interactive" variable (:user-visible-flag t) nil [12503 12949])
            ("gnus-auto-subscribed-categories" variable
               (:user-visible-flag t
                :default-value (quote (mail post-mail)))
                nil [12951 13338])
            ("gnus-auto-subscribed-groups" variable
               (:user-visible-flag t
                :default-value "^nnml\\|^nnfolder\\|^nnmbox\\|^nnmh\\|^nnbabyl\\|^nnmaildir\\|^nnimap")
                nil [13340 13843])
            ("gnus-options-subscribe" variable (:user-visible-flag t) nil [13845 14316])
            ("gnus-options-not-subscribe" variable (:user-visible-flag t) nil [14318 14619])
            ("gnus-modtime-botch" variable (:user-visible-flag t) nil [14621 14828])
            ("gnus-check-bogus-groups-hook" variable nil nil [14830 14960])
            ("gnus-startup-hook" variable nil nil [14962 15124])
            ("gnus-before-startup-hook" variable nil nil [15126 15332])
            ("gnus-before-resume-hook" variable nil nil [15334 15594])
            ("gnus-started-hook" variable nil nil [15596 15715])
            ("gnus-setup-news-hook" variable nil nil [15717 15865])
            ("gnus-get-top-new-news-hook" variable nil nil [15867 16028])
            ("gnus-get-new-news-hook" variable nil nil [16030 16160])
            ("gnus-after-getting-new-news-hook" variable
               (:user-visible-flag t
                :default-value (quote (gnus-display-time-event-handler)))
                nil [16162 16377])
            ("gnus-read-newsrc-el-hook" variable nil nil [16379 16509])
            ("gnus-save-newsrc-hook" variable nil nil [16511 16641])
            ("gnus-save-quick-newsrc-hook" variable nil nil [16643 16829])
            ("gnus-save-standard-newsrc-hook" variable nil nil [16831 17023])
            ("gnus-group-mode-hook" variable nil nil [17025 17164])
            ("gnus-always-read-dribble-file" variable nil nil [17166 17293])
            ("gnus-ding-file-coding-system" variable (:default-value mm-universal-coding-system) nil [17405 17502])
            ("gnus-newsrc-file-version" variable nil nil [17504 17541])
            ("gnus-override-subscribe-method" variable nil nil [17542 17585])
            ("gnus-dribble-buffer" variable nil nil [17586 17618])
            ("gnus-newsrc-options" variable nil nil [17619 17689])
            ("gnus-newsrc-options-n" variable nil nil [17691 17807])
            ("gnus-newsrc-last-checked-date" variable nil nil [17809 17903])
            ("gnus-current-startup-file" variable nil nil [17905 17982])
            ("gnus-group-line-format" variable nil nil [18010 18041])
            ("gnus-init-inhibit" variable nil nil [18094 18124])
            ("gnus-read-init-file" function (:arguments ("inhibit-next")) nil [18125 18639])
            ("gnus-subscribe-hierarchical-interactive" function (:arguments ("groups")) nil [18675 21274])
            ("gnus-subscribe-randomly" function (:arguments ("newsgroup")) nil [21276 21420])
            ("gnus-subscribe-alphabetically" function (:arguments ("newgroup")) nil [21422 21773])
            ("gnus-subscribe-hierarchically" function (:arguments ("newgroup")) nil [21775 22657])
            ("gnus-subscribe-interactively" function (:arguments ("group")) nil [22659 22978])
            ("gnus-subscribe-zombies" function (:arguments ("group")) nil [22980 23094])
            ("gnus-subscribe-killed" function (:arguments ("group")) nil [23096 23204])
            ("gnus-subscribe-newsgroup" function (:arguments ("newsgroup" "next")) nil [23206 23836])
            ("gnus-read-active-file-p" function nil nil [23838 24000])
            ("gnus-current-headers" variable nil nil [24070 24099])
            ("gnus-thread-indent-array" variable nil nil [24100 24133])
            ("gnus-newsgroup-name" variable nil nil [24134 24162])
            ("gnus-newsgroup-headers" variable nil nil [24163 24194])
            ("gnus-group-list-mode" variable nil nil [24195 24224])
            ("gnus-group-mark-positions" variable nil nil [24225 24259])
            ("gnus-newsgroup-data" variable nil nil [24260 24288])
            ("gnus-newsgroup-unreads" variable nil nil [24289 24320])
            ("nnoo-state-alist" variable nil nil [24321 24346])
            ("gnus-current-select-method" variable nil nil [24347 24382])
            ("mail-sources" variable nil nil [24383 24404])
            ("nnmail-scan-directory-mail-source-once" variable nil nil [24405 24452])
            ("nnmail-split-history" variable nil nil [24453 24482])
            ("nnmail-spool-file" variable nil nil [24483 24509])
            ("gnus-close-all-servers" function (:user-visible-flag t) nil [24511 24660])
            ("gnus-clear-system" function nil nil [24662 26378])
            ("gnus-no-server-1" function
               (:user-visible-flag t
                :arguments ("arg" "slave"))
                nil [26380 27009])
            ("gnus-1" function
               (:user-visible-flag t
                :arguments ("arg" "dont-connect" "slave"))
                nil [27011 29003])
            ("gnus-start-draft-setup" function (:user-visible-flag t) nil [29005 29540])
            ("gnus-dribble-ignore" variable nil nil [29570 29602])
            ("gnus-dribble-eval-file" variable nil nil [29603 29638])
            ("gnus-dribble-file-name" function nil nil [29640 29936])
            ("gnus-dribble-enter" function (:arguments ("string" "regexp")) nil [29938 31173])
            ("gnus-dribble-touch" function nil nil [31175 31260])
            ("gnus-dribble-read-file" function nil nil [31262 33347])
            ("gnus-dribble-eval-file" function nil nil [33349 33577])
            ("gnus-dribble-delete-file" function nil nil [33579 33926])
            ("gnus-dribble-save" function nil nil [33928 34125])
            ("gnus-dribble-clear" function nil nil [34127 34354])
            ("gnus-setup-news" function (:arguments ("rawfile" "level" "dont-connect")) nil [34401 37974])
            ("gnus-call-subscribe-functions" function (:arguments ("method" "group")) nil [37976 38380])
            ("gnus-find-new-newsgroups" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [38382 41306])
            ("gnus-matches-options-n" function (:arguments ("group")) nil [41308 42480])
            ("gnus-ask-server-for-new-groups" function nil nil [42482 44973])
            ("gnus-subscribe-group" function (:arguments ("group" "previous" "method")) nil [44975 45271])
            ("gnus-group-change-level" function (:arguments ("entry" "level" "oldlevel" "previous" "fromkilled")) nil [46196 50231])
            ("gnus-check-bogus-newsgroups" function (:arguments ("confirm")) nil [50233 52407])
            ("gnus-check-duplicate-killed-groups" function (:user-visible-flag t) nil [52409 52713])
            ("gnus-cache-active-hashtb" variable nil nil [52782 52815])
            ("gnus-cache-possibly-alter-active" function (:arguments ("group" "active")) nil [52837 53272])
            ("gnus-activate-group" function (:arguments ("group" "scan" "dont-check" "method" "dont-sub-check")) nil [53275 55371])
            ("gnus-get-unread-articles-in-group" function (:arguments ("info" "active" "update")) nil [55373 58795])
            ("gnus-get-unread-articles" function (:arguments ("level" "dont-connect" "one-level")) nil [58933 65584])
            ("gnus-method-rank" function (:arguments ("type" "method")) nil [65586 66103])
            ("gnus-read-active-for-groups" function (:arguments ("method" "infos" "early-data")) nil [66105 67451])
            ("gnus-make-hashtable-from-newsrc-alist" function nil nil [67556 68844])
            ("gnus-make-hashtable-from-killed" function nil nil [68846 69261])
            ("gnus-parse-active" function nil nil [69263 69633])
            ("gnus-make-articles-unread" function (:arguments ("group" "articles")) nil [69635 70417])
            ("gnus-make-ascending-articles-unread" function (:arguments ("group" "articles")) nil [70419 73736])
            ("gnus-update-active-hashtb-from-killed" function nil nil [73780 74151])
            ("gnus-get-killed-groups" function nil nil [74153 75055])
            ("gnus-read-active-file" function (:arguments ("force" "not-native")) nil [75104 76442])
            ("gnus-read-active-file-1" function (:arguments ("method" "force")) nil [76444 78007])
            ("gnus-read-active-file-2" function (:arguments ("groups" "method")) nil [78009 78583])
            ("gnus-active-to-gnus-format" function (:arguments ("method" "hashtb" "ignore-errors" "real-active")) nil [78655 81878])
            ("gnus-groups-to-gnus-format" function (:arguments ("method" "hashtb" "real-active")) nil [81880 83604])
            ("gnus-read-newsrc-file" function (:arguments ("force")) nil [83606 85336])
            ("gnus-clean-old-newsrc" function (:arguments ("force")) nil [85338 85416])
            ("gnus-convert-old-newsrc" function nil nil [85418 89196])
            ("gnus-convert-mark-converter-prompt" function (:arguments ("converter" "no-prompt")) nil [89198 89551])
            ("gnus-convert-converter-needs-prompt" function (:arguments ("converter")) nil [89553 89751])
            ("gnus-convert-old-ticks" function (:arguments ("converting-to")) nil [89753 90231])
            ("gnus-load" function (:arguments ("file")) nil [90233 90740])
            ("gnus-read-newsrc-el-file" function (:arguments ("file")) nil [90742 91899])
            ("gnus-read-old-newsrc-el-file" function (:arguments ("file")) nil [91943 93905])
            ("gnus-make-newsrc-file" function (:arguments ("file")) nil [93907 94280])
            ("gnus-newsrc-to-gnus-format" function nil nil [94282 100797])
            ("gnus-newsrc-parse-options" function (:arguments ("options")) nil [101435 103017])
            ("defalias" code nil nil [103039 103162])
            ("gnus-save-newsrc-file-last-timestamp" variable nil nil [103165 103214])
            ("gnus-save-newsrc-file" function (:arguments ("force")) nil [103215 108137])
            ("gnus-gnus-to-quick-newsrc-format" function (:arguments ("minimal" "name" "specific-variables")) nil [108139 109818])
            ("gnus-strip-killed-list" function nil nil [109820 110115])
            ("gnus-gnus-to-newsrc-format" function (:arguments ("foreign-ok")) nil [110117 112589])
            ("gnus-slave-mode" variable nil nil [112623 112651])
            ("gnus-slave-mode" function nil nil [112653 112946])
            ("gnus-slave-save-newsrc" function nil nil [112948 113366])
            ("gnus-master-read-slave-newsrc" function nil nil [113368 114573])
            ("gnus-read-all-descriptions-files" function nil nil [114609 114922])
            ("gnus-read-descriptions-file" function (:arguments ("method")) nil [114924 117644])
            ("gnus-group-get-description" function (:arguments ("group")) nil [117646 117948])
            ("gnus-declare-backend" function (:arguments ("name" "abilities")) nil [117965 118230])
            ("gnus-set-default-directory" function nil nil [118232 118591])
            ("gnus-display-time-event-handler" function nil nil [118593 118759])
            ("gnus-check-reasonable-setup" function nil nil [118761 119989])
            ("gnus-start" package nil nil [119991 120012]))          
      :file "gnus-start.el.gz"
      :pointmax 120042
      :fsize 31096
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 103162 . 103163) (symbol 103020 . 103036) (open-paren 103019 . 103020) (close-paren 53272 . 53273) (symbol 52817 . 52834) (open-paren 52816 . 52817) (close-paren 1259 . 1260) (symbol 1226 . 1243) (open-paren 1225 . 1226)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gmm" customgroup (:user-visible-flag t) nil [1081 1213])
            ("gmm-verbose" variable (:default-value 7) nil [1294 1608])
            ("gmm-regexp-concat" function (:arguments ("regexp")) nil [1625 1920])
            ("gmm-message" function (:arguments ("level" "args")) nil [1937 2479])
            ("gmm-error" function (:arguments ("level" "args")) nil [2496 2851])
            ("gmm-widget-p" function (:arguments ("symbol")) nil [2868 2960])
            ("widget-create-child-value" function (:prototype-flag t) nil [2962 3010])
            ("widget-convert" function (:prototype-flag t) nil [3011 3048])
            ("widget-default-get" function (:prototype-flag t) nil [3049 3090])
            ("define-widget" code nil nil [3144 4386])
            ("define-widget" code nil nil [5184 5769])
            ("define-widget" code nil nil [5771 6649])
            ("gmm-tool-bar-style" variable (:default-value (if (and (boundp (quote tool-bar-mode)) tool-bar-mode (and (fboundp (quote display-visual-class)) (not (memq (display-visual-class) (list (quote static-gray) (quote gray-scale) (quote static-color) (quote pseudo-color)))))) (quote gnome) (quote retro))) nil [7233 7624])
            ("tool-bar-map" variable nil nil [7626 7647])
            ("gmm-tool-bar-from-list" function (:arguments ("icon-list" "zap-list" "default-map")) nil [7664 10041])
            ("defun-gmm" function (:arguments ("name" "function" "arg-list" "body")) nil [10043 10378])
            ("defun-gmm" code nil nil [10380 10576])
            ("defun-gmm" code nil nil [10638 14746])
            ("gmm-customize-mode" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [14748 15062])
            ("gmm-write-region" function (:arguments ("start" "end" "filename" "append" "visit" "lockname" "mustbenew")) nil [15064 15556])
            ("gmm-called-interactively-p" function (:arguments ("kind")) nil [15607 15905])
            ("gmm-labels" function (:arguments ("bindings" "body")) nil [15949 16425])
            ("put" code nil nil [16426 16467])
            ("put" code nil nil [16468 16548])
            ("gmm-format-time-string" function (:arguments ("format-string" "time" "tz")) nil [16550 17823])
            ("gmm-utils" package nil nil [17825 17845]))          
      :file "gmm-utils.el.gz"
      :pointmax 17874
      :fsize 6425
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [924 937])
            ("gnus" include nil nil [939 954])
            ("gnus-sum" include nil nil [955 974])
            ("gnus-group" include nil nil [975 996])
            ("nnmail" include nil nil [997 1014])
            ("gnus-group-split-updated-hook" variable nil nil [1016 1147])
            ("gnus-group-split-default-catch-all-group" variable (:default-value "mail.misc") nil [1149 1408])
            ("gnus-group-split-setup" function
               (:user-visible-flag t
                :arguments ("auto-update" "catch-all"))
                nil [1425 2803])
            ("gnus-group-split-update" function
               (:user-visible-flag t
                :arguments ("catch-all"))
                nil [2820 3353])
            ("gnus-group-split" function nil nil [3370 3663])
            ("gnus-group-split-fancy" function (:arguments ("groups" "no-crosspost" "catch-all")) nil [3680 8794])
            ("gnus-mlspl" package nil nil [8796 8817]))          
      :file "gnus-mlspl.el.gz"
      :pointmax 8847
      :fsize 3226
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 937 . 938) (symbol 906 . 923) (open-paren 905 . 906)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [886 901])
            ("gnus-win" include nil nil [902 921])
            ("gnus-edit-form" customgroup (:user-visible-flag t) nil [950 1024])
            ("gnus-edit-form-mode-hook" variable nil nil [1026 1152])
            ("gnus-edit-form-menu-hook" variable nil nil [1154 1300])
            ("gnus-edit-form-buffer" variable (:default-value "*Gnus edit form*") nil [1326 1375])
            ("gnus-edit-form-done-function" variable nil nil [1376 1417])
            ("gnus-edit-form-mode-map" variable nil nil [1419 1455])
            ("unless" code nil nil [1456 1723])
            ("gnus-edit-form-make-menu-bar" function nil nil [1725 2040])
            ("define-derived-mode" code nil nil [2042 2393])
            ("gnus-edit-form" function (:arguments ("form" "documentation" "exit-func" "layout")) nil [2395 3301])
            ("gnus-edit-form-done" function (:user-visible-flag t) nil [3303 3596])
            ("gnus-edit-form-exit" function (:user-visible-flag t) nil [3598 3785])
            ("gnus-eform" package nil nil [3787 3808]))          
      :file "gnus-eform.el.gz"
      :pointmax 3838
      :fsize 1516
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [909 922])
            ("gnus" include nil nil [925 940])
            ("gnus-util" include nil nil [941 961])
            ("gnus-windows" customgroup (:user-visible-flag t) nil [963 1031])
            ("gnus-use-full-window" variable
               (:user-visible-flag t
                :default-value t)
                nil [1033 1153])
            ("gnus-window-min-width" variable
               (:user-visible-flag t
                :default-value 2)
                nil [1155 1266])
            ("gnus-window-min-height" variable
               (:user-visible-flag t
                :default-value 1)
                nil [1268 1381])
            ("gnus-always-force-window-configuration" variable (:user-visible-flag t) nil [1383 1539])
            ("gnus-use-frames-on-any-display" variable (:user-visible-flag t) nil [1541 1822])
            ("gnus-buffer-configuration" variable (:default-value (quote ((group (vertical 1.0 (group 1.0 point))) (summary (vertical 1.0 (summary 1.0 point))) (article (cond (gnus-use-trees (quote (vertical 1.0 (summary 0.25 point) (tree 0.25) (article 1.0)))) (t (quote (vertical 1.0 (summary 0.25 point) (article 1.0)))))) (server (vertical 1.0 (server 1.0 point))) (browse (vertical 1.0 (browse 1.0 point))) (message (vertical 1.0 (message 1.0 point))) (pick (vertical 1.0 (article 1.0 point))) (info (vertical 1.0 (info 1.0 point))) (summary-faq (vertical 1.0 (summary 0.25) (faq 1.0 point))) (only-article (vertical 1.0 (article 1.0 point))) (edit-article (vertical 1.0 (article 1.0 point))) (edit-form (vertical 1.0 (group 0.5) (edit-form 1.0 point))) (edit-score (vertical 1.0 (summary 0.25) (edit-score 1.0 point))) (edit-server (vertical 1.0 (server 0.5) (edit-form 1.0 point))) (post (vertical 1.0 (post 1.0 point))) (reply (vertical 1.0 (article 0.5) (message 1.0 point))) (forward (vertical 1.0 (message 1.0 point))) (reply-yank (vertical 1.0 (message 1.0 point))) (mail-bounce (vertical 1.0 (article 0.5) (message 1.0 point))) (pipe (vertical 1.0 (summary 0.25 point) ("*Shell Command Output*" 1.0))) (bug (vertical 1.0 (if gnus-bug-create-help-buffer (quote ("*Gnus Help Bug*" 0.5))) ("*Gnus Bug*" 1.0 point))) (score-trace (vertical 1.0 (summary 0.5 point) ("*Score Trace*" 1.0))) (score-words (vertical 1.0 (summary 0.5 point) ("*Score Words*" 1.0))) (split-trace (vertical 1.0 (summary 0.5 point) ("*Split Trace*" 1.0))) (category (vertical 1.0 (category 1.0))) (compose-bounce (vertical 1.0 (article 0.5) (message 1.0 point))) (display-term (vertical 1.0 ("*display*" 1.0))) (mml-preview (vertical 1.0 (message 0.5) (mml-preview 1.0 point)))))) nil [1824 4258])
            ("gnus-window-to-buffer" variable (:default-value (quote ((group . gnus-group-buffer) (summary . gnus-summary-buffer) (article . gnus-article-buffer) (server . gnus-server-buffer) (browse . "*Gnus Browse Server*") (edit-group . gnus-group-edit-buffer) (edit-form . gnus-edit-form-buffer) (edit-server . gnus-server-edit-buffer) (edit-score . gnus-score-edit-buffer) (message . gnus-message-buffer) (mail . gnus-message-buffer) (post-news . gnus-message-buffer) (faq . gnus-faq-buffer) (tree . gnus-tree-buffer) (score-trace . "*Score Trace*") (split-trace . "*Split Trace*") (info . gnus-info-buffer) (category . gnus-category-buffer) (article-copy . gnus-article-copy) (draft . gnus-draft-buffer) (mml-preview . mml-preview-buffer)))) nil [4260 5118])
            ("gnus-configure-windows-hook" variable (:user-visible-flag t) nil [5120 5263])
            ("gnus-current-window-configuration" variable nil nil [5290 5384])
            ("gnus-created-frames" variable nil nil [5386 5418])
            ("gnus-window-frame-focus" variable nil nil [5419 5455])
            ("gnus-kill-gnus-frames" function nil nil [5457 5848])
            ("gnus-add-configuration" function (:arguments ("conf")) nil [5865 6101])
            ("gnus-frame-list" variable nil nil [6103 6131])
            ("gnus-window-to-buffer-helper" function (:arguments ("obj")) nil [6133 6293])
            ("gnus-configure-frame" function (:arguments ("split" "window")) nil [6295 11446])
            ("gnus-frame-split-p" variable nil nil [11448 11479])
            ("gnus-configure-windows" function (:arguments ("setting" "force")) nil [11481 13838])
            ("gnus-delete-windows-in-gnusey-frames" function nil nil [13840 14344])
            ("gnus-all-windows-visible-p" function (:arguments ("split")) nil [14346 15665])
            ("gnus-window-top-edge" function (:arguments ("window")) nil [15667 15787])
            ("gnus-remove-some-windows" function nil nil [15789 16438])
            ("cond" code nil nil [16460 16804])
            ("gnus-get-buffer-window" function (:arguments ("buffer" "frame")) nil [16807 17186])
            ("gnus-win" package nil nil [17188 17207]))          
      :file "gnus-win.el.gz"
      :pointmax 17235
      :fsize 4907
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 16804 . 16805) (symbol 16441 . 16457) (open-paren 16440 . 16441) (close-paren 922 . 923) (symbol 891 . 908) (open-paren 890 . 891)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [3272 3285])
            ("json" include nil nil [3287 3302])
            ("gnus" include nil nil [3303 3318])
            ("gnus-start" include nil nil [3319 3340])
            ("gnus-util" include nil nil [3341 3361])
            ("gnus-topic-alist" variable nil nil [3363 3388])
            ("gnus-group-topic" function (:prototype-flag t) nil [3406 3447])
            ("gnus-sync" customgroup (:user-visible-flag t) nil [3449 3545])
            ("gnus-sync-newsrc-groups" variable (:default-value (quote ("nntp" "nnrss"))) nil [3547 3958])
            ("gnus-sync-newsrc-offsets" variable (:default-value (quote (2 3))) nil [3960 4162])
            ("gnus-sync-global-vars" variable nil nil [4164 4628])
            ("gnus-sync-backend" variable nil nil [4630 4993])
            ("gnus-sync-newsrc-loader" variable nil nil [4995 5059])
            ("gnus-sync-file-encrypt-to" variable nil nil [5061 5263])
            ("gnus-sync-lesync-name" variable (:default-value (system-name)) nil [5265 5404])
            ("gnus-sync-lesync-install-topics" variable (:default-value (quote ask)) nil [5406 5687])
            ("gnus-sync-lesync-props-hash" variable (:default-value (make-hash-table :test (quote equal))) nil [5689 5794])
            ("gnus-sync-lesync-design-prefix" variable (:default-value "/_design/lesync") nil [5796 5894])
            ("gnus-sync-lesync-security-object" variable (:default-value "/_security") nil [5896 5993])
            ("gnus-sync-lesync-parse" function nil nil [5995 6304])
            ("gnus-sync-lesync-call" function (:arguments ("url" "method" "headers" "kvdata")) nil [6306 6864])
            ("gnus-sync-lesync-PUT" function (:arguments ("url" "headers" "data")) nil [6866 6972])
            ("gnus-sync-lesync-POST" function (:arguments ("url" "headers" "data")) nil [6974 7082])
            ("gnus-sync-lesync-GET" function (:arguments ("url" "headers" "data")) nil [7084 7190])
            ("gnus-sync-lesync-DELETE" function (:arguments ("url" "headers" "data")) nil [7192 7304])
            ("gnus-sync-json-alist-p" function (:arguments ("list")) nil [7428 7646])
            ("gnus-sync-json-plist-p" function (:arguments ("list")) nil [7770 8040])
            ("gnus-sync-lesync-setup" function (:arguments ("url" "user" "password" "salt" "reader" "admin")) nil [8194 12838])
            ("gnus-sync-lesync-find-prop" function (:arguments ("prop" "url" "key")) nil [12840 13166])
            ("gnus-sync-lesync-set-prop" function (:arguments ("prop" "key" "val")) nil [13168 13382])
            ("gnus-sync-lesync-get-prop" function (:arguments ("prop" "key")) nil [13384 13560])
            ("gnus-sync-deep-print" function (:arguments ("data")) nil [13562 13867])
            ("gnus-sync-newsrc-loader-builder" function (:arguments ("only-modified")) nil [13869 14501])
            ("gnus-sync-range2invlist" function (:arguments ("ranges")) nil [14624 15099])
            ("gnus-sync-invlist2range" function (:arguments ("inv")) nil [15300 15792])
            ("gnus-sync-position" function (:arguments ("search" "list" "test")) nil [15794 16114])
            ("gnus-sync-topic-group-position" function (:arguments ("group" "topic-name")) nil [16116 16254])
            ("gnus-sync-fix-topic-group-position" function (:arguments ("group" "topic-name" "position")) nil [16256 16925])
            ("gnus-sync-lesync-pre-save-group-entry" function (:arguments ("url" "nentry" "passed-props")) nil [16927 18899])
            ("gnus-sync-lesync-post-save-group-entry" function (:arguments ("url" "entry")) nil [18901 20104])
            ("gnus-sync-lesync-groups-builder" function (:arguments ("url")) nil [20106 20277])
            ("gnus-sync-subscribe-group" function (:arguments ("name")) nil [20279 20423])
            ("gnus-sync-lesync-read-group-entry" function (:arguments ("url" "name" "entry" "passed-props")) nil [20425 22896])
            ("declare-function" code nil nil [22898 23016])
            ("declare-function" code nil nil [23017 23076])
            ("gnus-sync-lesync-install-group-entry" function (:arguments ("name")) nil [23078 25893])
            ("gnus-sync-lesync-delete-group" function
               (:user-visible-flag t
                :arguments ("url" "name"))
                nil [25986 26521])
            ("gnus-sync-lesync-normalize-group-entry" function (:arguments ("entry" "passed-props")) nil [26857 27974])
            ("gnus-sync-save" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [27976 32940])
            ("gnus-sync-read" function
               (:user-visible-flag t
                :arguments ("subscribe-all"))
                nil [32942 35521])
            ("gnus-sync-initialize" function (:user-visible-flag t) nil [35538 35702])
            ("gnus-sync-install-hooks" function (:user-visible-flag t) nil [35719 35963])
            ("gnus-sync-unload-hook" function (:user-visible-flag t) nil [35965 36098])
            ("add-hook" code nil nil [36100 36156])
            ("when" code nil nil [36158 36205])
            ("gnus-sync" package nil nil [36207 36227]))          
      :file "gnus-sync.el.gz"
      :pointmax 36256
      :fsize 9958
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 3285 . 3286) (symbol 3254 . 3271) (open-paren 3253 . 3254)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1805 1818])
            ("when" code nil nil [1841 1892])
            ("gnus-util" include nil nil [1921 1941])
            ("gnus" include nil nil [1942 1957])
            ("gnus-undo" customgroup (:user-visible-flag t) nil [1959 2027])
            ("gnus-undo-limit" variable (:default-value 2000) nil [2029 2143])
            ("gnus-undo-mode" variable nil nil [2145 2502])
            ("gnus-undo-mode-hook" variable nil nil [2504 2622])
            ("gnus-undo-actions" variable nil nil [2649 2679])
            ("gnus-undo-boundary" variable (:default-value t) nil [2680 2709])
            ("gnus-undo-last" variable nil nil [2710 2737])
            ("gnus-undo-boundary-inhibit" variable nil nil [2738 2777])
            ("gnus-undo-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map "\237" gnus-undo "" gnus-undo "u" gnus-undo [(control /)] gnus-undo) map)) nil [2807 3100])
            ("gnus-undo-make-menu-bar" function nil nil [3102 3330])
            ("define-minor-mode" code nil nil [3332 3807])
            ("gnus-disable-undo" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [3835 4025])
            ("gnus-undo-boundary" function nil nil [4027 4194])
            ("gnus-undo-force-boundary" function nil nil [4196 4321])
            ("gnus-undo-register" function (:arguments ("form")) nil [4323 4535])
            ("put" code nil nil [4537 4586])
            ("put" code nil nil [4587 4638])
            ("gnus-undo-register-1" function (:arguments ("function")) nil [4640 5398])
            ("gnus-undo" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [5400 6023])
            ("gnus-undo" package nil nil [6025 6045]))          
      :file "gnus-undo.el.gz"
      :pointmax 6074
      :fsize 2326
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1892 . 1893) (symbol 1821 . 1838) (open-paren 1820 . 1821) (close-paren 1818 . 1819) (symbol 1787 . 1804) (open-paren 1786 . 1787)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1379 1392])
            ("gnus" include nil nil [1395 1410])
            ("gnus-art" include nil nil [1411 1430])
            ("gnus-picon-news-directories" variable
               (:user-visible-flag t
                :default-value (quote ("news")))
                nil [1453 1605])
            ("gnus-picon-user-directories" variable
               (:user-visible-flag t
                :default-value (quote ("users" "usenix" "local" "misc")))
                nil [1607 1778])
            ("gnus-picon-domain-directories" variable
               (:user-visible-flag t
                :default-value (quote ("domains")))
                nil [1780 1987])
            ("gnus-picon-file-types" variable
               (:user-visible-flag t
                :default-value (let ((types (list "xbm"))) (when (gnus-image-type-available-p (quote gif)) (push "gif" types)) (when (gnus-image-type-available-p (quote xpm)) (push "xpm" types)) types))
                nil [1989 2301])
            ("gnus-picon-properties" variable (:default-value (quote (:color-symbols (("None" . "white"))))) nil [2303 2477])
            ("gnus-picon-style" variable (:default-value (quote inline)) nil [2479 2792])
            ("gnus-picon-inhibit-top-level-domains" variable (:default-value t) nil [2794 2988])
            ("gnus-picon-glyph-alist" variable nil nil [3015 3144])
            ("gnus-picon-cache" variable nil nil [3145 3174])
            ("gnus-picon-split-address" function (:arguments ("address")) nil [3192 3445])
            ("gnus-picon-find-face" function (:arguments ("address" "directories" "exact")) nil [3447 4311])
            ("gnus-picon-find-image" function (:arguments ("directory")) nil [4313 4577])
            ("gnus-picon-insert-glyph" function (:arguments ("glyph" "category" "nostring")) nil [4579 5054])
            ("gnus-picon-create-glyph" function (:arguments ("file")) nil [5056 5280])
            ("declare-function" code nil nil [5330 5399])
            ("gnus-picon-transform-address" function (:arguments ("header" "category")) nil [5401 7807])
            ("gnus-picon-transform-newsgroups" function (:arguments ("header")) nil [7809 8889])
            ("gnus-treat-from-picon" function (:user-visible-flag t) nil [9039 9409])
            ("gnus-treat-mail-picon" function (:user-visible-flag t) nil [9426 9855])
            ("gnus-treat-newsgroups-picon" function (:user-visible-flag t) nil [9872 10335])
            ("gnus-picon" package nil nil [10337 10358]))          
      :file "gnus-picon.el.gz"
      :pointmax 10388
      :fsize 3356
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1392 . 1393) (symbol 1361 . 1378) (open-paren 1360 . 1361)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [2906 2919])
            ("gnus" include nil nil [2922 2937])
            ("gnus-int" include nil nil [2938 2957])
            ("gnus-sum" include nil nil [2958 2977])
            ("gnus-art" include nil nil [2978 2997])
            ("gnus-util" include nil nil [2998 3018])
            ("nnmail" include nil nil [3019 3036])
            ("easymenu" include nil nil [3037 3056])
            ("registry" include nil nil [3057 3076])
            ("when" code nil nil [3183 3264])
            ("gnus-adaptive-word-syntax-table" variable nil nil [3266 3306])
            ("gnus-registry-dirty" variable (:default-value t) nil [3308 3389])
            ("gnus-registry" customgroup (:user-visible-flag t) nil [3391 3475])
            ("gnus-registry-marks" variable (:default-value (quote ((Important :char 105 :image "summary_important") (Work :char 119 :image "summary_work") (Personal :char 112 :image "summary_personal") (To-Do :char 116 :image "summary_todo") (Later :char 108 :image "summary_later")))) nil [3477 4090])
            ("gnus-registry-default-mark" variable (:default-value (quote To-Do)) nil [4092 4249])
            ("gnus-registry-unfollowed-addresses" variable (:default-value (list (regexp-quote user-mail-address))) nil [4251 4620])
            ("gnus-registry-unfollowed-groups" variable (:default-value (quote ("delayed$" "drafts$" "queue$" "INBOX$" "^nnmairix:" "archive"))) nil [4622 5126])
            ("gnus-registry-install" variable (:default-value (quote ask)) nil [5128 5379])
            ("gnus-registry-enabled" variable nil nil [5381 5415])
            ("gnus-summary-misc-menu" variable nil nil [5417 5448])
            ("gnus-registry-misc-menus" variable nil nil [5482 5519])
            ("make-obsolete-variable" code nil nil [5552 5614])
            ("make-obsolete-variable" code nil nil [5615 5686])
            ("make-obsolete-variable" code nil nil [5687 5754])
            ("make-obsolete-variable" code nil nil [5755 5819])
            ("make-obsolete-variable" code nil nil [5820 5899])
            ("make-obsolete-variable" code nil nil [5932 6001])
            ("gnus-registry-track-extra" variable (:default-value (quote (subject sender recipient))) nil [6003 6488])
            ("gnus-registry-split-strategy" variable nil nil [6490 7498])
            ("gnus-registry-minimum-subject-length" variable (:default-value 5) nil [7500 7661])
            ("gnus-registry-extra-entries-precious" variable (:default-value (quote (mark))) nil [7663 8071])
            ("gnus-registry-cache-file" variable (:default-value (nnheader-concat (or gnus-dribble-directory gnus-home-directory "~/") ".gnus.registry.eieio")) nil [8073 8298])
            ("gnus-registry-max-entries" variable nil nil [8300 8536])
            ("gnus-registry-prune-factor" variable (:default-value 0.1) nil [8538 9112])
            ("gnus-registry-default-sort-function" variable (:default-value (function gnus-registry-sort-by-creation-time)) nil [9114 9476])
            ("gnus-registry-sort-by-creation-time" function (:arguments ("l" "r")) nil [9478 9700])
            ("gnus-registry-fixup-registry" function (:arguments ("db")) nil [9702 10380])
            ("gnus-registry-make-db" function (:arguments ("file")) nil [10382 10845])
            ("gnus-registry-db" variable (:default-value (gnus-registry-make-db)) nil [10847 10956])
            ("gnus-registry-remake-db" function
               (:user-visible-flag t
                :arguments ("forsure"))
                nil [10996 11357])
            ("gnus-registry-load" function (:user-visible-flag t) nil [11359 12257])
            ("gnus-registry-read" function (:arguments ("file")) nil [12259 12754])
            ("gnus-registry-save" function
               (:user-visible-flag t
                :arguments ("file" "db"))
                nil [12756 13333])
            ("gnus-registry-remove-ignored" function nil nil [13335 13870])
            ("gnus-registry-action" function (:arguments ("action" "data-header" "from" "to" "method")) nil [13914 14871])
            ("gnus-registry-spool-action" function (:arguments ("id" "group" "subject" "sender" "recipients")) nil [14873 15622])
            ("gnus-registry-handle-action" function (:arguments ("id" "from" "to" "subject" "sender" "recipients")) nil [15624 17228])
            ("gnus-registry-split-fancy-with-parent" function nil nil [17356 19478])
            ("gnus-registry--split-fancy-with-parent-internal" function (:arguments ("spec" "references" "refstr" "sender" "subject" "recipients" "log-agent")) nil [19480 24694])
            ("gnus-registry-post-process-groups" function (:arguments ("mode" "key" "groups")) nil [24696 27924])
            ("gnus-registry-follow-group-p" function (:arguments ("group")) nil [27926 28361])
            ("gnus-registry-ignore-group-p" function (:arguments ("group")) nil [28612 29635])
            ("gnus-registry-wash-for-keywords" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [29637 30643])
            ("gnus-registry-keywords" function nil nil [30645 30830])
            ("gnus-registry-find-keywords" function (:arguments ("keyword")) nil [30832 31047])
            ("gnus-registry-register-message-ids" function nil nil [31049 31820])
            ("gnus-registry-fetch-message-id-fast" function (:arguments ("article")) nil [31848 32145])
            ("gnus-registry-extract-addresses" function (:arguments ("text")) nil [32147 32814])
            ("gnus-registry-sort-addresses" function (:arguments ("addresses")) nil [32816 33022])
            ("gnus-registry-simplify-subject" function (:arguments ("subject")) nil [33024 33143])
            ("gnus-registry-fetch-simplified-message-subject-fast" function (:arguments ("article")) nil [33145 33574])
            ("gnus-registry-fetch-sender-fast" function (:arguments ("article")) nil [33576 33676])
            ("gnus-registry-fetch-recipients-fast" function (:arguments ("article")) nil [33678 33912])
            ("gnus-registry-fetch-header-fast" function (:arguments ("article" "header")) nil [33914 34282])
            ("gnus-registry-do-marks" function (:arguments ("type" "function")) nil [34307 34725])
            ("gnus-registry--set/remove-mark" function (:arguments ("mark" "remove" "articles")) nil [34830 35923])
            ("gnus-registry-install-shortcuts" function nil nil [35985 38574])
            ("make-obsolete" code nil nil [38576 38689])
            ("defalias" code nil nil [38693 38781])
            ("gnus-registry-article-marks-to-chars" function (:arguments ("headers")) nil [38882 39295])
            ("gnus-registry-article-marks-to-names" function (:arguments ("headers")) nil [39396 39666])
            ("gnus-registry-read-mark" function nil nil [39668 40017])
            ("gnus-registry-set-article-mark" function
               (:user-visible-flag t
                :arguments ("articles"))
                nil [40019 40311])
            ("gnus-registry-remove-article-mark" function
               (:user-visible-flag t
                :arguments ("articles"))
                nil [40313 40609])
            ("gnus-registry-set-article-mark-internal" function (:arguments ("mark" "articles" "remove" "show-message")) nil [40611 41402])
            ("gnus-registry-get-article-marks" function
               (:user-visible-flag t
                :arguments ("articles"))
                nil [41404 41938])
            ("gnus-registry-group-count" function (:arguments ("id")) nil [41940 42094])
            ("gnus-registry-get-or-make-entry" function (:arguments ("id")) nil [42096 42513])
            ("gnus-registry-delete-entries" function (:arguments ("idlist")) nil [42515 42608])
            ("gnus-registry-get-id-key" function (:arguments ("id" "key")) nil [42610 42712])
            ("gnus-registry-set-id-key" function (:arguments ("id" "key" "vals")) nil [42714 43003])
            ("gnus-registry-insert" function (:arguments ("db" "id" "entry")) nil [43005 43304])
            ("gnus-registry-import-eld" function (:arguments ("file")) nil [43306 45135])
            ("gnus-registry-initialize" function (:user-visible-flag t) nil [45152 45375])
            ("gnus-registry-install-hooks" function (:user-visible-flag t) nil [45430 46007])
            ("gnus-registry-unload-hook" function (:user-visible-flag t) nil [46009 46609])
            ("add-hook" code nil nil [46611 46675])
            ("gnus-registry-install-p" function (:user-visible-flag t) nil [46677 47338])
            ("gnus-try-warping-via-registry" function (:user-visible-flag t) nil [47381 49373])
            ("gnus-registry-remove-extra-data" function
               (:user-visible-flag t
                :arguments ("extra"))
                nil [49375 50234])
            ("gnus-registry" package nil nil [50259 50283]))          
      :file "gnus-registry.el.gz"
      :pointmax 50316
      :fsize 13224
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((symbol 38690 . 38691) (close-paren 2919 . 2920) (symbol 2888 . 2905) (open-paren 2887 . 2888)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("ignore-errors" code nil nil [1114 1156])
            ("gnus-sum" include nil nil [1157 1176])
            ("gnus-group" include nil nil [1177 1198])
            ("gnus-int" include nil nil [1199 1218])
            ("gnus-art" include nil nil [1219 1238])
            ("gnus-util" include nil nil [1239 1259])
            ("ignore-errors" code nil nil [1260 1304])
            ("gnus-fun" include nil nil [1323 1342])
            ("gnus-notifications" customgroup (:user-visible-flag t) nil [1344 1457])
            ("gnus-notifications-use-google-contacts" variable (:default-value t) nil [1459 1600])
            ("gnus-notifications-use-gravatar" variable (:default-value t) nil [1602 1729])
            ("gnus-notifications-minimum-level" variable (:default-value 1) nil [1731 1973])
            ("gnus-notifications-timeout" variable nil nil [1975 2213])
            ("gnus-notifications-sent" variable nil nil [2215 2283])
            ("gnus-notifications-id-to-msg" variable nil nil [2285 2365])
            ("gnus-notifications-action" function (:arguments ("id" "key")) nil [2367 3013])
            ("gnus-notifications-notify" function (:arguments ("from" "subject" "photo-file")) nil [3015 3727])
            ("declare-function" code nil nil [3729 3812])
            ("gnus-notifications-get-photo" function (:arguments ("mail-address")) nil [3814 4485])
            ("gnus-notifications-get-photo-file" function (:arguments ("mail-address")) nil [4487 4979])
            ("gnus-notifications" function nil nil [4996 8073])
            ("gnus-notifications" package nil nil [8075 8104]))          
      :file "gnus-notifications.el.gz"
      :pointmax 8142
      :fsize 2548
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1076 1089])
            ("gnus-art" include nil nil [1092 1111])
            ("mm-decode" include nil nil [1131 1151])
            ("mm-url" include nil nil [1154 1171])
            ("url" include nil nil [1172 1186])
            ("url-cache" include nil nil [1187 1207])
            ("xml" include nil nil [1208 1222])
            ("browse-url" include nil nil [1223 1244])
            ("mm-util" include nil nil [1245 1263])
            ("unless" code nil nil [1282 1329])
            ("gnus-html-image-cache-ttl" variable (:default-value (days-to-time 7)) nil [1332 1733])
            ("gnus-html-image-automatic-caching" variable (:default-value t) nil [1735 1885])
            ("gnus-html-frame-width" variable (:default-value 70) nil [1887 2020])
            ("gnus-max-image-proportion" variable (:default-value 0.9) nil [2022 2400])
            ("gnus-html-image-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "u" (quote gnus-article-copy-string)) (define-key map "i" (quote gnus-html-insert-image)) (define-key map "v" (quote gnus-html-browse-url)) map)) nil [2402 2622])
            ("gnus-html-displayed-image-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "a" (quote gnus-html-show-alt-text)) (define-key map "i" (quote gnus-html-browse-image)) (define-key map "" (quote gnus-html-browse-url)) (define-key map "u" (quote gnus-article-copy-string)) (define-key map [tab] (quote widget-forward)) map)) nil [2624 2948])
            ("defalias" code nil nil [2970 3513])
            ("gnus-html-encode-url" function (:arguments ("url")) nil [3516 3609])
            ("gnus-html-cache-expired" function (:arguments ("url" "ttl")) nil [3611 4037])
            ("gnus-article-html" function (:arguments ("handle")) nil [4054 5257])
            ("gnus-article-mouse-face" variable nil nil [5259 5291])
            ("gnus-html-pre-wash" function nil nil [5293 5548])
            ("gnus-html-wash-images" function nil nil [5550 8743])
            ("gnus-html-display-image" function (:arguments ("url" "start" "end" "alt-text")) nil [8745 9478])
            ("gnus-html-wash-tags" function nil nil [9480 12778])
            ("gnus-html-insert-image" function
               (:user-visible-flag t
                :arguments ("args"))
                nil [12780 12958])
            ("gnus-html-show-alt-text" function (:user-visible-flag t) nil [12960 13118])
            ("gnus-html-browse-image" function (:user-visible-flag t) nil [13120 13257])
            ("gnus-html-browse-url" function (:user-visible-flag t) nil [13259 13560])
            ("gnus-html-schedule-image-fetching" function (:arguments ("buffer" "image")) nil [13562 14025])
            ("gnus-html-image-fetched" function (:arguments ("status" "buffer" "image")) nil [14027 14637])
            ("gnus-html-get-image-data" function (:arguments ("url")) nil [14639 14981])
            ("gnus-html-maximum-image-size" function nil nil [14983 15473])
            ("declare-function" code nil nil [15509 15578])
            ("gnus-html-put-image" function (:arguments ("data" "url" "alt-text")) nil [15580 18456])
            ("gnus-html-image-url-blocked-p" function (:arguments ("url" "blocked-images")) nil [18458 18912])
            ("gnus-html-prefetch-images" function (:arguments ("summary")) nil [18929 19647])
            ("gnus-html" package nil nil [19649 19669]))          
      :file "gnus-html.el.gz"
      :pointmax 19698
      :fsize 5785
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 3513 . 3514) (symbol 2951 . 2967) (open-paren 2950 . 2951) (close-paren 1329 . 1330) (symbol 1265 . 1281) (open-paren 1264 . 1265) (close-paren 1151 . 1152) (symbol 1113 . 1130) (open-paren 1112 . 1113) (close-paren 1089 . 1090) (symbol 1058 . 1075) (open-paren 1057 . 1058)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus-sum" include nil nil [1766 1785])
            ("gnus-bookmark" customgroup (:user-visible-flag t) nil [2385 2483])
            ("gnus-bookmark-default-file" variable (:default-value (cond ((file-exists-p "~/.gnus.bmk") "~/.gnus.bmk") (t (nnheader-concat gnus-directory "bookmarks.el")))) nil [2485 2766])
            ("gnus-bookmark-file-coding-system" variable (:default-value (if (mm-coding-system-p (quote iso-2022-7bit)) (quote iso-2022-7bit))) nil [2768 2995])
            ("gnus-bookmark-sort-flag" variable (:default-value t) nil [2997 3254])
            ("gnus-bookmark-bmenu-toggle-infos" variable (:default-value t) nil [3256 3624])
            ("gnus-bookmark-bmenu-file-column" variable (:default-value 30) nil [3626 3904])
            ("gnus-bookmark-use-annotations" variable nil nil [3906 4055])
            ("gnus-bookmark-bookmark-inline-details" variable (:default-value (quote (author))) nil [4057 4486])
            ("gnus-bookmark-bookmark-details" variable (:default-value (quote (author subject date group annotation))) nil [4488 5014])
            ("gnus-bookmark-menu-heading" variable
               (:default-value (quote ((t (:inherit font-lock-type-face))))
                :type "face")
                nil [5016 5215])
            ("gnus-bookmark-end-of-version-stamp-marker" variable
               (:constant-flag t
                :default-value "-*- End Of Bookmark File Format Version Stamp -*-
")
                nil [5217 5401])
            ("gnus-bookmark-file-format-version" variable (:constant-flag t) nil [5403 5549])
            ("gnus-bookmark-alist" variable nil nil [5551 5907])
            ("gnus-bookmark-mouse-available-p" function nil nil [5909 6082])
            ("gnus-bookmark-remove-properties" function (:arguments ("string")) nil [6084 6238])
            ("gnus-bookmark-set" function (:user-visible-flag t) nil [6255 7390])
            ("gnus-bookmark-make-record" function (:arguments ("group" "message-id" "author" "date" "subject" "annotation")) nil [7392 7975])
            ("gnus-bookmark-set-bookmark-name" function (:arguments ("group" "author" "subject")) nil [7977 8631])
            ("gnus-bookmark-write-file" function (:user-visible-flag t) nil [8633 9487])
            ("gnus-bookmark-insert-file-format-version-stamp" function nil nil [9489 10093])
            ("gnus-bookmark-jump" function
               (:user-visible-flag t
                :arguments ("bmk-name"))
                nil [10110 11047])
            ("gnus-bookmark-already-loaded" variable nil nil [11049 11090])
            ("gnus-bookmark-alist-from-buffer" function nil nil [11092 11589])
            ("gnus-bookmark-load" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [11591 12348])
            ("gnus-bookmark-maybe-load-default-file" function nil nil [12350 12657])
            ("gnus-bookmark-maybe-sort-alist" function nil nil [12659 13000])
            ("gnus-bookmark-bmenu-list" function (:user-visible-flag t) nil [13017 14679])
            ("gnus-bookmark-bmenu-surreptitiously-rebuild-list" function nil nil [14681 14955])
            ("gnus-bookmark-get-annotation" function (:arguments ("bookmark")) nil [14957 15136])
            ("gnus-bookmark-get-bookmark" function (:arguments ("bookmark")) nil [15138 15363])
            ("gnus-bookmark-get-bookmark-record" function (:arguments ("bookmark")) nil [15365 15585])
            ("gnus-bookmark-name-from-full-record" function (:arguments ("full-record")) nil [15587 15735])
            ("gnus-bookmark-bmenu-bookmark-column" variable nil nil [15737 15785])
            ("gnus-bookmark-bmenu-hidden-bookmarks" variable nil nil [15786 15834])
            ("gnus-bookmark-bmenu-mode-map" variable nil nil [15835 15876])
            ("if" code nil nil [15878 17513])
            ("put" code nil nil [17594 17646])
            ("defalias" code nil nil [17693 17755])
            ("define-derived-mode" code nil nil [17757 19566])
            ("gnus-bookmark-bmenu-toggle-infos" variable nil nil [19598 19643])
            ("gnus-bookmark-bmenu-toggle-infos" function
               (:user-visible-flag t
                :arguments ("show"))
                nil [19645 20201])
            ("gnus-bookmark-bmenu-show-infos" function (:arguments ("force")) nil [20203 21328])
            ("gnus-bookmark-insert-details" function (:arguments ("bmk-name")) nil [21330 21858])
            ("gnus-bookmark-kill-line" function (:arguments ("newline-too")) nil [21860 22152])
            ("gnus-bookmark-get-details" function (:arguments ("bmk-name" "details-list")) nil [22154 22433])
            ("gnus-bookmark-bmenu-hide-infos" function (:arguments ("force")) nil [22435 23875])
            ("gnus-bookmark-bmenu-check-position" function nil nil [23877 24340])
            ("gnus-bookmark-bmenu-bookmark" function nil nil [24342 25244])
            ("gnus-bookmark-show-details" function (:arguments ("bookmark")) nil [25246 25832])
            ("gnus-bookmark-bmenu-show-details" function (:user-visible-flag t) nil [25834 26098])
            ("gnus-bookmark-bmenu-mark" function (:user-visible-flag t) nil [26100 26481])
            ("gnus-bookmark-bmenu-unmark" function
               (:user-visible-flag t
                :arguments ("backup"))
                nil [26483 27116])
            ("gnus-bookmark-bmenu-backup-unmark" function (:user-visible-flag t) nil [27118 27439])
            ("gnus-bookmark-bmenu-delete" function (:user-visible-flag t) nil [27441 27887])
            ("gnus-bookmark-bmenu-delete-backwards" function (:user-visible-flag t) nil [27889 28304])
            ("gnus-bookmark-bmenu-select" function (:user-visible-flag t) nil [28306 28790])
            ("gnus-bookmark-bmenu-select-by-mouse" function (:arguments ("event")) nil [28792 28920])
            ("gnus-bookmark-bmenu-load" function (:user-visible-flag t) nil [28922 29248])
            ("gnus-bookmark-bmenu-execute-deletions" function (:user-visible-flag t) nil [29250 30568])
            ("gnus-bookmark-delete" function (:arguments ("bookmark" "batch")) nil [30570 31305])
            ("gnus-bookmark" package nil nil [31307 31331]))          
      :file "gnus-bookmark.el.gz"
      :pointmax 31364
      :fsize 8135
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [944 957])
            ("gnus" include nil nil [960 975])
            ("gnus-art" include nil nil [976 995])
            ("gnus-range" include nil nil [996 1017])
            ("gnus-kill-file-mode-hook" variable nil nil [1019 1133])
            ("gnus-kill-expiry-days" variable
               (:user-visible-flag t
                :default-value 7)
                nil [1135 1303])
            ("gnus-kill-save-kill-file" variable (:user-visible-flag t) nil [1305 1449])
            ("gnus-winconf-kill-file" variable nil nil [1451 1534])
            ("gnus-kill-killed" variable
               (:user-visible-flag t
                :default-value t)
                nil [1536 1833])
            ("gnus-raise" function (:arguments ("field" "expression" "level")) nil [1838 1972])
            ("gnus-lower" function (:arguments ("field" "expression" "level")) nil [1974 2112])
            ("gnus-kill-file-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map emacs-lisp-mode-map) (gnus-define-keymap map "" gnus-kill-file-kill-by-subject "" gnus-kill-file-kill-by-author "" gnus-kill-file-kill-by-thread "" gnus-kill-file-kill-by-xref "" gnus-kill-file-apply-buffer "" gnus-kill-file-apply-last-sexp "" gnus-kill-file-exit) map)) nil [2147 2634])
            ("define-derived-mode" code nil nil [2636 5528])
            ("gnus-kill-file-edit-file" function
               (:user-visible-flag t
                :arguments ("newsgroup"))
                nil [5530 6584])
            ("gnus-kill-set-kill-buffer" function nil nil [6639 6852])
            ("gnus-kill-file-enter-kill" function (:arguments ("field" "regexp" "dont-move")) nil [6854 7337])
            ("gnus-kill-file-kill-by-subject" function (:user-visible-flag t) nil [7339 7602])
            ("gnus-kill-file-kill-by-author" function (:user-visible-flag t) nil [7604 7831])
            ("gnus-kill-file-kill-by-thread" function (:user-visible-flag t) nil [7833 8062])
            ("gnus-kill-file-kill-by-xref" function (:user-visible-flag t) nil [8064 8615])
            ("gnus-kill-file-raise-followups-to-author" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [8617 9306])
            ("gnus-kill-file-apply-buffer" function (:user-visible-flag t) nil [9308 9632])
            ("gnus-kill-file-apply-string" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [9634 9914])
            ("gnus-kill-file-apply-last-sexp" function (:user-visible-flag t) nil [9916 10448])
            ("gnus-kill-file-exit" function (:user-visible-flag t) nil [10450 11086])
            ("gnus-expunge" function (:arguments ("marks")) nil [11107 11264])
            ("gnus-apply-kill-file-unless-scored" function nil nil [11266 11813])
            ("gnus-apply-kill-file-internal" function nil nil [11815 13839])
            ("gnus-kill-parse-gnus-kill-file" function nil nil [13867 14542])
            ("gnus-kill-parse-rn-kill-file" function nil nil [14569 15628])
            ("gnus-kill" function (:arguments ("field" "regexp" "exe-command" "all" "silent")) nil [15731 18127])
            ("gnus-pp-gnus-kill" function (:arguments ("object")) nil [18129 19104])
            ("gnus-execute-1" function (:arguments ("function" "regexp" "form" "header")) nil [19106 20449])
            ("gnus-execute" function (:arguments ("field" "regexp" "form" "backward" "unread")) nil [20451 22258])
            ("defalias" code nil nil [22275 22320])
            ("gnus-batch-score" function (:user-visible-flag t) nil [22336 23573])
            ("gnus-kill" package nil nil [23575 23595]))          
      :file "gnus-kill.el.gz"
      :pointmax 23624
      :fsize 7357
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 957 . 958) (symbol 926 . 943) (open-paren 925 . 926)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [883 898])
            ("gnus-sum" include nil nil [899 918])
            ("message" include nil nil [919 937])
            ("gnus-msg" include nil nil [938 957])
            ("nndraft" include nil nil [958 976])
            ("gnus-agent" include nil nil [977 998])
            ("cl" include nil nil [1018 1031])
            ("when" code nil nil [1054 1105])
            ("gnus-draft-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (gnus-define-keys map "Dt" gnus-draft-toggle-sending "e" gnus-draft-edit-message "De" gnus-draft-edit-message "Ds" gnus-draft-send-message "DS" gnus-draft-send-all-messages) map)) nil [1156 1478])
            ("gnus-draft-make-menu-bar" function nil nil [1480 1916])
            ("define-minor-mode" code nil nil [1918 2361])
            ("gnus-draft-toggle-sending" function
               (:user-visible-flag t
                :arguments ("article"))
                nil [2377 2850])
            ("gnus-draft-edit-message" function (:user-visible-flag t) nil [2852 3774])
            ("gnus-draft-send-message" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [3776 4435])
            ("gnus-draft-send" function (:arguments ("article" "group" "interactive")) nil [4437 7042])
            ("gnus-draft-send-all-messages" function (:user-visible-flag t) nil [7044 7263])
            ("gnus-group-send-queue" function (:user-visible-flag t) nil [7265 8139])
            ("gnus-draft-reminder" function (:user-visible-flag t) nil [8156 8577])
            ("gnus-draft-setup-hook" variable nil nil [8579 8728])
            ("gnus-draft-setup" function (:arguments ("narticle" "group" "restore" "dont-pop")) nil [8731 10657])
            ("gnus-draft-article-sendable-p" function (:arguments ("article")) nil [10659 10792])
            ("gnus-draft-check-draft-articles" function (:arguments ("articles")) nil [10794 11726])
            ("gnus-draft-clear-marks" function nil nil [11728 11865])
            ("gnus-draft" package nil nil [11867 11888]))          
      :file "gnus-draft.el.gz"
      :pointmax 11918
      :fsize 3793
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1105 . 1106) (symbol 1034 . 1051) (open-paren 1033 . 1034) (close-paren 1031 . 1032) (symbol 1000 . 1017) (open-paren 999 . 1000)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [906 919])
            ("gnus" include nil nil [922 937])
            ("message" include nil nil [938 956])
            ("gnus-range" include nil nil [957 978])
            ("gnus-run-hook-with-args" function (:prototype-flag t) nil [980 1027])
            ("gnus-agent-expire" function (:prototype-flag t) nil [1028 1070])
            ("gnus-agent-regenerate-group" function (:prototype-flag t) nil [1071 1123])
            ("gnus-agent-read-servers-validate-native" function (:prototype-flag t) nil [1124 1188])
            ("gnus-agent-possibly-synchronize-flags-server" function (:prototype-flag t) nil [1189 1258])
            ("gnus-open-server-hook" variable nil nil [1260 1399])
            ("gnus-after-set-mark-hook" variable nil nil [1401 1547])
            ("gnus-before-update-mark-hook" variable nil nil [1549 1704])
            ("gnus-server-unopen-status" variable nil nil [1706 2176])
            ("gnus-nntp-server" variable nil nil [2178 2337])
            ("make-obsolete-variable" code nil nil [2338 2407])
            ("gnus-internal-registry-spool-current-method" variable nil nil [2409 2507])
            ("gnus-server-opened" function (:arguments ("gnus-command-method")) nil [2510 2931])
            ("gnus-status-message" function (:arguments ("gnus-command-method")) nil [2933 3406])
            ("gnus-start-news-server" function (:arguments ("confirm")) nil [3442 5888])
            ("gnus-check-group" function (:arguments ("group")) nil [5890 6106])
            ("gnus-check-server" function (:arguments ("method" "silent")) nil [6108 7130])
            ("gnus-get-function" function (:arguments ("method" "function" "noerror")) nil [7132 8257])
            ("gnus-method-denied-p" function (:arguments ("method")) nil [8311 8412])
            ("gnus-backend-trace" variable nil nil [8414 8445])
            ("gnus-backend-trace-elapsed" variable nil nil [8446 8485])
            ("gnus-backend-trace" function (:arguments ("type" "form")) nil [8487 8927])
            ("gnus-open-server" function (:arguments ("gnus-command-method")) nil [8929 11938])
            ("gnus-close-server" function (:arguments ("gnus-command-method")) nil [11940 12248])
            ("gnus-request-list" function (:arguments ("gnus-command-method")) nil [12250 12563])
            ("gnus-finish-retrieve-group-infos" function (:arguments ("gnus-command-method" "infos" "data")) nil [12565 13069])
            ("gnus-retrieve-group-data-early" function (:arguments ("gnus-command-method" "infos")) nil [13071 13438])
            ("gnus-request-list-newsgroups" function (:arguments ("gnus-command-method")) nil [13440 13779])
            ("gnus-request-newgroups" function (:arguments ("date" "gnus-command-method")) nil [13781 14164])
            ("gnus-request-regenerate" function (:arguments ("gnus-command-method")) nil [14166 14493])
            ("gnus-request-compact-group" function (:arguments ("group")) nil [14495 14800])
            ("gnus-request-compact" function (:arguments ("gnus-command-method")) nil [14802 15123])
            ("gnus-request-group" function (:arguments ("group" "dont-check" "gnus-command-method" "info")) nil [15125 15672])
            ("gnus-request-group-description" function (:arguments ("group")) nil [15674 16036])
            ("gnus-request-group-scan" function (:arguments ("group" "info")) nil [16038 16406])
            ("gnus-close-group" function (:arguments ("group")) nil [16408 16679])
            ("gnus-retrieve-headers" function (:arguments ("articles" "group" "fetch-old")) nil [16681 17396])
            ("gnus-retrieve-articles" function (:arguments ("articles" "group")) nil [17398 17694])
            ("gnus-retrieve-groups" function (:arguments ("groups" "gnus-command-method")) nil [17696 18042])
            ("gnus-request-type" function (:arguments ("group" "article")) nil [18044 18442])
            ("gnus-request-update-group-status" function (:arguments ("group" "status")) nil [18444 18936])
            ("gnus-request-set-mark" function (:arguments ("group" "action")) nil [18938 19420])
            ("gnus-request-update-mark" function (:arguments ("group" "article" "mark")) nil [19422 19933])
            ("gnus-request-article" function (:arguments ("article" "group" "buffer")) nil [19935 20363])
            ("gnus-request-thread" function (:arguments ("header" "group")) nil [20365 20674])
            ("gnus-select-group-with-message-id" function (:arguments ("group" "message-id")) nil [20676 22452])
            ("gnus-simplify-group-name" function (:arguments ("group")) nil [22454 22702])
            ("gnus-warp-to-article" function (:user-visible-flag t) nil [22704 23310])
            ("gnus-request-head" function (:arguments ("article" "group")) nil [23312 24404])
            ("gnus-request-body" function (:arguments ("article" "group")) nil [24406 25404])
            ("gnus-request-post" function (:arguments ("gnus-command-method")) nil [25406 25720])
            ("gnus-request-expunge-group" function (:arguments ("group" "gnus-command-method")) nil [25722 26118])
            ("gnus-request-scan" function (:arguments ("group" "gnus-command-method")) nil [26120 26783])
            ("gnus-request-update-info" function (:arguments ("info" "gnus-command-method")) nil [26785 27216])
            ("gnus-request-marks" function (:arguments ("info" "gnus-command-method")) nil [27218 28178])
            ("gnus-request-expire-articles" function (:arguments ("articles" "group" "force")) nil [28180 28967])
            ("gnus-request-move-article" function (:arguments ("article" "group" "server" "accept-function" "last" "move-is-internal")) nil [28969 29512])
            ("gnus-request-accept-article" function (:arguments ("group" "gnus-command-method" "last" "no-encode")) nil [29514 30785])
            ("gnus-request-replace-article" function (:arguments ("article" "group" "buffer" "no-encode")) nil [30787 31474])
            ("gnus-request-restore-buffer" function (:arguments ("article" "group")) nil [31476 31808])
            ("gnus-request-create-group" function (:arguments ("group" "gnus-command-method" "args")) nil [31810 32238])
            ("gnus-request-delete-group" function (:arguments ("group" "force")) nil [32240 32624])
            ("gnus-request-rename-group" function (:arguments ("group" "new-name")) nil [32626 33052])
            ("gnus-close-backends" function nil nil [33054 33427])
            ("gnus-asynchronous-p" function (:arguments ("gnus-command-method")) nil [33429 33600])
            ("gnus-remove-denial" function (:arguments ("gnus-command-method")) nil [33602 34023])
            ("gnus-int" package nil nil [34025 34044]))          
      :file "gnus-int.el.gz"
      :pointmax 34072
      :fsize 7690
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 919 . 920) (symbol 888 . 905) (open-paren 887 . 888)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gravatar" include nil nil [871 890])
            ("gnus-art" include nil nil [891 910])
            ("mail-extr" include nil nil [911 931])
            ("gnus-gravatar" customgroup (:user-visible-flag t) nil [983 1052])
            ("gnus-gravatar-size" variable nil nil [1054 1247])
            ("gnus-gravatar-properties" variable (:default-value (quote (:ascent center :relief 1))) nil [1249 1427])
            ("gnus-gravatar-too-ugly" variable (:default-value gnus-article-x-face-too-ugly) nil [1429 1646])
            ("gnus-gravatar-transform-address" function (:arguments ("header" "category" "force")) nil [1648 2537])
            ("gnus-gravatar-insert" function (:arguments ("gravatar" "header" "address" "category")) nil [2539 4224])
            ("gnus-treat-from-gravatar" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [4241 4612])
            ("gnus-treat-mail-gravatar" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [4629 5078])
            ("gnus-gravatar" package nil nil [5080 5104]))          
      :file "gnus-gravatar.el.gz"
      :pointmax 5137
      :fsize 2020
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("url" include nil nil [858 872])
            ("url-cache" include nil nil [873 893])
            ("gravatar" customgroup (:user-visible-flag t) nil [895 965])
            ("gravatar-automatic-caching" variable (:default-value t) nil [967 1085])
            ("gravatar-cache-ttl" variable (:default-value (days-to-time 30)) nil [1157 1295])
            ("gravatar-rating" variable (:default-value "g") nil [1350 1449])
            ("gravatar-size" variable (:default-value 32) nil [1451 1557])
            ("gravatar-base-url" variable
               (:constant-flag t
                :default-value "http://www.gravatar.com/avatar")
                nil [1559 1658])
            ("gravatar-hash" function (:arguments ("mail-address")) nil [1660 1766])
            ("gravatar-build-url" function (:arguments ("mail-address")) nil [1768 2014])
            ("gravatar-cache-expired" function (:arguments ("url")) nil [2016 2469])
            ("gravatar-get-data" function nil nil [2471 2744])
            ("cond" code nil nil [2766 3029])
            ("gravatar-data->image" function nil nil [3032 3253])
            ("help-function-arglist" function (:prototype-flag t) nil [3255 3299])
            ("gravatar-retrieve" function (:arguments ("mail-address" "cb" "cbargs")) nil [3316 4129])
            ("gravatar-retrieve-synchronously" function (:arguments ("mail-address")) nil [4146 4744])
            ("gravatar-retrieved" function (:arguments ("status" "cb" "cbargs")) nil [4747 5119])
            ("gravatar" package nil nil [5121 5140]))          
      :file "gravatar.el.gz"
      :pointmax 5168
      :fsize 1902
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 3029 . 3030) (symbol 2747 . 2763) (open-paren 2746 . 2747)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nndiary" include nil nil [1239 1257])
            ("message" include nil nil [1258 1276])
            ("gnus-art" include nil nil [1277 1296])
            ("gnus-diary" customgroup (:user-visible-flag t) nil [1298 1411])
            ("gnus-diary-summary-line-format" variable
               (:user-visible-flag t
                :default-value "%U%R%z %uD: %(%s%) (%ud)
")
                nil [1413 1596])
            ("gnus-diary-time-format" variable
               (:user-visible-flag t
                :default-value "%a, %b %e %y, %H:%M")
                nil [1598 1833])
            ("gnus-diary-delay-format-function" variable
               (:user-visible-flag t
                :default-value (quote gnus-diary-delay-format-english))
                nil [1835 2587])
            ("gnus-diary-version" variable
               (:constant-flag t
                :default-value nndiary-version)
                nil [2589 2670])
            ("if" code nil nil [2772 2984])
            ("gnus-diary-delay-format-french" function (:arguments ("past" "delay")) nil [3067 3803])
            ("gnus-diary-delay-format-english" function (:arguments ("past" "delay")) nil [3806 4272])
            ("gnus-diary-header-schedule" function (:arguments ("headers")) nil [4275 4611])
            ("gnus-user-format-function-d" function (:arguments ("header")) nil [4799 6069])
            ("gnus-user-format-function-D" function (:arguments ("header")) nil [6257 6582])
            ("gnus-article-sort-by-schedule" function (:arguments ("h1" "h2")) nil [6664 7097])
            ("gnus-thread-sort-by-schedule" function (:arguments ("h1" "h2")) nil [7100 7231])
            ("gnus-summary-sort-by-schedule" function
               (:user-visible-flag t
                :arguments ("reverse"))
                nil [7233 7479])
            ("gnus-summary-misc-menu" variable nil nil [7481 7512])
            ("add-hook" code nil nil [7545 7829])
            ("gnus-diary-update-group-parameters" function (:arguments ("group")) nil [7912 9356])
            ("gnus-diary-maybe-update-group-parameters" function (:arguments ("group")) nil [9575 9742])
            ("add-hook" code nil nil [9744 9833])
            ("add-hook" code nil nil [9962 10050])
            ("add-hook" code nil nil [10051 10142])
            ("gnus-diary-header-value-history" variable nil nil [10224 10320])
            ("gnus-diary-narrow-to-headers" function nil nil [10322 10748])
            ("gnus-diary-add-header" function (:arguments ("str")) nil [10750 11133])
            ("gnus-diary-check-message" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [11135 13243])
            ("add-hook" code nil nil [13245 13343])
            ("define-key" code nil nil [13345 13412])
            ("define-key" code nil nil [13413 13490])
            ("gnus-diary-version" function (:user-visible-flag t) nil [13572 13702])
            ("gnus-diary" package nil nil [13704 13725]))          
      :file "gnus-diary.el.gz"
      :pointmax 13755
      :fsize 4526
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 2984 . 2985) (symbol 2753 . 2769) (open-paren 2752 . 2753)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnoo" include nil nil [3470 3485])
            ("nnheader" include nil nil [3486 3505])
            ("nnmail" include nil nil [3506 3523])
            ("cl" include nil nil [3543 3556])
            ("gnus-start" include nil nil [3559 3580])
            ("gnus-sum" include nil nil [3581 3600])
            ("if" code nil nil [3701 3874])
            ("nndiary" customgroup (:user-visible-flag t) nil [3958 4048])
            ("nndiary-mail-sources" variable
               (:user-visible-flag t
                :default-value (\` ((file :path (\, (expand-file-name "~/.nndiary"))))))
                nil [4050 4401])
            ("nndiary-split-methods" variable
               (:user-visible-flag t
                :default-value (quote (("diary" ""))))
                nil [4403 4808])
            ("nndiary-reminders" variable
               (:user-visible-flag t
                :default-value (quote ((0 . day))))
                nil [4811 6800])
            ("nndiary-week-starts-on-monday" variable (:user-visible-flag t) nil [6802 6940])
            ("define-obsolete-variable-alias" code nil nil [6943 7060])
            ("nndiary-request-create-group-functions" variable (:user-visible-flag t) nil [7061 7283])
            ("define-obsolete-variable-alias" code nil nil [7285 7400])
            ("nndiary-request-update-info-functions" variable (:user-visible-flag t) nil [7401 7627])
            ("define-obsolete-variable-alias" code nil nil [7629 7750])
            ("nndiary-request-accept-article-functions" variable (:user-visible-flag t) nil [7751 8021])
            ("nndiary-check-directory-twice" variable
               (:user-visible-flag t
                :default-value t)
                nil [8023 8159])
            ("nnoo-declare" code nil nil [8282 8304])
            ("defvoo" code nil nil [8306 8420])
            ("defvoo" code nil nil [8422 8542])
            ("defvoo" code nil nil [8544 8688])
            ("defvoo" code nil nil [8690 8965])
            ("defvoo" code nil nil [8967 9449])
            ("defvoo" code nil nil [9451 9546])
            ("defvoo" code nil nil [9548 9615])
            ("nndiary-version" variable
               (:constant-flag t
                :default-value "0.2-b14")
                nil [9620 9692])
            ("nndiary-version" function (:user-visible-flag t) nil [9694 9821])
            ("defvoo" code nil nil [9823 9865])
            ("defvoo" code nil nil [9867 9905])
            ("defvoo" code nil nil [9906 9940])
            ("defvoo" code nil nil [9941 9975])
            ("defvoo" code nil nil [9976 10013])
            ("defvoo" code nil nil [10014 10046])
            ("defvoo" code nil nil [10047 10084])
            ("defvoo" code nil nil [10085 10124])
            ("defvoo" code nil nil [10126 10197])
            ("defvoo" code nil nil [10198 10239])
            ("defvoo" code nil nil [10240 10301])
            ("nndiary-headers" variable
               (:constant-flag t
                :default-value (quote (("Minute" 0 59) ("Hour" 0 23) ("Dom" 1 31) ("Month" 1 12) ("Year" 1971) ("Dow" 0 6) ("Time-Zone" (("Y" -43200) ("X" -39600) ("W" -36000) ("V" -32400) ("U" -28800) ("PST" -28800) ("T" -25200) ("MST" -25200) ("PDT" -25200) ("S" -21600) ("CST" -21600) ("MDT" -21600) ("R" -18000) ("EST" -18000) ("CDT" -18000) ("Q" -14400) ("AST" -14400) ("EDT" -14400) ("P" -10800) ("ADT" -10800) ("O" -7200) ("N" -3600) ("Z" 0) ("GMT" 0) ("UT" 0) ("UTC" 0) ("WET" 0) ("A" 3600) ("CET" 3600) ("MET" 3600) ("MEZ" 3600) ("BST" 3600) ("WEST" 3600) ("B" 7200) ("EET" 7200) ("CEST" 7200) ("MEST" 7200) ("MESZ" 7200) ("C" 10800) ("D" 14400) ("E" 18000) ("F" 21600) ("G" 25200) ("H" 28800) ("I" 32400) ("JST" 32400) ("K" 36000) ("GST" 36000) ("L" 39600) ("M" 43200) ("NZST" 43200) ("NZDT" 46800))))))
                nil [10303 11841])
            ("nndiary-schedule" function nil nil [11843 12170])
            ("nnoo-define-basics" code nil nil [12251 12279])
            ("deffoo" code nil nil [12281 13944])
            ("deffoo" code nil nil [13946 14593])
            ("deffoo" code nil nil [14595 14734])
            ("deffoo" code nil nil [14736 16041])
            ("deffoo" code nil nil [16043 17133])
            ("deffoo" code nil nil [17135 17577])
            ("deffoo" code nil nil [17579 17676])
            ("deffoo" code nil nil [17678 18736])
            ("deffoo" code nil nil [18738 19039])
            ("deffoo" code nil nil [19041 19131])
            ("deffoo" code nil nil [19133 19258])
            ("deffoo" code nil nil [19260 20961])
            ("deffoo" code nil nil [20963 21944])
            ("deffoo" code nil nil [21946 23088])
            ("deffoo" code nil nil [23090 23204])
            ("deffoo" code nil nil [23206 24575])
            ("deffoo" code nil nil [24577 25535])
            ("deffoo" code nil nil [25537 26819])
            ("deffoo" code nil nil [26821 27221])
            ("deffoo" code nil nil [27304 28399])
            ("nndiary-article-to-file" function (:arguments ("article")) nil [28483 28996])
            ("nndiary-deletable-article-p" function (:arguments ("group" "article")) nil [28998 29322])
            ("nndiary-find-group-number" function (:arguments ("id")) nil [29393 30164])
            ("nndiary-find-id" function (:arguments ("group" "id")) nil [30166 30823])
            ("nndiary-retrieve-headers-with-nov" function (:arguments ("articles" "fetch-old")) nil [30825 31427])
            ("nndiary-possibly-change-directory" function (:arguments ("group" "server")) nil [31429 31976])
            ("nndiary-possibly-create-directory" function (:arguments ("group")) nil [31978 32235])
            ("nndiary-save-mail" function (:arguments ("group-art")) nil [32237 33596])
            ("nndiary-active-number" function (:arguments ("group")) nil [33598 34692])
            ("nndiary-add-nov" function (:arguments ("group" "article" "headers")) nil [34694 34936])
            ("nndiary-header-value" function nil nil [34938 35037])
            ("nndiary-parse-head" function (:arguments ("chars" "number")) nil [35039 35460])
            ("nndiary-open-nov" function (:arguments ("group")) nil [35462 36033])
            ("nndiary-save-nov" function nil nil [36035 36471])
            ("nndiary-generate-nov-databases" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [36488 37110])
            ("nndiary-generate-nov-databases-1" function
               (:user-visible-flag t
                :arguments ("dir" "seen" "no-active"))
                nil [37112 38272])
            ("nndiary-files" variable nil nil [38274 38296])
            ("nndiary-generate-active-info" function (:arguments ("dir")) nil [38353 38830])
            ("nndiary-generate-nov-file" function (:arguments ("dir" "files")) nil [38832 39996])
            ("nndiary-nov-delete-article" function (:arguments ("group" "article")) nil [39998 40489])
            ("nndiary-update-file-alist" function (:arguments ("force")) nil [40491 40700])
            ("nndiary-string-to-number" function (:arguments ("str" "min" "max")) nil [40703 41183])
            ("nndiary-parse-schedule-value" function (:arguments ("str" "min-or-values" "max")) nil [41185 42432])
            ("nndiary-parse-schedule" function (:arguments ("head" "min-or-values" "max")) nil [42493 43101])
            ("nndiary-max" function (:arguments ("spec")) nil [43103 43423])
            ("nndiary-flatten" function (:arguments ("spec" "min" "max")) nil [43425 44050])
            ("nndiary-unflatten" function (:arguments ("spec")) nil [44052 44445])
            ("nndiary-compute-reminders" function (:arguments ("date")) nil [44447 46185])
            ("nndiary-last-occurence" function (:arguments ("sched")) nil [46248 49322])
            ("nndiary-next-occurence" function (:arguments ("sched" "now")) nil [49385 54076])
            ("nndiary-expired-article-p" function (:arguments ("file")) nil [54078 54531])
            ("nndiary-renew-article-p" function (:arguments ("file" "timestamp")) nil [54533 55430])
            ("dolist" code nil nil [55511 55755])
            ("unless" code nil nil [55757 55873])
            ("nndiary" package nil nil [55875 55893]))          
      :file "nndiary.el.gz"
      :pointmax 55920
      :fsize 15318
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 3874 . 3875) (symbol 3682 . 3698) (open-paren 3681 . 3682) (close-paren 3556 . 3557) (symbol 3525 . 3542) (open-paren 3524 . 3525)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("unless" code nil nil [1008 1076])
            ("nnheader" include nil nil [1079 1098])
            ("nnoo" include nil nil [1099 1114])
            ("gnus-util" include nil nil [1115 1135])
            ("gnus" include nil nil [1136 1151])
            ("gnus-group" include nil nil [1152 1173])
            ("nnoo-declare" code nil nil [1202 1221])
            ("cl" include nil nil [1242 1255])
            ("auth-source-search" function (:prototype-flag t) nil [1258 1302])
            ("nntp" customgroup (:user-visible-flag t) nil [1304 1364])
            ("defvoo" code nil nil [1366 1432])
            ("defvoo" code nil nil [1434 1511])
            ("defvoo" code nil nil [1513 1728])
            ("defvoo" code nil nil [1730 1864])
            ("defvoo" code nil nil [1866 2358])
            ("defvoo" code nil nil [2360 3264])
            ("defvoo" code nil nil [3266 3694])
            ("defvoo" code nil nil [3696 4047])
            ("defvoo" code nil nil [4049 4205])
            ("defvoo" code nil nil [4207 4436])
            ("defvoo" code nil nil [4438 4540])
            ("defvoo" code nil nil [4542 4759])
            ("defvoo" code nil nil [4761 5032])
            ("defvoo" code nil nil [5034 5434])
            ("defvoo" code nil nil [5436 5608])
            ("defvoo" code nil nil [5610 5720])
            ("defvoo" code nil nil [5722 5912])
            ("defvoo" code nil nil [5914 6012])
            ("defvoo" code nil nil [6014 6162])
            ("defvoo" code nil nil [6164 6331])
            ("defvoo" code nil nil [6333 6476])
            ("defvoo" code nil nil [6478 6632])
            ("defvoo" code nil nil [6634 6830])
            ("defvoo" code nil nil [6832 7043])
            ("defvoo" code nil nil [7045 7234])
            ("defvoo" code nil nil [7236 7347])
            ("defvoo" code nil nil [7349 7629])
            ("defvoo" code nil nil [7631 7818])
            ("defvoo" code nil nil [7820 8269])
            ("defvoo" code nil nil [8271 8702])
            ("nntp-authinfo-file" variable (:default-value "~/.authinfo") nil [8704 9224])
            ("make-obsolete" code nil nil [9226 9278])
            ("defvoo" code nil nil [9283 9522])
            ("defvoo" code nil nil [9524 9663])
            ("defvoo" code nil nil [9665 9878])
            ("defvoo" code nil nil [9905 9944])
            ("nntp-record-commands" variable (:user-visible-flag t) nil [9945 10055])
            ("nntp-have-messaged" variable nil nil [10057 10088])
            ("nntp-process-wait-for" variable nil nil [10090 10124])
            ("nntp-process-to-buffer" variable nil nil [10125 10160])
            ("nntp-process-callback" variable nil nil [10161 10195])
            ("nntp-process-decode" variable nil nil [10196 10228])
            ("nntp-process-start-point" variable nil nil [10229 10266])
            ("nntp-inside-change-function" variable nil nil [10267 10307])
            ("defvoo" code nil nil [10308 10343])
            ("defvoo" code nil nil [10344 10374])
            ("defvoo" code nil nil [10375 10410])
            ("defvoo" code nil nil [10411 10442])
            ("defvoo" code nil nil [10443 10475])
            ("nntp-connection-list" variable nil nil [10477 10510])
            ("defvoo" code nil nil [10512 10541])
            ("defvoo" code nil nil [10542 10576])
            ("defvoo" code nil nil [10577 10607])
            ("nntp-version" variable
               (:constant-flag t
                :default-value "nntp 5.0")
                nil [10608 10642])
            ("defvoo" code nil nil [10643 10674])
            ("defvoo" code nil nil [10675 10707])
            ("defvoo" code nil nil [10709 10740])
            ("nntp-async-timer" variable nil nil [10742 10771])
            ("nntp-async-process-list" variable nil nil [10772 10808])
            ("nntp-authinfo-rejected" variable nil nil [10810 11026])
            ("put" code nil nil [11027 11106])
            ("put" code nil nil [11107 11176])
            ("nntp-send-string" function (:arguments ("process" "string")) nil [11206 11743])
            ("nntp-record-command" function (:arguments ("string")) nil [11745 11989])
            ("nntp--report-1" variable nil nil [11991 12018])
            ("nntp-report" function (:arguments ("args")) nil [12020 12701])
            ("nntp-copy-to-buffer" function (:arguments ("buffer" "start" "end")) nil [12703 13121])
            ("nntp-wait-for" function (:arguments ("process" "wait-for" "buffer" "decode" "discard")) nil [13123 14910])
            ("nntp-kill-buffer" function (:arguments ("buffer")) nil [14912 15131])
            ("nntp-erase-buffer" function (:arguments ("buffer")) nil [15133 15247])
            ("nntp-find-connection" function (:arguments ("buffer")) nil [15249 15781])
            ("nntp-find-connection-entry" function (:arguments ("buffer")) nil [15783 15941])
            ("nntp-find-connection-buffer" function (:arguments ("buffer")) nil [15943 16144])
            ("nntp-retrieve-data" function (:arguments ("command" "address" "port" "buffer" "wait-for" "callback" "decode")) nil [16146 17448])
            ("nntp-send-command" function (:arguments ("wait-for" "strings")) nil [17450 18824])
            ("nntp-send-command-nodelete" function (:arguments ("wait-for" "strings")) nil [18826 19701])
            ("nntp-send-command-and-decode" function (:arguments ("wait-for" "strings")) nil [19703 20704])
            ("nntp-send-buffer" function (:arguments ("wait-for")) nil [20707 21437])
            ("nnoo-define-basics" code nil nil [21468 21493])
            ("nntp-next-result-arrived-p" function nil nil [21495 22091])
            ("nntp-with-open-group-function" function (:arguments ("-group" "-server" "-connectionless" "-bodyfun")) nil [22093 24759])
            ("nntp-with-open-group" function (:arguments ("group" "server" "connectionless" "forms")) nil [24761 25726])
            ("deffoo" code nil nil [25728 28431])
            ("deffoo" code nil nil [28433 29529])
            ("deffoo" code nil nil [29531 31198])
            ("deffoo" code nil nil [31200 35501])
            ("deffoo" code nil nil [35503 38226])
            ("nntp-try-list-active" function (:arguments ("group")) nil [38228 38519])
            ("deffoo" code nil nil [38521 38733])
            ("deffoo" code nil nil [38735 38940])
            ("deffoo" code nil nil [38942 39411])
            ("deffoo" code nil nil [39413 39724])
            ("deffoo" code nil nil [39726 39946])
            ("deffoo" code nil nil [39948 40220])
            ("deffoo" code nil nil [40222 40276])
            ("deffoo" code nil nil [40278 40547])
            ("deffoo" code nil nil [40549 41099])
            ("deffoo" code nil nil [41101 41804])
            ("deffoo" code nil nil [41806 42355])
            ("deffoo" code nil nil [42357 42498])
            ("deffoo" code nil nil [42500 42652])
            ("deffoo" code nil nil [42654 42954])
            ("deffoo" code nil nil [42956 43853])
            ("deffoo" code nil nil [43855 43905])
            ("deffoo" code nil nil [43907 43942])
            ("nntp-send-mode-reader" function nil nil [43967 44249])
            ("declare-function" code nil nil [44251 44306])
            ("declare-function" code nil nil [44307 44393])
            ("declare-function" code nil nil [44394 44443])
            ("nntp-send-authinfo" function (:arguments ("send-if-force")) nil [44445 46325])
            ("nntp-handle-authinfo" function (:arguments ("process")) nil [46352 46688])
            ("nntp-make-process-buffer" function (:arguments ("buffer")) nil [46690 47447])
            ("nntp-open-connection" function (:arguments ("buffer")) nil [47449 50190])
            ("nntp-read-server-type" function nil nil [50192 50666])
            ("nntp-async-wait" function (:arguments ("process" "wait-for" "buffer" "decode" "callback")) nil [50668 51087])
            ("nntp-async-stop" function (:arguments ("proc")) nil [51089 51327])
            ("nntp-after-change-function" function (:arguments ("beg" "end" "len")) nil [51329 51819])
            ("nntp-async-trigger" function (:arguments ("process")) nil [51821 53069])
            ("nntp-do-callback" function (:arguments ("arg")) nil [53071 53241])
            ("nntp-snarf-error-message" function nil nil [53243 53515])
            ("nntp-accept-process-output" function (:arguments ("process")) nil [53517 54355])
            ("nntp-accept-response" function nil nil [54357 54522])
            ("nntp-possibly-change-group" function (:arguments ("group" "server" "connectionless")) nil [54524 55362])
            ("nntp-decode-text" function (:arguments ("cr-only")) nil [55364 56047])
            ("nntp-encode-text" function nil nil [56049 56626])
            ("nntp-retrieve-headers-with-xover" function (:arguments ("articles" "fetch-old")) nil [56628 61425])
            ("nntp-send-xover-command" function (:arguments ("beg" "end" "wait-for-reply")) nil [61427 62849])
            ("nntp-find-group-and-number" function (:arguments ("group")) nil [62851 65013])
            ("nntp-wait-for-string" function (:arguments ("regexp")) nil [65015 65395])
            ("defvoo" code nil nil [65605 65762])
            ("defvoo" code nil nil [65764 65890])
            ("defvoo" code nil nil [65892 66036])
            ("defvoo" code nil nil [66038 66290])
            ("defvoo" code nil nil [66292 66396])
            ("defvoo" code nil nil [66398 66671])
            ("defvoo" code nil nil [66673 66748])
            ("defvoo" code nil nil [66750 66828])
            ("nntp-service-to-port" function (:arguments ("svc")) nil [66830 67244])
            ("nntp-open-telnet" function (:arguments ("buffer")) nil [67246 68734])
            ("nntp-open-rlogin" function (:arguments ("buffer")) nil [68736 69261])
            ("nntp-open-telnet-stream" function (:arguments ("buffer")) nil [69474 70293])
            ("nntp-open-via-rlogin-and-telnet" function (:arguments ("buffer")) nil [70295 71985])
            ("nntp-open-via-rlogin-and-netcat" function (:arguments ("buffer")) nil [71987 73209])
            ("nntp-open-netcat-stream" function (:arguments ("buffer")) nil [73211 73919])
            ("nntp-open-via-telnet-and-telnet" function (:arguments ("buffer")) nil [73922 76285])
            ("nntp" package nil nil [76287 76302]))          
      :file "nntp.el.gz"
      :pointmax 76326
      :fsize 18180
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1255 . 1256) (symbol 1224 . 1241) (open-paren 1223 . 1224) (close-paren 1076 . 1077) (symbol 893 . 909) (open-paren 892 . 893)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [992 1005])
            ("nnmail-extra-headers" variable nil nil [1008 1037])
            ("gnus-newsgroup-name" variable nil nil [1038 1066])
            ("nnheader-file-coding-system" variable nil nil [1067 1103])
            ("jka-compr-compression-info-list" variable nil nil [1104 1144])
            ("mail-utils" include nil nil [1302 1323])
            ("mm-util" include nil nil [1324 1342])
            ("gnus-util" include nil nil [1343 1363])
            ("gnus-range-add" function (:prototype-flag t) nil [1364 1403])
            ("gnus-remove-from-range" function (:prototype-flag t) nil [1404 1451])
            ("gnus-sorted-intersection" function (:prototype-flag t) nil [1509 1558])
            ("gnus-intersection" function (:prototype-flag t) nil [1559 1601])
            ("gnus-sorted-complement" function (:prototype-flag t) nil [1602 1649])
            ("gnus-sorted-difference" function (:prototype-flag t) nil [1650 1697])
            ("gnus-verbose-backends" variable (:default-value 7) nil [1699 2085])
            ("gnus-nov-is-evil" variable nil nil [2087 2233])
            ("nnheader-max-head-length" variable
               (:user-visible-flag t
                :default-value 8192)
                nil [2235 2620])
            ("nnheader-head-chop-length" variable
               (:user-visible-flag t
                :default-value 2048)
                nil [2622 2731])
            ("nnheader-read-timeout" variable (:default-value (if (string-match "windows-nt\\|os/2\\|cygwin" (symbol-name system-type)) 1.0 0.01)) nil [2733 3826])
            ("nnheader-file-name-translation-alist" variable
               (:user-visible-flag t
                :default-value (let ((case-fold-search t)) (cond ((string-match "windows-nt\\|os/2\\|cygwin" (symbol-name system-type)) (append (mapcar (lambda (c) (cons c 95)) (quote (58 42 34 60 62 63))) (if (string-match "windows-nt\\|cygwin" (symbol-name system-type)) nil (quote ((43 . 45)))))) (t nil))))
                nil [3828 4432])
            ("nnheader-directory-separator-character" variable
               (:user-visible-flag t
                :default-value (string-to-char (substring (file-name-as-directory ".") -1)))
                nil [4434 4592])
            ("nnmail-message-id" function (:prototype-flag t) nil [4594 4632])
            ("mail-position-on-field" function (:prototype-flag t) nil [4633 4678])
            ("gnus-buffer-live-p" function (:prototype-flag t) nil [4679 4721])
            ("mail-header-number" function (:arguments ("header")) nil [5226 5321])
            ("mail-header-set-number" function (:arguments ("header" "number")) nil [5323 5444])
            ("mail-header-subject" function (:arguments ("header")) nil [5446 5542])
            ("mail-header-set-subject" function (:arguments ("header" "subject")) nil [5544 5670])
            ("mail-header-from" function (:arguments ("header")) nil [5672 5764])
            ("mail-header-set-from" function (:arguments ("header" "from")) nil [5766 5879])
            ("mail-header-date" function (:arguments ("header")) nil [5881 5964])
            ("mail-header-set-date" function (:arguments ("header" "date")) nil [5966 6077])
            ("defalias" code nil nil [6079 6129])
            ("mail-header-id" function (:arguments ("header")) nil [6130 6209])
            ("defalias" code nil nil [6211 6269])
            ("mail-header-set-id" function (:arguments ("header" "id")) nil [6270 6371])
            ("mail-header-references" function (:arguments ("header")) nil [6373 6468])
            ("mail-header-set-references" function (:arguments ("header" "ref")) nil [6470 6590])
            ("mail-header-chars" function (:arguments ("header")) nil [6592 6698])
            ("mail-header-set-chars" function (:arguments ("header" "chars")) nil [6700 6829])
            ("mail-header-lines" function (:arguments ("header")) nil [6831 6916])
            ("mail-header-set-lines" function (:arguments ("header" "lines")) nil [6918 7034])
            ("mail-header-xref" function (:arguments ("header")) nil [7036 7126])
            ("mail-header-set-xref" function (:arguments ("header" "xref")) nil [7128 7239])
            ("mail-header-extra" function (:arguments ("header")) nil [7241 7338])
            ("mail-header-set-extra" function (:arguments ("header" "extra")) nil [7340 7454])
            ("make-mail-header" function (:arguments ("init")) nil [7456 7586])
            ("make-full-mail-header" function (:arguments ("number" "subject" "from" "date" "id" "references" "chars" "lines" "xref" "extra")) nil [7588 7861])
            ("nnheader-fake-message-id" variable (:default-value 1) nil [7910 7945])
            ("nnheader-generate-fake-message-id" function (:arguments ("number")) nil [7947 8203])
            ("nnheader-fake-message-id-p" function (:arguments ("id")) nil [8205 8363])
            ("nnheader-remove-cr-followed-by-lf" function nil nil [8400 8534])
            ("nnheader-header-value" function nil nil [8536 8644])
            ("ietf-drums-unfold-fws" function (:prototype-flag t) nil [8646 8692])
            ("nnheader-parse-naked-head" function (:arguments ("number")) nil [8694 11732])
            ("nnheader-parse-head" function (:arguments ("naked")) nil [11734 12302])
            ("nnheader-nov-skip-field" function nil nil [12304 12376])
            ("nnheader-nov-field" function nil nil [12378 12488])
            ("nnheader-nov-read-integer" function nil nil [12490 12727])
            ("nnheader-nov-parse-extra" function nil nil [12729 13045])
            ("nnheader-uniquify-message-id" variable nil nil [13067 13108])
            ("nnheader-nov-read-message-id" function (:arguments ("number")) nil [13111 13482])
            ("nnheader-parse-nov" function nil nil [13484 14058])
            ("nnheader-insert-nov" function (:arguments ("header")) nil [14068 15150])
            ("nnheader-parse-overview-file" function (:arguments ("file")) nil [15152 15463])
            ("nnheader-write-overview-file" function (:arguments ("file" "headers")) nil [15465 15609])
            ("nnheader-insert-header" function (:arguments ("header")) nil [15611 16061])
            ("nnheader-insert-article-line" function (:arguments ("article")) nil [16063 16332])
            ("nnheader-nov-delete-outside-range" function (:arguments ("beg" "end")) nil [16334 16697])
            ("nnheader-find-nov-line" function (:arguments ("article")) nil [16699 18091])
            ("nntp-server-buffer" variable nil nil [18154 18185])
            ("nntp-process-response" variable nil nil [18186 18220])
            ("nnheader-callback-function" variable nil nil [18222 18261])
            ("nnheader-init-server-buffer" function nil nil [18263 18703])
            ("nnheader-file-error" function (:arguments ("file")) nil [18746 19038])
            ("nnheader-insert-head" function (:arguments ("file")) nil [19040 20155])
            ("nnheader-article-p" function nil nil [20157 20541])
            ("nnheader-insert-references" function (:arguments ("references" "message-id")) nil [20543 21279])
            ("declare-function" code nil nil [21281 21378])
            ("nnheader-replace-header" function (:arguments ("header" "new-value")) nil [21380 21682])
            ("nnheader-narrow-to-headers" function nil nil [21684 21918])
            ("nnheader-get-lines-and-char" function nil nil [21920 22184])
            ("nnheader-remove-body" function nil nil [22186 22388])
            ("nnheader-set-temp-buffer" function (:arguments ("name" "noerase")) nil [22390 22649])
            ("nnheader-numerical-files" variable (:default-value (if (boundp (quote jka-compr-compression-info-list)) (concat "\\([0-9]+\\)\\(" (mapconcat (lambda (i) (aref i 0)) jka-compr-compression-info-list "\\|") "\\)?") "[0-9]+$")) nil [22651 22918])
            ("nnheader-numerical-short-files" variable (:default-value (concat "^" nnheader-numerical-files)) nil [22920 23043])
            ("nnheader-numerical-full-files" variable (:default-value (concat "/" nnheader-numerical-files)) nil [23045 23172])
            ("nnheader-file-to-number" function (:arguments ("file")) nil [23174 23456])
            ("nnheader-directory-files-is-safe" variable (:default-value (or (eq system-type (quote windows-nt)) (not (featurep (quote xemacs))))) nil [23458 23799])
            ("nnheader-directory-files-safe" function (:arguments ("args")) nil [23801 24070])
            ("nnheader-directory-articles" function (:arguments ("dir")) nil [24072 24405])
            ("nnheader-article-to-file-alist" function (:arguments ("dir")) nil [24407 24770])
            ("nnheader-fold-continuation-lines" function nil nil [24772 24919])
            ("nnheader-translate-file-chars" function (:arguments ("file" "full")) nil [24921 26531])
            ("nnheader-report" function (:arguments ("backend" "args")) nil [26533 26793])
            ("nnheader-get-report-string" function (:arguments ("backend")) nil [26795 27008])
            ("nnheader-get-report" function (:arguments ("backend")) nil [27010 27152])
            ("nnheader-insert" function (:arguments ("format" "args")) nil [27154 27537])
            ("nnheader-replace-chars-in-string" function (:arguments ("string" "from" "to")) nil [27539 27642])
            ("nnheader-replace-duplicate-chars-in-string" function (:arguments ("string" "from" "to")) nil [27644 28110])
            ("nnheader-file-to-group" function (:arguments ("file" "top")) nil [28112 28481])
            ("nnheader-message" function (:arguments ("level" "args")) nil [28483 28794])
            ("nnheader-be-verbose" function (:arguments ("level")) nil [28796 28975])
            ("nnheader-pathname-coding-system" variable
               (:user-visible-flag t
                :default-value (quote iso-8859-1))
                nil [28977 29063])
            ("nnheader-group-pathname" function (:arguments ("group" "dir" "file")) nil [29065 29662])
            ("nnheader-concat" function (:arguments ("dir" "files")) nil [29664 29796])
            ("nnheader-ms-strip-cr" function nil nil [29798 29928])
            ("nnheader-file-size" function (:arguments ("file")) nil [29930 30042])
            ("nnheader-find-etc-directory" function (:arguments ("package" "file" "first")) nil [30044 31122])
            ("ange-ftp-path-format" variable nil nil [31124 31153])
            ("efs-path-regexp" variable nil nil [31154 31178])
            ("nnheader-re-read-dir" function (:arguments ("path")) nil [31179 31580])
            ("nnheader-file-coding-system" variable (:default-value (quote raw-text)) nil [31582 31677])
            ("nnheader-insert-file-contents" function (:arguments ("filename" "visit" "beg" "end" "replace")) nil [31679 32194])
            ("nnheader-insert-nov-file" function (:arguments ("file" "first")) nil [32196 33052])
            ("nnheader-find-file-noselect" function (:arguments ("args")) nil [33054 33785])
            ("nnheader-directory-regular-files" function (:arguments ("dir")) nil [33787 34048])
            ("nnheader-directory-files" function (:arguments ("args")) nil [34050 34359])
            ("nnheader-skeleton-replace" function (:arguments ("from" "to" "regexp")) nil [34361 35060])
            ("nnheader-replace-string" function (:arguments ("from" "to")) nil [35062 35208])
            ("nnheader-replace-regexp" function (:arguments ("from" "to")) nil [35210 35365])
            ("nnheader-strip-cr" function nil nil [35367 35474])
            ("defalias" code nil nil [35476 35523])
            ("defalias" code nil nil [35524 35591])
            ("nnheader-accept-process-output" function (:arguments ("process")) nil [35684 35894])
            ("nnheader-update-marks-actions" function (:arguments ("backend-marks" "actions")) nil [35896 36416])
            ("nnheader-insert-buffer-substring" function (:arguments ("buffer" "start" "end")) nil [36418 36928])
            ("nnheader-last-message-time" variable (:default-value (quote (0 0))) nil [36930 36972])
            ("nnheader-message-maybe" function (:arguments ("args")) nil [36973 37205])
            ("when" code nil nil [37207 37256])
            ("run-hooks" code nil nil [37258 37289])
            ("nnheader" package nil nil [37291 37310]))          
      :file "nnheader.el.gz"
      :pointmax 37338
      :fsize 11352
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 13108 . 13109) (symbol 13048 . 13064) (open-paren 13047 . 13048) (close-paren 1005 . 1006) (symbol 974 . 991) (open-paren 973 . 974)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("unless" code nil nil [1087 1155])
            ("nnheader" include nil nil [969 988])
            ("cl" include nil nil [1179 1192])
            ("nnheader" include nil nil [1195 1214])
            ("gnus-util" include nil nil [1215 1235])
            ("gnus" include nil nil [1236 1251])
            ("nnoo" include nil nil [1252 1267])
            ("netrc" include nil nil [1268 1284])
            ("utf7" include nil nil [1285 1300])
            ("tls" include nil nil [1301 1315])
            ("parse-time" include nil nil [1316 1337])
            ("nnmail" include nil nil [1338 1355])
            ("auth-source-forget+" function (:prototype-flag t) nil [1357 1402])
            ("auth-source-search" function (:prototype-flag t) nil [1403 1447])
            ("nnoo-declare" code nil nil [1449 1470])
            ("defvoo" code nil nil [1472 1535])
            ("defvoo" code nil nil [1537 1620])
            ("defvoo" code nil nil [1622 1770])
            ("defvoo" code nil nil [1772 2032])
            ("defvoo" code nil nil [2034 2219])
            ("defvoo" code nil nil [2221 2409])
            ("defvoo" code nil nil [2411 2515])
            ("defvoo" code nil nil [2517 2598])
            ("defvoo" code nil nil [2600 2734])
            ("make-obsolete-variable" code nil nil [2736 2825])
            ("defvoo" code nil nil [2827 3004])
            ("defvoo" code nil nil [3006 3216])
            ("defvoo" code nil nil [3218 3386])
            ("defvoo" code nil nil [3388 3424])
            ("defvoo" code nil nil [3426 3459])
            ("nnimap-decode-gnus-group" function (:arguments ("group")) nil [3461 3539])
            ("nnimap-encode-gnus-group" function (:arguments ("group")) nil [3541 3619])
            ("defvoo" code nil nil [3621 3911])
            ("nnimap" customgroup (:user-visible-flag t) nil [3913 3968])
            ("nnimap-request-articles-find-limit" variable nil nil [3970 4163])
            ("nnimap-process" variable nil nil [4165 4192])
            ("nnimap-status-string" variable nil nil [4194 4226])
            ("nnimap-split-download-body-default" variable nil nil [4228 4350])
            ("nnimap-keepalive-timer" variable nil nil [4352 4387])
            ("nnimap-process-buffers" variable nil nil [4388 4423])
            ("nnimap" type
               (:members ("group" "process" "commands" "capabilities" "select-result" "newlinep" "server" "last-command-time" "greeting" "examined" "stream-type" "initial-resync")
                :type "struct")
                nil [4425 4576])
            ("nnimap-object" variable nil nil [4578 4604])
            ("nnimap-mark-alist" variable (:default-value (quote ((read "\\Seen" %Seen) (tick "\\Flagged" %Flagged) (reply "\\Answered" %Answered) (expire "gnus-expire") (dormant "gnus-dormant") (score "gnus-score") (save "gnus-save") (download "gnus-download") (forward "gnus-forward")))) nil [4606 4890])
            ("nnimap-quirks" variable (:default-value (quote (("QRESYNC" "Zimbra" "QRESYNC ")))) nil [4892 4951])
            ("nnimap-inhibit-logging" variable nil nil [4953 4988])
            ("nnimap-buffer" function nil nil [4990 5064])
            ("nnimap-header-parameters" function nil nil [5066 5553])
            ("deffoo" code nil nil [5555 6299])
            ("nnimap-transform-headers" function nil nil [6301 8705])
            ("nnimap-unfold-quoted-lines" function nil nil [8707 9120])
            ("nnimap-get-length" function nil nil [9122 9260])
            ("nnimap-article-ranges" function (:arguments ("ranges")) nil [9262 9662])
            ("deffoo" code nil nil [9664 10097])
            ("nnimap-make-process-buffer" function (:arguments ("buffer")) nil [10099 10702])
            ("auth-source-creation-prompts" variable nil nil [10704 10741])
            ("nnimap-credentials" function (:arguments ("address" "ports" "user")) nil [10743 11481])
            ("nnimap-keepalive" function nil nil [11483 12016])
            ("nnimap-open-connection" function (:arguments ("buffer")) nil [12018 12618])
            ("nnimap-map-port" function (:arguments ("port")) nil [12620 12699])
            ("nnimap-open-connection-1" function (:arguments ("buffer")) nil [12701 17439])
            ("rfc2104-hash" function (:prototype-flag t) nil [17441 17475])
            ("nnimap-login" function (:arguments ("user" "password")) nil [17477 18935])
            ("nnimap-quote-specials" function (:arguments ("string")) nil [18937 19178])
            ("nnimap-find-parameter" function (:arguments ("parameter" "elems")) nil [19180 19493])
            ("deffoo" code nil nil [19495 19716])
            ("deffoo" code nil nil [19718 19754])
            ("deffoo" code nil nil [19756 19975])
            ("deffoo" code nil nil [19977 20050])
            ("deffoo" code nil nil [20052 21262])
            ("deffoo" code nil nil [21264 21926])
            ("deffoo" code nil nil [21928 22592])
            ("nnimap-get-whole-article" function (:arguments ("article" "command")) nil [22594 23337])
            ("nnimap-capability" function (:arguments ("capability")) nil [23339 23435])
            ("nnimap-ver4-p" function nil nil [23437 23495])
            ("nnimap-get-partial-article" function (:arguments ("article" "parts" "structure")) nil [23497 23968])
            ("nnimap-convert-partial-article" function (:arguments ("structure")) nil [23970 24854])
            ("nnimap-insert-partial-structure" function (:arguments ("structure" "parts" "subp")) nil [24856 26046])
            ("nnimap-find-wanted-parts" function (:arguments ("structure")) nil [26048 26159])
            ("nnimap-find-wanted-parts-1" function (:arguments ("structure" "prefix")) nil [26161 26855])
            ("deffoo" code nil nil [26857 27813])
            ("deffoo" code nil nil [27815 28973])
            ("deffoo" code nil nil [28975 29237])
            ("deffoo" code nil nil [29239 29502])
            ("deffoo" code nil nil [29504 29833])
            ("nnimap-unselect-group" function nil nil [29835 30131])
            ("deffoo" code nil nil [30133 30368])
            ("nnimap-get-flags" function (:arguments ("spec")) nil [30370 30908])
            ("deffoo" code nil nil [30910 30968])
            ("deffoo" code nil nil [30970 32629])
            ("deffoo" code nil nil [32631 33629])
            ("nnimap-process-expiry-targets" function (:arguments ("articles" "group" "server")) nil [33631 35817])
            ("nnimap-find-expired-articles" function (:arguments ("group")) nil [35819 36316])
            ("nnimap-find-article-by-message-id" function (:arguments ("group" "server" "message-id" "limit")) nil [36318 37622])
            ("nnimap-delete-article" function (:arguments ("articles")) nil [37624 38222])
            ("deffoo" code nil nil [38224 38711])
            ("nnimap-marks-to-flags" function (:arguments ("marks")) nil [38713 38888])
            ("deffoo" code nil nil [38890 39292])
            ("deffoo" code nil nil [39294 40200])
            ("deffoo" code nil nil [40202 42002])
            ("nnimap-process-quirk" function (:arguments ("greeting-match" "type" "data")) nil [42004 42741])
            ("nnimap-ok-p" function (:arguments ("value")) nil [42743 42852])
            ("nnimap-find-uid-response" function (:arguments ("name" "list")) nil [42854 43016])
            ("nnimap-find-response-element" function (:arguments ("name" "list")) nil [43018 43198])
            ("deffoo" code nil nil [43200 43635])
            ("nnimap-add-cr" function nil nil [43637 43762])
            ("nnimap-get-groups" function nil nil [43764 44568])
            ("nnimap-get-responses" function (:arguments ("sequences")) nil [44570 44851])
            ("deffoo" code nil nil [44853 46421])
            ("deffoo" code nil nil [46423 46853])
            ("deffoo" code nil nil [46855 48754])
            ("nnimap-quirk" function (:arguments ("command")) nil [48756 49087])
            ("deffoo" code nil nil [49089 50476])
            ("nnimap-update-infos" function (:arguments ("flags" "infos")) nil [50478 50732])
            ("nnimap-update-info" function (:arguments ("info" "marks")) nil [50734 56132])
            ("nnimap-update-qresync-info" function (:arguments ("info" "existing" "vanished" "flags")) nil [56134 57509])
            ("nnimap-imap-ranges-to-gnus-ranges" function (:arguments ("irange")) nil [57511 57912])
            ("nnimap-store-info" function (:arguments ("info" "active")) nil [57914 58202])
            ("nnimap-flags-to-marks" function (:arguments ("groups")) nil [58204 59104])
            ("nnimap-parse-flags" function (:arguments ("sequences")) nil [59106 61737])
            ("nnimap-find-process-buffer" function (:arguments ("buffer")) nil [61739 61830])
            ("deffoo" code nil nil [61832 61935])
            ("gnus-refer-thread-use-nnir" variable nil nil [61937 61972])
            ("declare-function" code nil nil [61988 62090])
            ("nnir-search-thread" function (:prototype-flag t) nil [62092 62129])
            ("deffoo" code nil nil [62131 62731])
            ("nnimap-change-group" function (:arguments ("group" "server" "no-reconnect" "read-only")) nil [62733 63879])
            ("nnimap-find-connection" function (:arguments ("buffer")) nil [63881 64322])
            ("nnimap-sequence" variable nil nil [64324 64350])
            ("nnimap-send-command" function (:arguments ("args")) nil [64352 64868])
            ("nnimap-record-commands" variable nil nil [64870 64964])
            ("nnimap-log-buffer" function nil nil [64966 65300])
            ("nnimap-log-command" function (:arguments ("command")) nil [65302 65642])
            ("nnimap-command" function (:arguments ("args")) nil [65644 65984])
            ("nnimap-get-response" function (:arguments ("sequence")) nil [65986 66088])
            ("nnimap-wait-for-connection" function (:arguments ("regexp")) nil [66090 66216])
            ("nnimap-wait-for-line" function (:arguments ("regexp" "response-regexp")) nil [66218 66647])
            ("nnimap-wait-for-response" function (:arguments ("sequence" "messagep")) nil [66649 67985])
            ("nnimap-parse-response" function nil nil [67987 68317])
            ("nnimap-parse-line" function (:arguments ("line")) nil [68499 69453])
            ("nnimap-last-response-string" function nil nil [69455 69802])
            ("nnimap-incoming-split-list" variable nil nil [69804 69843])
            ("nnimap-fetch-inbox" function (:arguments ("articles")) nil [69845 70253])
            ("nnimap-split-incoming-mail" function nil nil [70255 72597])
            ("nnimap-mark-and-expunge-incoming" function (:arguments ("range")) nil [72599 73264])
            ("nnimap-parse-copied-articles" function (:arguments ("sequences")) nil [73266 73659])
            ("nnimap-new-articles" function (:arguments ("flags")) nil [73661 73893])
            ("nnimap-make-split-specs" function (:arguments ("list")) nil [73895 74325])
            ("nnimap-transform-split-mail" function nil nil [74327 75156])
            ("nnimap-dummy-active-number" function (:arguments ("_group" "_server")) nil [75158 75223])
            ("nnimap-save-mail-spec" function (:arguments ("group-art" "_server" "_full-nov")) nil [75225 75628])
            ("nnimap-make-thread-query" function (:arguments ("header")) nil [75630 76014])
            ("nnimap" package nil nil [76017 76034]))          
      :file "nnimap.el.gz"
      :pointmax 76060
      :fsize 19513
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1192 . 1193) (symbol 1159 . 1176) (open-paren 1158 . 1159) (close-paren 1155 . 1156) (symbol 950 . 966) (open-paren 949 . 950)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nntp" include nil nil [1119 1134])
            ("nnheader" include nil nil [1135 1154])
            ("gnus" include nil nil [1155 1170])
            ("nnoo" include nil nil [1171 1186])
            ("gnus-util" include nil nil [1187 1207])
            ("gnus-start" include nil nil [1208 1229])
            ("gnus-sum" include nil nil [1230 1249])
            ("gnus-msg" include nil nil [1250 1269])
            ("cl" include nil nil [1289 1302])
            ("nnoo-declare" code nil nil [1305 1329])
            ("defvoo" code nil nil [1331 1644])
            ("defvoo" code nil nil [1646 1723])
            ("defvoo" code nil nil [1725 1809])
            ("nnvirtual-version" variable
               (:constant-flag t
                :default-value "nnvirtual 1.1")
                nil [1814 1858])
            ("defvoo" code nil nil [1860 1896])
            ("defvoo" code nil nil [1898 2037])
            ("defvoo" code nil nil [2039 2175])
            ("defvoo" code nil nil [2177 2255])
            ("defvoo" code nil nil [2257 2422])
            ("defvoo" code nil nil [2424 2568])
            ("defvoo" code nil nil [2570 2708])
            ("defvoo" code nil nil [2710 2745])
            ("gnus-cache-articles-in-group" function (:prototype-flag t) nil [2747 2800])
            ("nnoo-define-basics" code nil nil [2831 2861])
            ("deffoo" code nil nil [2864 6226])
            ("defvoo" code nil nil [6229 6281])
            ("deffoo" code nil nil [6283 7691])
            ("deffoo" code nil nil [7694 8675])
            ("deffoo" code nil nil [8678 9391])
            ("deffoo" code nil nil [9394 9701])
            ("deffoo" code nil nil [9703 10116])
            ("deffoo" code nil nil [10119 10341])
            ("deffoo" code nil nil [10344 10465])
            ("deffoo" code nil nil [10468 10598])
            ("deffoo" code nil nil [10601 11179])
            ("deffoo" code nil nil [11182 11889])
            ("deffoo" code nil nil [11892 12044])
            ("deffoo" code nil nil [12047 12393])
            ("deffoo" code nil nil [12396 12961])
            ("nnvirtual-convert-headers" function nil nil [12990 13279])
            ("nnvirtual-update-xref-header" function (:arguments ("group" "article" "prefix" "sysname")) nil [13282 14808])
            ("nnvirtual-possibly-change-server" function (:arguments ("server")) nil [14811 14965])
            ("nnvirtual-update-read-and-marked" function (:arguments ("read-p" "update-p")) nil [14968 16968])
            ("nnvirtual-current-group" function nil nil [16971 17114])
            ("nnvirtual-merge-sorted-lists" function (:arguments ("lists")) nil [17299 17468])
            ("nnvirtual-map-article" function (:arguments ("article")) nil [20200 20852])
            ("nnvirtual-reverse-map-article" function (:arguments ("group" "article")) nil [20856 21647])
            ("nnvirtual-reverse-map-sequence" function (:arguments ("group" "articles")) nil [21650 22466])
            ("nnvirtual-partition-sequence" function (:arguments ("articles")) nil [22469 23405])
            ("nnvirtual-create-mapping" function (:arguments ("dont-check")) nil [23408 27742])
            ("nnvirtual" package nil nil [27744 27764]))          
      :file "nnvirtual.el.gz"
      :pointmax 27793
      :fsize 8597
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1302 . 1303) (symbol 1271 . 1288) (open-paren 1270 . 1271)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [923 936])
            ("gnus" include nil nil [939 954])
            ("nnheader" include nil nil [997 1016])
            ("message" include nil nil [1017 1035])
            ("gnus-util" include nil nil [1036 1056])
            ("mail-source" include nil nil [1057 1079])
            ("mm-util" include nil nil [1080 1098])
            ("gnus-int" include nil nil [1099 1118])
            ("gnus-add-buffer" function (:prototype-flag t) nil [1120 1154])
            ("gnus-kill-buffer" function (:prototype-flag t) nil [1155 1190])
            ("mail-send-and-exit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1191 1238])
            ("nnmail" customgroup (:user-visible-flag t) nil [1240 1304])
            ("nnmail-retrieve" customgroup (:user-visible-flag t) nil [1306 1378])
            ("nnmail-prepare" customgroup (:user-visible-flag t) nil [1380 1480])
            ("nnmail-duplicate" customgroup (:user-visible-flag t) nil [1482 1571])
            ("nnmail-split" customgroup (:user-visible-flag t) nil [1573 1662])
            ("nnmail-files" customgroup (:user-visible-flag t) nil [1664 1745])
            ("nnmail-expire" customgroup (:user-visible-flag t) nil [1747 1815])
            ("nnmail-procmail" customgroup (:user-visible-flag t) nil [1817 1917])
            ("nnmail-various" customgroup (:user-visible-flag t) nil [1919 1991])
            ("nnmail-split-methods" variable
               (:user-visible-flag t
                :default-value (quote (("mail.misc" ""))))
                nil [1993 3406])
            ("nnmail-crosspost" variable (:default-value t) nil [3464 3651])
            ("nnmail-split-fancy-with-parent-ignore-groups" variable nil nil [3653 3987])
            ("nnmail-cache-ignore-groups" variable nil nil [3989 4324])
            ("nnmail-keep-last-article" variable nil nil [4381 4763])
            ("nnmail-use-long-file-names" variable nil nil [4765 5002])
            ("nnmail-default-file-modes" variable (:default-value 384) nil [5004 5146])
            ("nnmail-expiry-wait" variable
               (:user-visible-flag t
                :default-value 7)
                nil [5148 5523])
            ("nnmail-expiry-wait-function" variable nil nil [5525 6279])
            ("nnmail-expiry-target" variable
               (:user-visible-flag t
                :default-value (quote delete))
                nil [6281 6890])
            ("nnmail-fancy-expiry-targets" variable nil nil [6892 8280])
            ("nnmail-cache-accepted-message-ids" variable nil nil [8282 8503])
            ("make-obsolete-variable" code nil nil [8505 8589])
            ("nnmail-resplit-incoming" variable (:user-visible-flag t) nil [8663 8802])
            ("nnmail-scan-directory-mail-source-once" variable (:user-visible-flag t) nil [8804 9039])
            ("nnmail-delete-file-function" variable (:default-value (quote delete-file)) nil [9041 9193])
            ("nnmail-crosspost-link-function" variable
               (:user-visible-flag t
                :default-value (if (string-match "windows-nt" (symbol-name system-type)) (quote copy-file) (quote add-name-to-file)))
                nil [9195 9700])
            ("nnmail-read-incoming-hook" variable
               (:user-visible-flag t
                :default-value (if (eq system-type (quote windows-nt)) (quote (nnheader-ms-strip-cr)) nil))
                nil [9702 10877])
            ("nnmail-prepare-incoming-hook" variable nil nil [10879 11070])
            ("nnmail-prepare-incoming-header-hook" variable nil nil [11072 11344])
            ("nnmail-prepare-incoming-message-hook" variable nil nil [11346 11479])
            ("nnmail-list-identifiers" variable nil nil [11481 11736])
            ("nnmail-pre-get-new-mail-hook" variable nil nil [11738 11888])
            ("nnmail-post-get-new-mail-hook" variable nil nil [11890 12040])
            ("nnmail-split-hook" variable nil nil [12042 12330])
            ("nnmail-spool-hook" variable (:user-visible-flag t) nil [12332 12464])
            ("nnmail-large-newsgroup" variable
               (:user-visible-flag t
                :default-value 50)
                nil [12466 12799])
            ("define-widget" code nil nil [12801 14044])
            ("define-widget" code nil nil [14046 15942])
            ("nnmail-split-fancy" variable (:default-value "mail.misc") nil [15944 19238])
            ("nnmail-split-abbrev-alist" variable
               (:user-visible-flag t
                :default-value (quote ((any . "from\\|to\\|cc\\|sender\\|apparently-to\\|resent-from\\|resent-to\\|resent-cc") (mail . "mailer-daemon\\|postmaster\\|uucp") (to . "to\\|cc\\|apparently-to\\|resent-to\\|resent-cc") (from . "from\\|sender\\|resent-from") (nato . "to\\|cc\\|resent-to\\|resent-cc") (naany . "from\\|to\\|cc\\|sender\\|resent-from\\|resent-to\\|resent-cc"))))
                nil [19240 19784])
            ("nnmail-message-id-cache-length" variable
               (:user-visible-flag t
                :default-value 1000)
                nil [19786 20083])
            ("nnmail-message-id-cache-file" variable (:default-value (nnheader-concat gnus-home-directory ".nnmail-cache")) nil [20085 20295])
            ("nnmail-treat-duplicates" variable
               (:user-visible-flag t
                :default-value (quote warn))
                nil [20297 20986])
            ("nnmail-extra-headers" variable (:default-value (quote (To Newsgroups Cc))) nil [20988 21261])
            ("nnmail-split-header-length-limit" variable (:default-value 2048) nil [21263 21442])
            ("nnmail-mail-splitting-charset" variable nil nil [21444 21601])
            ("nnmail-mail-splitting-decodes" variable nil nil [21603 21775])
            ("nnmail-split-fancy-match-partial-words" variable nil nil [21777 22112])
            ("nnmail-split-lowercase-expanded" variable (:default-value t) nil [22114 22432])
            ("nnmail-article-buffer" variable (:default-value " *nnmail incoming*") nil [22459 22560])
            ("nnmail-split-history" variable nil nil [22562 22678])
            ("nnmail-split-fancy-syntax-table" variable (:default-value (let ((table (make-syntax-table))) (modify-syntax-entry 37 "." table) table)) nil [22680 22881])
            ("nnmail-prepare-save-mail-hook" variable nil nil [22883 22961])
            ("nnmail-split-tracing" variable nil nil [22963 22996])
            ("nnmail-split-trace" variable nil nil [22997 23028])
            ("nnmail-inhibit-default-split-group" variable nil nil [23029 23076])
            ("nnmail-request-post" function (:arguments ("server")) nil [23081 23154])
            ("nnmail-file-coding-system" variable (:default-value (quote raw-text)) nil [23156 23234])
            ("nnmail-incoming-coding-system" variable (:default-value mm-text-coding-system) nil [23236 23338])
            ("nnmail-pathname-coding-system" variable
               (:user-visible-flag t
                :default-value (if (featurep (quote xemacs)) (if (featurep (quote file-coding)) (setq file-name-coding-system (coding-system-aliasee (quote file-name))))))
                nil [23340 23780])
            ("nnmail-find-file" function (:arguments ("file")) nil [23782 24246])
            ("nnmail-group-pathname" function (:arguments ("group" "dir" "file")) nil [24248 24929])
            ("nnmail-get-active" function nil nil [24931 25203])
            ("nnmail-parse-active" function nil nil [25205 26015])
            ("nnmail-active-file-coding-system" variable
               (:user-visible-flag t
                :default-value (quote raw-text))
                nil [26017 26104])
            ("nnmail-save-active" function (:arguments ("group-assoc" "file-name")) nil [26106 26378])
            ("nnmail-generate-active" function (:arguments ("alist")) nil [26380 26728])
            ("nnmail-get-split-group" function (:arguments ("file" "source")) nil [26730 27160])
            ("nnmail-process-babyl-mail-format" function (:arguments ("func" "artnum-func")) nil [27162 29843])
            ("nnmail-search-unix-mail-delim" function nil nil [29845 30757])
            ("nnmail-search-unix-mail-delim-backward" function nil nil [30759 31681])
            ("nnmail-process-unix-mail-format" function (:arguments ("func" "artnum-func")) nil [31683 34885])
            ("nnmail-process-mmdf-mail-format" function (:arguments ("func" "artnum-func" "junk-func")) nil [34887 36658])
            ("nnmail-process-maildir-mail-format" function (:arguments ("func" "artnum-func")) nil [36660 37898])
            ("nnmail-group-names-not-encoded-p" variable nil nil [37900 37992])
            ("nnmail-split-incoming" function (:arguments ("incoming" "func" "exit-func" "group" "artnum-func" "junk-func")) nil [37994 39687])
            ("nnmail-article-group" function (:arguments ("func" "trace" "junk-func")) nil [39689 45090])
            ("nnmail-insert-lines" function nil nil [45092 45725])
            ("nnmail-insert-xref" function (:arguments ("group-alist")) nil [45727 46464])
            ("nnmail-remove-leading-whitespace" function nil nil [46497 46700])
            ("nnmail-remove-list-identifiers" function nil nil [46702 47333])
            ("nnmail-remove-tabs" function nil nil [47335 47474])
            ("nnmail-broken-references-mailers" variable (:default-value "^X-Mailer:.*\\(Eudora\\|Pegasus\\)") nil [47476 47734])
            ("nnmail-ignore-broken-references" function nil nil [47736 48260])
            ("defalias" code nil nil [48262 48332])
            ("make-obsolete" code nil nil [48333 48421])
            ("custom-add-option" code nil nil [48423 48517])
            ("declare-function" code nil nil [48542 48667])
            ("nnmail-do-request-post" function (:arguments ("accept-func" "server")) nil [48669 49661])
            ("nnmail-split-fancy" function nil nil [49663 49888])
            ("nnmail-split-cache" variable nil nil [49890 49921])
            ("nnmail-split-it" function (:arguments ("split")) nil [49979 54253])
            ("nnmail-expand-newtext" function (:arguments ("newtext" "fancyp")) nil [54255 55405])
            ("nnmail-activate" function (:arguments ("backend" "force")) nil [55547 56495])
            ("nnmail-message-id" function nil nil [56497 56594])
            ("nnmail-cache-buffer" variable nil nil [56635 56667])
            ("nnmail-cache-open" function nil nil [56669 57160])
            ("nnmail-cache-close" function nil nil [57162 58008])
            ("nnmail-cache-insert" function (:arguments ("id" "grp" "subject" "sender")) nil [58010 59240])
            ("nnmail-cache-primary-mail-backend" function nil nil [59242 59764])
            ("nnmail-cache-fetch-group" function (:arguments ("id")) nil [59846 60208])
            ("nnmail-split-fancy-with-parent" function nil nil [60329 61636])
            ("nnmail-cache-id-exists-p" function (:arguments ("id")) nil [61638 61817])
            ("nnmail-fetch-field" function (:arguments ("header")) nil [61819 61962])
            ("nnmail-check-duplication" function (:arguments ("message-id" "func" "artnum-func" "junk-func")) nil [61964 63709])
            ("nnmail-fetched-sources" variable nil nil [63730 63765])
            ("nnmail-get-value" function (:arguments ("args")) nil [63767 63899])
            ("nnmail-get-new-mail" function (:arguments ("method" "exit-func" "temp" "group" "spool-func")) nil [63901 64083])
            ("nnmail-get-new-mail-per-group" function nil nil [64085 64324])
            ("nnmail-get-new-mail-1" function (:arguments ("method" "exit-func" "temp" "group" "in-group" "spool-func")) nil [64326 67163])
            ("nnmail-expired-article-p" function (:arguments ("group" "time" "force" "inhibit")) nil [67165 68137])
            ("declare-function" code nil nil [68139 68215])
            ("nnmail-expiry-target-group" function (:arguments ("target" "group")) nil [68217 68932])
            ("nnmail-fancy-expiry-target" function (:arguments ("group")) nil [68934 70384])
            ("nnmail-check-syntax" function nil nil [70386 70683])
            ("nnmail-write-region" function (:arguments ("start" "end" "filename" "append" "visit" "lockname")) nil [70685 71054])
            ("nnmail-replace-status" function (:arguments ("name" "value")) nil [71086 71523])
            ("nnmail-decode-status" function nil nil [71525 72451])
            ("nnmail-encode-status" function (:arguments ("status")) nil [72453 72701])
            ("nnmail-split-history" function (:user-visible-flag t) nil [72703 73197])
            ("nnmail-purge-split-history" function (:arguments ("group")) nil [73199 73550])
            ("nnmail-new-mail-p" function (:arguments ("group")) nil [73552 73759])
            ("nnmail-within-headers-p" function nil nil [73761 74027])
            ("run-hooks" code nil nil [74029 74058])
            ("nnmail" package nil nil [74060 74077]))          
      :file "nnmail.el.gz"
      :pointmax 74103
      :fsize 20384
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 936 . 937) (symbol 905 . 922) (open-paren 904 . 905)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnheader" include nil nil [879 898])
            ("nnmail" include nil nil [899 916])
            ("gnus-start" include nil nil [917 938])
            ("gnus-group" include nil nil [939 960])
            ("nnmh" include nil nil [961 976])
            ("nnoo" include nil nil [977 992])
            ("mm-util" include nil nil [993 1011])
            ("cl" include nil nil [1031 1044])
            ("declare-function" code nil nil [1087 1151])
            ("nnoo-declare" code nil nil [1153 1182])
            ("defvoo" code nil nil [1184 1310])
            ("nndraft-required-headers" variable
               (:user-visible-flag t
                :default-value (quote (Date)))
                nil [1312 1554])
            ("defvoo" code nil nil [1559 1615])
            ("defvoo" code nil nil [1616 1671])
            ("defvoo" code nil nil [1672 1737])
            ("nndraft-version" variable
               (:constant-flag t
                :default-value "nndraft 1.0")
                nil [1739 1779])
            ("defvoo" code nil nil [1780 1836])
            ("nnoo-define-basics" code nil nil [1867 1895])
            ("deffoo" code nil nil [1897 2438])
            ("deffoo" code nil nil [2440 3410])
            ("deffoo" code nil nil [3412 4404])
            ("deffoo" code nil nil [4406 4900])
            ("deffoo" code nil nil [4902 5368])
            ("nndraft-generate-headers" function nil nil [5370 5547])
            ("nndraft-update-unread-articles" function nil nil [5549 6331])
            ("deffoo" code nil nil [6333 7399])
            ("deffoo" code nil nil [7401 8125])
            ("deffoo" code nil nil [8127 8695])
            ("deffoo" code nil nil [8697 9973])
            ("deffoo" code nil nil [9975 10235])
            ("deffoo" code nil nil [10237 10581])
            ("deffoo" code nil nil [10583 10917])
            ("nndraft-possibly-change-group" function (:arguments ("group")) nil [10946 11210])
            ("nndraft-article-filename" function (:arguments ("article" "args")) nil [11212 11369])
            ("nndraft-auto-save-file-name" function (:arguments ("file")) nil [11371 11603])
            ("nndraft-articles" function nil nil [11605 11842])
            ("nnoo-import" code nil nil [11844 11962])
            ("nndraft" package nil nil [11964 11982]))          
      :file "nndraft.el.gz"
      :pointmax 12009
      :fsize 3789
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1044 . 1045) (symbol 1013 . 1030) (open-paren 1012 . 1013)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnheader" include nil nil [1090 1109])
            ("nnmail" include nil nil [1110 1127])
            ("gnus-start" include nil nil [1128 1149])
            ("nnoo" include nil nil [1150 1165])
            ("cl" include nil nil [1185 1198])
            ("nnoo-declare" code nil nil [1201 1220])
            ("defvoo" code nil nil [1222 1289])
            ("defvoo" code nil nil [1291 1394])
            ("defvoo" code nil nil [1396 1487])
            ("defvoo" code nil nil [1489 1754])
            ("nnmh-version" variable
               (:constant-flag t
                :default-value "nnmh 1.0")
                nil [1759 1811])
            ("defvoo" code nil nil [1813 1882])
            ("defvoo" code nil nil [1884 1914])
            ("defvoo" code nil nil [1915 1944])
            ("nnmh-allow-delete-final" variable nil nil [2129 2165])
            ("nnoo-define-basics" code nil nil [2196 2221])
            ("deffoo" code nil nil [2223 3590])
            ("deffoo" code nil nil [3592 4211])
            ("deffoo" code nil nil [4213 4713])
            ("deffoo" code nil nil [4715 6013])
            ("deffoo" code nil nil [6015 6121])
            ("deffoo" code nil nil [6123 6477])
            ("nnmh-toplev" variable nil nil [6479 6499])
            ("nnmh-request-list-1" function (:arguments ("dir")) nil [6500 8010])
            ("deffoo" code nil nil [8012 8096])
            ("deffoo" code nil nil [8098 9345])
            ("deffoo" code nil nil [9347 9401])
            ("deffoo" code nil nil [9403 10100])
            ("deffoo" code nil nil [10102 10922])
            ("deffoo" code nil nil [10924 11301])
            ("deffoo" code nil nil [11303 11860])
            ("deffoo" code nil nil [11862 12650])
            ("deffoo" code nil nil [12652 13602])
            ("nnoo-define-skeleton" code nil nil [13604 13631])
            ("nnmh-possibly-change-directory" function (:arguments ("newsgroup" "server")) nil [13660 14112])
            ("nnmh-possibly-create-directory" function (:arguments ("group")) nil [14114 14595])
            ("nnmh-save-mail" function (:arguments ("group-art" "noinsert")) nil [14597 15516])
            ("nnmh-active-number" function (:arguments ("group")) nil [15518 16654])
            ("nnmh-update-gnus-unreads" function (:arguments ("group")) nil [16656 18881])
            ("nnmh-deletable-article-p" function (:arguments ("group" "article")) nil [18883 19286])
            ("nnmh" package nil nil [19288 19303]))          
      :file "nnmh.el.gz"
      :pointmax 19327
      :fsize 5704
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1198 . 1199) (symbol 1167 . 1184) (open-paren 1166 . 1167)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnheader" include nil nil [863 882])
            ("cl" include nil nil [902 915])
            ("nnoo-definition-alist" variable nil nil [918 952])
            ("nnoo-state-alist" variable nil nil [953 982])
            ("nnoo-parent-backend" variable nil nil [983 1015])
            ("defvoo" function (:arguments ("var" "init" "doc" "map")) nil [1017 1335])
            ("put" code nil nil [1336 1373])
            ("put" code nil nil [1374 1441])
            ("deffoo" function (:arguments ("func" "args" "forms")) nil [1443 1612])
            ("put" code nil nil [1613 1650])
            ("put" code nil nil [1651 1719])
            ("nnoo-register-function" function (:arguments ("func")) nil [1721 1974])
            ("nnoo-declare" function (:arguments ("backend" "parents")) nil [1976 2419])
            ("put" code nil nil [2420 2463])
            ("nnoo-parents" function (:arguments ("backend")) nil [2465 2543])
            ("nnoo-variables" function (:arguments ("backend")) nil [2545 2625])
            ("nnoo-functions" function (:arguments ("backend")) nil [2627 2707])
            ("nnoo-import" function (:arguments ("backend" "imports")) nil [2709 2794])
            ("put" code nil nil [2795 2837])
            ("nnoo-import-1" function (:arguments ("backend" "imports")) nil [2839 3356])
            ("nnoo-parent-function" function (:arguments ("backend" "function" "args")) nil [3358 3848])
            ("nnoo-execute" function (:arguments ("backend" "function" "args")) nil [3850 4381])
            ("nnoo-map-functions" function (:arguments ("backend" "maps")) nil [4383 4476])
            ("put" code nil nil [4477 4526])
            ("nnoo-map-functions-1" function (:arguments ("backend" "maps")) nil [4528 4979])
            ("nnoo-backend" function (:arguments ("symbol")) nil [4981 5123])
            ("nnoo-rest-symbol" function (:arguments ("symbol")) nil [5125 5264])
            ("nnoo-symbol" function (:arguments ("backend" "symbol")) nil [5266 5345])
            ("nnoo-define" function (:arguments ("var" "map")) nil [5347 5837])
            ("nnoo-change-server" function (:arguments ("backend" "server" "defs")) nil [5839 7188])
            ("nnoo-push-server" function (:arguments ("backend" "current")) nil [7190 7976])
            ("nnoo-current-server-p" function (:arguments ("backend" "server")) nil [7978 8155])
            ("nnoo-current-server" function (:arguments ("backend")) nil [8157 8236])
            ("nnoo-close-server" function (:arguments ("backend" "server")) nil [8238 8614])
            ("nnoo-close" function (:arguments ("backend")) nil [8616 8738])
            ("nnoo-status-message" function (:arguments ("backend" "server")) nil [8740 8816])
            ("nnoo-server-opened" function (:arguments ("backend" "server")) nil [8818 8974])
            ("nnoo-define-basics" function (:arguments ("backend")) nil [8976 9140])
            ("nnoo-define-basics-1" function (:arguments ("backend")) nil [9142 9549])
            ("nnoo-define-skeleton" function (:arguments ("backend")) nil [9551 9760])
            ("nnoo-define-skeleton-1" function (:arguments ("backend")) nil [9762 10234])
            ("nnoo-set" function (:arguments ("server" "args")) nil [10236 10596])
            ("nnoo" package nil nil [10598 10613]))          
      :file "nnoo.el.gz"
      :pointmax 10637
      :fsize 3066
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 915 . 916) (symbol 884 . 901) (open-paren 883 . 884)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus" include nil nil [1191 1206])
            ("nnheader" include nil nil [1207 1226])
            ("nnmail" include nil nil [1227 1244])
            ("nnoo" include nil nil [1245 1260])
            ("cl" include nil nil [1280 1293])
            ("gnus-article-unpropagatable-p" function (:prototype-flag t) nil [1335 1387])
            ("gnus-backlog-remove-article" function (:prototype-flag t) nil [1388 1440])
            ("nnoo-declare" code nil nil [1442 1461])
            ("defvoo" code nil nil [1463 1551])
            ("defvoo" code nil nil [1553 1647])
            ("defvoo" code nil nil [1649 1767])
            ("defvoo" code nil nil [1769 1872])
            ("defvoo" code nil nil [1874 2360])
            ("defvoo" code nil nil [2362 2453])
            ("defvoo" code nil nil [2455 2519])
            ("defvoo" code nil nil [2521 2836])
            ("defvoo" code nil nil [2838 3080])
            ("nnml-version" variable
               (:constant-flag t
                :default-value "nnml 1.0")
                nil [3085 3137])
            ("defvoo" code nil nil [3139 3178])
            ("defvoo" code nil nil [3180 3215])
            ("defvoo" code nil nil [3216 3247])
            ("defvoo" code nil nil [3248 3278])
            ("defvoo" code nil nil [3279 3313])
            ("defvoo" code nil nil [3314 3343])
            ("defvoo" code nil nil [3344 3378])
            ("defvoo" code nil nil [3379 3415])
            ("defvoo" code nil nil [3417 3482])
            ("nnml-nov-buffer-file-name" variable nil nil [3484 3522])
            ("defvoo" code nil nil [3524 3582])
            ("nnoo-define-basics" code nil nil [3612 3637])
            ("nnml-group-name-charset" function (:arguments ("group" "server-or-method")) nil [3660 4090])
            ("nnml-decoded-group-name" function (:arguments ("group" "server-or-method")) nil [4093 4368])
            ("nnml-encoded-group-name" function (:arguments ("group" "server-or-method")) nil [4370 4588])
            ("nnml-group-pathname" function (:arguments ("group" "file" "server")) nil [4590 4807])
            ("deffoo" code nil nil [4809 6240])
            ("deffoo" code nil nil [6242 6840])
            ("deffoo" code nil nil [6842 6972])
            ("deffoo" code nil nil [6974 8384])
            ("deffoo" code nil nil [8386 9478])
            ("deffoo" code nil nil [9480 9945])
            ("deffoo" code nil nil [9947 10038])
            ("deffoo" code nil nil [10040 11067])
            ("deffoo" code nil nil [11069 11361])
            ("deffoo" code nil nil [11363 11447])
            ("deffoo" code nil nil [11449 11568])
            ("deffoo" code nil nil [11570 13894])
            ("deffoo" code nil nil [13896 14889])
            ("deffoo" code nil nil [14891 16004])
            ("deffoo" code nil nil [16006 16114])
            ("deffoo" code nil nil [16116 17387])
            ("deffoo" code nil nil [17389 18709])
            ("deffoo" code nil nil [18711 19965])
            ("deffoo" code nil nil [19967 20355])
            ("nnml-article-to-file" function (:arguments ("article")) nil [20384 20948])
            ("nnml-deletable-article-p" function (:arguments ("group" "article")) nil [20950 21322])
            ("nnml-find-group-number" function (:arguments ("id" "server")) nil [21393 22166])
            ("nnml-find-id" function (:arguments ("group" "id" "server")) nil [22168 22773])
            ("nnml-retrieve-headers-with-nov" function (:arguments ("articles" "fetch-old")) nil [22775 23360])
            ("nnml-possibly-change-directory" function (:arguments ("group" "server")) nil [23362 23876])
            ("nnml-possibly-create-directory" function (:arguments ("group" "server")) nil [23878 24197])
            ("nnml-save-mail" function (:arguments ("group-art" "server" "full-nov")) nil [24199 26649])
            ("nnml-active-number" function (:arguments ("group" "server")) nil [26651 27820])
            ("nnml-incremental-nov-buffer-alist" variable nil nil [27822 27868])
            ("nnml-save-incremental-nov" function nil nil [27870 28370])
            ("nnml-open-incremental-nov" function (:arguments ("group")) nil [28372 28597])
            ("nnml-add-incremental-nov" function (:arguments ("group" "article" "headers")) nil [28599 28881])
            ("nnml-add-nov" function (:arguments ("group" "article" "headers")) nil [28883 29119])
            ("nnml-header-value" function nil nil [29121 29202])
            ("nnml-parse-head" function (:arguments ("chars" "number")) nil [29204 29638])
            ("nnml-get-nov-buffer" function (:arguments ("group" "incrementalp")) nil [29640 30290])
            ("nnml-open-nov" function (:arguments ("group")) nil [30292 30537])
            ("nnml-save-nov" function nil nil [30539 30964])
            ("nnml-generate-nov-databases" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [30981 31575])
            ("nnml-files" variable nil nil [31577 31596])
            ("nnml-generate-nov-databases-directory" function
               (:user-visible-flag t
                :arguments ("dir" "seen" "no-active"))
                nil [31597 32976])
            ("nnml-generate-active-info" function (:arguments ("dir")) nil [32978 33483])
            ("nnml-generate-nov-file" function (:arguments ("dir" "files")) nil [33485 34673])
            ("nnml-nov-delete-article" function (:arguments ("group" "article")) nil [34675 35157])
            ("nnml-update-file-alist" function (:arguments ("force")) nil [35159 35386])
            ("nnml-directory-articles" function (:arguments ("dir")) nil [35388 36111])
            ("nnml-current-group-article-to-file-alist" function nil nil [36113 36887])
            ("nnml-request-compact-group" function (:arguments ("group" "server" "save")) nil [37946 43931])
            ("nnml-request-compact" function
               (:user-visible-flag t
                :arguments ("server"))
                nil [43933 44569])
            ("nnml" package nil nil [44572 44587]))          
      :file "nnml.el.gz"
      :pointmax 44611
      :fsize 11441
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 4090 . 4091) (symbol 3640 . 3657) (open-paren 3639 . 3640) (close-paren 1293 . 1294) (symbol 1262 . 1279) (open-paren 1261 . 1262)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnoo" include nil nil [7622 7637])
            ("gnus-group" include nil nil [7638 7659])
            ("message" include nil nil [7660 7678])
            ("gnus-util" include nil nil [7679 7699])
            ("cl" include nil nil [7721 7734])
            ("nnir-memo-query" variable nil nil [7762 7826])
            ("nnir-memo-server" variable nil nil [7828 7894])
            ("nnir-artlist" variable nil nil [7896 7957])
            ("nnir-search-history" variable nil nil [7959 8052])
            ("nnir-tmp-buffer" variable
               (:constant-flag t
                :default-value " *nnir*")
                nil [8054 8122])
            ("nnir-imap-search-arguments" variable (:default-value (quote (("whole message" . "TEXT") ("subject" . "SUBJECT") ("to" . "TO") ("from" . "FROM") ("body" . "BODY") ("imap" . "")))) nil [8144 8392])
            ("nnir-imap-search-other" variable (:default-value "HEADER %S") nil [8394 8580])
            ("nnir-imap-search-argument-history" variable nil nil [8582 8679])
            ("nnir-artlist-length" function (:arguments ("artlist")) nil [8728 8832])
            ("nnir-artlist-article" function (:arguments ("artlist" "n")) nil [8834 8991])
            ("nnir-artitem-group" function (:arguments ("artitem")) nil [8993 9092])
            ("nnir-artitem-number" function (:arguments ("artitem")) nil [9094 9195])
            ("nnir-artitem-rsv" function (:arguments ("artitem")) nil [9197 9324])
            ("nnir-article-group" function (:arguments ("article")) nil [9326 9468])
            ("nnir-article-number" function (:arguments ("article")) nil [9470 9615])
            ("nnir-article-rsv" function (:arguments ("article")) nil [9617 9753])
            ("nnir-article-ids" function (:arguments ("article")) nil [9755 9893])
            ("nnir-categorize" function (:arguments ("sequence" "keyfunc" "valuefunc")) nil [9895 10592])
            ("gnus-sum" include nil nil [10613 10632])
            ("nnoo-declare" code nil nil [10634 10653])
            ("nnoo-define-basics" code nil nil [10654 10679])
            ("gnus-declare-backend" code nil nil [10681 10725])
            ("nnir" customgroup (:user-visible-flag t) nil [10762 10852])
            ("nnir-ignored-newsgroups" variable (:user-visible-flag t) nil [10854 11037])
            ("nnir-summary-line-format" variable (:user-visible-flag t) nil [11039 11561])
            ("nnir-retrieve-headers-override-function" variable (:user-visible-flag t) nil [11563 12064])
            ("nnir-imap-default-search-key" variable
               (:user-visible-flag t
                :default-value "whole message")
                nil [12066 12429])
            ("nnir-swish++-configuration-file" variable
               (:user-visible-flag t
                :default-value (expand-file-name "~/Mail/swish++.conf"))
                nil [12431 12585])
            ("nnir-swish++-program" variable
               (:user-visible-flag t
                :default-value "search")
                nil [12587 12701])
            ("nnir-swish++-additional-switches" variable
               (:user-visible-flag t
                :default-value (quote nil))
                nil [12703 13077])
            ("nnir-swish++-remove-prefix" variable
               (:user-visible-flag t
                :default-value (concat (getenv "HOME") "/Mail/"))
                nil [13079 13446])
            ("make-obsolete-variable" code nil nil [13594 13685])
            ("nnir-swish-e-index-file" variable
               (:user-visible-flag t
                :default-value (expand-file-name "~/Mail/index.swish-e"))
                nil [13686 13965])
            ("nnir-swish-e-index-files" variable
               (:user-visible-flag t
                :default-value (list nnir-swish-e-index-file))
                nil [13967 14148])
            ("nnir-swish-e-program" variable
               (:user-visible-flag t
                :default-value "swish-e")
                nil [14150 14300])
            ("nnir-swish-e-additional-switches" variable
               (:user-visible-flag t
                :default-value (quote nil))
                nil [14302 14711])
            ("nnir-swish-e-remove-prefix" variable
               (:user-visible-flag t
                :default-value (concat (getenv "HOME") "/Mail/"))
                nil [14713 15115])
            ("nnir-hyrex-program" variable
               (:user-visible-flag t
                :default-value "nnir-search")
                nil [15180 15298])
            ("nnir-hyrex-additional-switches" variable
               (:user-visible-flag t
                :default-value (quote nil))
                nil [15300 15711])
            ("nnir-hyrex-index-directory" variable
               (:user-visible-flag t
                :default-value (getenv "HOME"))
                nil [15713 15835])
            ("nnir-hyrex-remove-prefix" variable
               (:user-visible-flag t
                :default-value (concat (getenv "HOME") "/Mail/"))
                nil [15837 16450])
            ("nnir-namazu-program" variable
               (:user-visible-flag t
                :default-value "namazu")
                nil [16504 16616])
            ("nnir-namazu-index-directory" variable
               (:user-visible-flag t
                :default-value (expand-file-name "~/Mail/namazu/"))
                nil [16618 16762])
            ("nnir-namazu-additional-switches" variable
               (:user-visible-flag t
                :default-value (quote nil))
                nil [16764 17241])
            ("nnir-namazu-remove-prefix" variable
               (:user-visible-flag t
                :default-value (concat (getenv "HOME") "/Mail/"))
                nil [17243 17860])
            ("nnir-notmuch-program" variable
               (:user-visible-flag t
                :default-value "notmuch")
                nil [17862 17995])
            ("nnir-notmuch-additional-switches" variable
               (:user-visible-flag t
                :default-value (quote nil))
                nil [17997 18389])
            ("nnir-notmuch-remove-prefix" variable
               (:user-visible-flag t
                :default-value (concat (getenv "HOME") "/Mail/"))
                nil [18391 18776])
            ("nnir-engines" variable (:default-value (\` ((imap nnir-run-imap ((criteria "Imap Search in" (\, (mapcar (quote car) nnir-imap-search-arguments)) nil nil nnir-imap-search-argument-history (\, nnir-imap-default-search-key)))) (gmane nnir-run-gmane ((gmane-author . "Gmane Author: "))) (swish++ nnir-run-swish++ ((swish++-group . "Swish++ Group spec (regexp): "))) (swish-e nnir-run-swish-e ((swish-e-group . "Swish-e Group spec (regexp): "))) (namazu nnir-run-namazu nil) (notmuch nnir-run-notmuch nil) (hyrex nnir-run-hyrex ((hyrex-group . "Hyrex Group spec (regexp): "))) (find-grep nnir-run-find-grep ((grep-options . "Grep options: ")))))) nil [18813 20623])
            ("nnir-method-default-engines" variable
               (:user-visible-flag t
                :default-value (quote ((nnimap . imap) (nntp . gmane))))
                nil [20625 21117])
            ("declare-function" code nil nil [21134 21190])
            ("gnus-group-make-nnir-group" function
               (:user-visible-flag t
                :arguments ("nnir-extra-parms" "specs"))
                nil [21192 22836])
            ("gnus-summary-make-nnir-group" function
               (:user-visible-flag t
                :arguments ("nnir-extra-parms"))
                nil [22838 23191])
            ("deffoo" code nil nil [23232 23565])
            ("deffoo" code nil nil [23567 24593])
            ("deffoo" code nil nil [24595 26267])
            ("deffoo" code nil nil [26269 27807])
            ("deffoo" code nil nil [27809 28646])
            ("deffoo" code nil nil [28648 29553])
            ("deffoo" code nil nil [29555 30518])
            ("deffoo" code nil nil [30520 30770])
            ("deffoo" code nil nil [30772 31468])
            ("deffoo" code nil nil [31471 32726])
            ("deffoo" code nil nil [32729 33256])
            ("nnir-add-result" function (:arguments ("dirnam" "artno" "score" "prefix" "server" "artlist")) nil [33385 33697])
            ("nnmaildir-base-name-to-article-number" function (:prototype-flag t) nil [33699 33760])
            ("nnir-compose-result" function (:arguments ("dirnam" "article" "score" "prefix" "server")) nil [33877 35011])
            ("nnimap-change-group" function (:prototype-flag t) nil [35044 35084])
            ("declare-function" code nil nil [35085 35129])
            ("declare-function" code nil nil [35130 35185])
            ("nnir-run-imap" function (:arguments ("query" "srv" "groups")) nil [35205 37465])
            ("nnir-imap-make-query" function (:arguments ("criteria" "qstring")) nil [37467 38805])
            ("nnir-imap-query-to-imap" function (:arguments ("criteria" "query")) nil [38808 39127])
            ("nnir-imap-expr-to-imap" function (:arguments ("criteria" "expr")) nil [39130 39976])
            ("nnir-imap-parse-query" function (:arguments ("string")) nil [39979 40533])
            ("nnir-imap-next-expr" function (:arguments ("count")) nil [40536 40903])
            ("nnir-imap-next-term" function (:arguments ("count")) nil [40906 41262])
            ("nnir-imap-peek-symbol" function nil nil [41265 41418])
            ("nnir-imap-next-symbol" function (:arguments ("count")) nil [41420 42848])
            ("nnir-imap-delimited-string" function (:arguments ("delimiter")) nil [42850 43324])
            ("nnir-imap-end-of-input" function nil nil [43326 43447])
            ("nnir-run-swish++" function (:arguments ("query" "server" "group")) nil [43586 47083])
            ("nnir-run-swish-e" function (:arguments ("query" "server" "group")) nil [47107 50517])
            ("nnir-run-hyrex" function (:arguments ("query" "server" "group")) nil [50538 53441])
            ("nnir-run-namazu" function (:arguments ("query" "server" "group")) nil [53463 56301])
            ("nnir-run-notmuch" function (:arguments ("query" "server" "group")) nil [56303 59124])
            ("nnir-run-find-grep" function (:arguments ("query" "server" "grouplist")) nil [59126 61723])
            ("declare-function" code nil nil [61725 61797])
            ("declare-function" code nil nil [61798 61867])
            ("nnir-run-gmane" function (:arguments ("query" "srv" "groups")) nil [61888 63567])
            ("gnus-nnir-group-p" function (:arguments ("group")) nil [63585 63796])
            ("nnir-read-parms" function (:arguments ("nnir-search-engine")) nil [63798 64017])
            ("nnir-read-parm" function (:arguments ("parmspec")) nil [64019 64489])
            ("nnir-run-query" function (:arguments ("specs")) nil [64491 64936])
            ("nnir-server-to-search-engine" function (:arguments ("server")) nil [64938 65132])
            ("nnir-read-server-parm" function (:arguments ("key" "server" "not-global")) nil [65134 65596])
            ("nnir-possibly-change-group" function (:arguments ("group" "server")) nil [65598 65915])
            ("nnir-server-opened" function (:arguments ("server")) nil [65917 66073])
            ("nnimap-make-thread-query" function (:prototype-flag t) nil [66075 66120])
            ("declare-function" code nil nil [66121 66189])
            ("nnir-search-thread" function (:arguments ("header")) nil [66191 67200])
            ("nnir-get-active" function (:arguments ("srv")) nil [67202 68413])
            ("declare-function" code nil nil [68453 68572])
            ("nnir-registry-action" function (:arguments ("action" "data-header" "from" "to" "method")) nil [68574 68836])
            ("nnir-mode" function nil nil [68838 69546])
            ("gnus-summary-create-nnir-group" function nil nil [69549 69954])
            ("deffoo" code nil nil [69957 70874])
            ("deffoo" code nil nil [70876 70945])
            ("deffoo" code nil nil [70947 70996])
            ("deffoo" code nil nil [70998 71043])
            ("deffoo" code nil nil [71045 71079])
            ("nnoo-define-skeleton" code nil nil [71081 71108])
            ("nnir" package nil nil [71122 71137]))          
      :file "nnir.el.gz"
      :pointmax 71161
      :fsize 18733
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 7734 . 7735) (symbol 7701 . 7718) (open-paren 7700 . 7701)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnheader" include nil nil [1069 1088])
            ("message" include nil nil [1089 1107])
            ("nnmail" include nil nil [1108 1125])
            ("nnoo" include nil nil [1126 1141])
            ("cl" include nil nil [1161 1174])
            ("gnus" include nil nil [1176 1191])
            ("gnus-util" include nil nil [1192 1212])
            ("gnus-range" include nil nil [1213 1234])
            ("gnus-article-unpropagatable-p" function (:prototype-flag t) nil [1279 1331])
            ("nnoo-declare" code nil nil [1333 1356])
            ("defvoo" code nil nil [1358 1462])
            ("defvoo" code nil nil [1464 1581])
            ("defvoo" code nil nil [1583 1695])
            ("defvoo" code nil nil [1790 2118])
            ("defvoo" code nil nil [2120 2523])
            ("defvoo" code nil nil [2525 2666])
            ("defvoo" code nil nil [2668 2779])
            ("defvoo" code nil nil [2781 2876])
            ("defvoo" code nil nil [2878 2969])
            ("defvoo" code nil nil [2972 3040])
            ("nnfolder-version" variable
               (:constant-flag t
                :default-value "nnfolder 2.0")
                nil [3045 3109])
            ("nnfolder-article-marker" variable
               (:constant-flag t
                :default-value "X-Gnus-Article-Number: ")
                nil [3111 3242])
            ("defvoo" code nil nil [3244 3279])
            ("defvoo" code nil nil [3280 3316])
            ("defvoo" code nil nil [3317 3351])
            ("defvoo" code nil nil [3352 3385])
            ("defvoo" code nil nil [3386 3420])
            ("defvoo" code nil nil [3421 3457])
            ("defvoo" code nil nil [3458 3496])
            ("defvoo" code nil nil [3497 3562])
            ("defvoo" code nil nil [3563 3653])
            ("defvoo" code nil nil [3654 3712])
            ("defvoo" code nil nil [3713 3876])
            ("defvoo" code nil nil [3927 4423])
            ("defvoo" code nil nil [4425 4465])
            ("defvoo" code nil nil [4467 4505])
            ("nnfolder-nov-buffer-file-name" variable nil nil [4507 4549])
            ("nnoo-define-basics" code nil nil [4579 4608])
            ("deffoo" code nil nil [4610 6979])
            ("deffoo" code nil nil [6981 7775])
            ("deffoo" code nil nil [7777 8041])
            ("deffoo" code nil nil [8043 9082])
            ("deffoo" code nil nil [9084 10153])
            ("deffoo" code nil nil [10155 10435])
            ("nnfolder-save-all-buffers" function nil nil [10437 10801])
            ("deffoo" code nil nil [11039 12208])
            ("deffoo" code nil nil [12210 12900])
            ("deffoo" code nil nil [12902 13197])
            ("deffoo" code nil nil [13199 13337])
            ("deffoo" code nil nil [13339 13582])
            ("nnfolder-existing-articles" function nil nil [13671 14223])
            ("gnus-request-group" function (:prototype-flag t) nil [14225 14266])
            ("declare-function" code nil nil [14267 14383])
            ("deffoo" code nil nil [14385 16783])
            ("deffoo" code nil nil [16785 17873])
            ("deffoo" code nil nil [17875 19658])
            ("deffoo" code nil nil [19660 20672])
            ("deffoo" code nil nil [20674 21392])
            ("deffoo" code nil nil [21394 22472])
            ("deffoo" code nil nil [22474 22603])
            ("nnfolder-adjust-min-active" function (:arguments ("group")) nil [22632 23217])
            ("nnfolder-article-string" function (:arguments ("article")) nil [23219 23395])
            ("nnfolder-goto-article" function (:arguments ("article")) nil [23397 24307])
            ("nnfolder-delete-mail" function (:arguments ("leave-delim")) nil [24309 24992])
            ("nnfolder-possibly-change-group" function (:arguments ("group" "server" "dont-check")) nil [24994 27116])
            ("nnfolder-save-mail" function (:arguments ("group-art-list")) nil [27118 28909])
            ("nnfolder-normalize-buffer" function nil nil [28911 29141])
            ("nnfolder-insert-newsgroup-line" function (:arguments ("group-art")) nil [29143 29464])
            ("nnfolder-active-number" function (:arguments ("group")) nil [29466 29922])
            ("nnfolder-possibly-change-folder" function (:arguments ("group")) nil [29924 30367])
            ("nnfolder-read-folder" function (:arguments ("group")) nil [31272 36409])
            ("nnfolder-recursive-directory-files" function (:arguments ("dir" "prefix")) nil [36411 37050])
            ("nnfolder-generate-active-file" function (:user-visible-flag t) nil [37067 38388])
            ("nnfolder-group-pathname" function (:arguments ("group")) nil [38390 38880])
            ("nnfolder-group-nov-pathname" function (:arguments ("group")) nil [38882 39108])
            ("copyright-update" variable nil nil [39110 39135])
            ("nnfolder-save-buffer" function nil nil [39137 39636])
            ("nnfolder-save-active" function (:arguments ("group-alist" "active-file")) nil [39638 39879])
            ("nnfolder-open-nov" function (:arguments ("group")) nil [39881 40390])
            ("nnfolder-save-nov" function nil nil [40392 40916])
            ("nnfolder-nov-delete-article" function (:arguments ("group" "article")) nil [40918 41132])
            ("nnfolder-retrieve-headers-with-nov" function (:arguments ("articles" "fetch-old")) nil [41134 41719])
            ("nnfolder-parse-head" function (:arguments ("number" "b" "e")) nil [41721 42393])
            ("nnfolder-add-nov" function (:arguments ("group" "article" "headers")) nil [42395 42639])
            ("nnfolder" package nil nil [42641 42660]))          
      :file "nnfolder.el.gz"
      :pointmax 42688
      :fsize 10887
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1174 . 1175) (symbol 1143 . 1160) (open-paren 1142 . 1143)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("nnheader" include nil nil [998 1017])
            ("message" include nil nil [1018 1036])
            ("nnmail" include nil nil [1037 1054])
            ("nnoo" include nil nil [1055 1070])
            ("gnus-util" include nil nil [1071 1091])
            ("mm-util" include nil nil [1092 1110])
            ("cl" include nil nil [1130 1143])
            ("nnoo-declare" code nil nil [1146 1166])
            ("defvoo" code nil nil [1168 1457])
            ("defvoo" code nil nil [1459 1539])
            ("defvoo" code nil nil [1541 1713])
            ("nndoc-type-alist" variable (:default-value (\` ((mmdf (article-begin . "^
") (body-end . "^
")) (debbugs-db (file-begin . "^") (article-begin . "^[]
") (body-end . "^")) (mime-digest (article-begin . "") (head-begin . "^ ?
") (head-end . "^ ?$") (body-end . "") (file-end . "") (subtype digest guess)) (nsmail (article-begin . "^From - ")) (news (article-begin . "^Path:")) (rnews (article-begin . "^#! *rnews +\\([0-9]+\\) *
") (body-end-function . nndoc-rnews-body-end)) (mbox (article-begin-function . nndoc-mbox-article-begin) (body-end-function . nndoc-mbox-body-end)) (babyl (article-begin . " *
") (body-end . "") (body-begin-function . nndoc-babyl-body-begin) (head-begin-function . nndoc-babyl-head-begin)) (mime-parts (generate-head-function . nndoc-generate-mime-parts-head) (article-transform-function . nndoc-transform-mime-parts)) (exim-bounce (article-begin . "^------ This is a copy of the message, including all the headers. ------

") (body-end-function . nndoc-exim-bounce-body-end-function)) (rfc934 (article-begin . "^--.*
+") (body-end . "^--.*$") (prepare-body-function . nndoc-unquote-dashes)) (mailman (article-begin . "^--__--__--

Message:") (body-end . "^--__--__--$") (prepare-body-function . nndoc-unquote-dashes)) (clari-briefs (article-begin . "^ \\*") (body-end . "^	------*[ 	]^*
^ \\*") (body-begin . "^	") (head-end . "^	") (generate-head-function . nndoc-generate-clari-briefs-head) (article-transform-function . nndoc-transform-clari-briefs)) (standard-digest (first-article \, (concat "^" (make-string 70 45) "
 *
+")) (article-begin \, (concat "^
" (make-string 30 45) "
 *
+")) (prepare-body-function . nndoc-unquote-dashes) (body-end-function . nndoc-digest-body-end) (head-end . "^ *$") (body-begin . "^ *
") (file-end . "^End of .*digest.*[0-9].*
\\*\\*\\|^End of.*Digest *$") (subtype digest guess)) (slack-digest (article-begin . "^------------------------------*[
 	]+") (head-end . "^ ?$") (body-end-function . nndoc-digest-body-end) (body-begin . "^ ?$") (file-end . "^End of") (prepare-body-function . nndoc-unquote-dashes) (subtype digest guess)) (google (pre-dissection-function . nndoc-decode-content-transfer-encoding) (article-begin . "^== [0-9]+ of [0-9]+ ==$") (head-begin . "^Date:") (head-end . "^$") (body-end-function . nndoc-digest-body-end) (body-begin . "^$") (file-end . "^==============================================================================$") (prepare-body-function . nndoc-unquote-dashes) (subtype digest guess)) (lanl-gov-announce (article-begin . "^\\\\\\\\
") (head-begin . "^\\(Paper.*:\\|arXiv:\\)") (head-end . "\\(^\\\\\\\\.*
\\|-----------------\\)") (body-begin . "") (body-end . "\\(-------------------------------------------------\\|%-%-%-%-%-%-%-%-%-%-%-%-%-%-\\|%%--%%--%%--%%--%%--%%--%%--%%--\\|%%%---%%%---%%%---%%%---\\)") (file-end . "\\(^Title: Recent Seminal\\|%%%---%%%---%%%---%%%---\\)") (generate-head-function . nndoc-generate-lanl-gov-head) (article-transform-function . nndoc-transform-lanl-gov-announce) (subtype preprints guess)) (git (file-begin . "
- Log ---.*") (article-begin . "^commit ") (head-begin . "^Author: ") (body-begin . "^$") (file-end . "
-----------------------------------------------------------------------") (article-transform-function . nndoc-transform-git-article) (header-transform-function . nndoc-transform-git-headers)) (rfc822-forward (article-begin . "^
+") (body-end-function . nndoc-rfc822-forward-body-end-function) (generate-head-function . nndoc-rfc822-forward-generate-head) (generate-article-function . nndoc-rfc822-forward-generate-article)) (outlook (article-begin-function . nndoc-outlook-article-begin) (body-end . " ")) (oe-dbx (dissection-function . nndoc-oe-dbx-dissection) (generate-head-function . nndoc-oe-dbx-generate-head) (generate-article-function . nndoc-oe-dbx-generate-article)) (forward (article-begin . "^-+ \\(Start of \\)?forwarded message.*
+") (body-end . "^-+ End \\(of \\)?forwarded message.*$") (prepare-body-function . nndoc-unquote-dashes)) (mail-in-mail (article-begin-function . nndoc-mail-in-mail-article-begin)) (guess (guess . t) (subtype nil)) (digest (guess . t) (subtype nil)) (preprints (guess . t) (subtype nil))))) nil [1715 6655])
            ("nndoc-binary-file-names" variable (:default-value ".[Dd][Bb][Xx]$") nil [6657 6746])
            ("defvoo" code nil nil [6750 6779])
            ("defvoo" code nil nil [6780 6812])
            ("defvoo" code nil nil [6813 6845])
            ("defvoo" code nil nil [6846 6875])
            ("defvoo" code nil nil [6876 6903])
            ("defvoo" code nil nil [6904 6931])
            ("defvoo" code nil nil [6932 6961])
            ("defvoo" code nil nil [6962 6998])
            ("defvoo" code nil nil [6999 7037])
            ("defvoo" code nil nil [7038 7076])
            ("defvoo" code nil nil [7077 7104])
            ("defvoo" code nil nil [7671 7706])
            ("defvoo" code nil nil [7707 7747])
            ("defvoo" code nil nil [7748 7789])
            ("defvoo" code nil nil [7790 7835])
            ("defvoo" code nil nil [7836 7880])
            ("defvoo" code nil nil [7881 7922])
            ("defvoo" code nil nil [7923 7967])
            ("defvoo" code nil nil [7968 8006])
            ("defvoo" code nil nil [8007 8049])
            ("defvoo" code nil nil [8051 8082])
            ("defvoo" code nil nil [8083 8113])
            ("defvoo" code nil nil [8114 8178])
            ("defvoo" code nil nil [8179 8205])
            ("nndoc-version" variable
               (:constant-flag t
                :default-value "nndoc 1.0")
                nil [8207 8262])
            ("nnoo-define-basics" code nil nil [8292 8318])
            ("deffoo" code nil nil [8320 9361])
            ("deffoo" code nil nil [9363 10220])
            ("deffoo" code nil nil [10222 10796])
            ("deffoo" code nil nil [10798 10923])
            ("deffoo" code nil nil [10925 11061])
            ("deffoo" code nil nil [11063 11471])
            ("deffoo" code nil nil [11473 11523])
            ("deffoo" code nil nil [11525 11587])
            ("deffoo" code nil nil [11589 11652])
            ("nndoc-possibly-change-buffer" function (:arguments ("group" "source")) nil [11681 13441])
            ("nndoc-set-delims" function nil nil [13492 14493])
            ("nndoc-guess-type" function (:arguments ("subtype")) nil [14495 15161])
            ("nndoc-mbox-type-p" function nil nil [15215 15299])
            ("nndoc-mbox-article-begin" function nil nil [15301 15448])
            ("nndoc-mbox-body-end" function nil nil [15450 16040])
            ("nndoc-mmdf-type-p" function nil nil [16042 16114])
            ("nndoc-debbugs-db-type-p" function nil nil [16116 16186])
            ("nndoc-news-type-p" function nil nil [16188 16257])
            ("nndoc-rnews-type-p" function nil nil [16259 16328])
            ("nndoc-rnews-body-end" function nil nil [16330 16507])
            ("nndoc-google-type-p" function nil nil [16509 16610])
            ("nndoc-decode-content-transfer-encoding" function nil nil [16612 17005])
            ("nndoc-babyl-type-p" function nil nil [17007 17090])
            ("nndoc-babyl-body-begin" function nil nil [17092 17440])
            ("nndoc-babyl-head-begin" function nil nil [17442 17603])
            ("nndoc-forward-type-p" function nil nil [17605 17794])
            ("nndoc-rfc934-type-p" function nil nil [17796 18060])
            ("nndoc-mailman-type-p" function nil nil [18062 18151])
            ("nndoc-rfc822-forward-type-p" function nil nil [18153 18319])
            ("nndoc-rfc822-forward-body-end-function" function nil nil [18321 18396])
            ("nndoc-rfc822-forward-generate-article" function (:arguments ("article" "head")) nil [18398 19101])
            ("nndoc-rfc822-forward-generate-head" function (:arguments ("article")) nil [19103 19211])
            ("nndoc-mime-parts-type-p" function nil nil [19213 19551])
            ("nndoc-transform-mime-parts" function (:arguments ("article")) nil [19553 19758])
            ("nndoc-generate-mime-parts-head" function (:arguments ("article")) nil [19760 20119])
            ("nndoc-clari-briefs-type-p" function nil nil [20121 20258])
            ("nndoc-transform-clari-briefs" function (:arguments ("article")) nil [20260 20444])
            ("nndoc-generate-clari-briefs-head" function (:arguments ("article")) nil [20446 21173])
            ("nndoc-exim-bounce-type-p" function nil nil [21175 21328])
            ("nndoc-exim-bounce-body-end-function" function nil nil [21330 21402])
            ("nndoc-mime-digest-type-p" function nil nil [21405 22147])
            ("nndoc-standard-digest-type-p" function nil nil [22149 22357])
            ("nndoc-digest-body-end" function nil nil [22359 22484])
            ("nndoc-slack-digest-type-p" function nil nil [22486 22526])
            ("nndoc-git-type-p" function nil nil [22528 22685])
            ("nndoc-transform-git-article" function (:arguments ("article")) nil [22687 22838])
            ("nndoc-transform-git-headers" function (:arguments ("entry")) nil [22840 23310])
            ("nndoc-lanl-gov-announce-type-p" function nil nil [23312 23513])
            ("nndoc-transform-lanl-gov-announce" function (:arguments ("article")) nil [23515 24361])
            ("nndoc-generate-lanl-gov-head" function (:arguments ("article")) nil [24363 25592])
            ("nndoc-nsmail-type-p" function nil nil [25594 25662])
            ("nndoc-outlook-article-begin" function nil nil [25664 25794])
            ("nndoc-outlook-type-p" function nil nil [25796 25910])
            ("nndoc-oe-dbx-type-p" function nil nil [25912 26001])
            ("nndoc-read-little-endian" function nil nil [26003 26237])
            ("nndoc-oe-dbx-decode-block" function nil nil [26239 26462])
            ("nndoc-oe-dbx-dissection" function nil nil [26480 27219])
            ("nndoc-oe-dbx-generate-article" function (:arguments ("article" "head")) nil [27221 27975])
            ("nndoc-oe-dbx-generate-head" function (:arguments ("article")) nil [27977 28069])
            ("nndoc-mail-in-mail-type-p" function nil nil [28071 28466])
            ("nndoc-mail-in-mail-article-begin" function nil nil [28468 28931])
            ("deffoo" code nil nil [28933 29006])
            ("nndoc-search" function (:arguments ("regexp")) nil [29060 29162])
            ("nndoc-dissect-buffer" function nil nil [29164 31124])
            ("nndoc-article-begin" function nil nil [31126 31298])
            ("nndoc-unquote-dashes" function nil nil [31300 31447])
            ("nndoc-mime-split-ordinal" variable nil nil [31479 31512])
            ("nndoc-dissect-mime-parts" function nil nil [31514 31942])
            ("nndoc-dissect-mime-parts-sub" function (:arguments ("head-begin" "body-end" "article-insert" "position" "parent")) nil [31944 36856])
            ("nndoc-add-type" function (:arguments ("definition" "position")) nil [36873 37756])
            ("nndoc" package nil nil [37758 37774]))          
      :file "nndoc.el.gz"
      :pointmax 37799
      :fsize 9289
      :lastmodtime '(22387 39327 0 0)
      :unmatched-syntax '((close-paren 1143 . 1144) (symbol 1112 . 1129) (open-paren 1111 . 1112))))
  :file "!usr!local!Cellar!emacs!25.1!share!emacs!25.1!lisp!gnus!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
