;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1378 1395])
            ("thingatpt" include nil nil [1396 1416])
            ("declare-function" code nil nil [1418 1459])
            ("anzu" customgroup (:user-visible-flag t) nil [1461 1538])
            ("anzu-mode-lighter" variable (:default-value " Anzu") nil [1540 1618])
            ("anzu-cons-mode-line-p" variable (:default-value t) nil [1620 1722])
            ("anzu-minimum-input-length" variable (:default-value 1) nil [1724 1820])
            ("anzu-search-threshold" variable nil nil [1822 1990])
            ("anzu-replace-threshold" variable nil nil [1992 2183])
            ("anzu-use-migemo" variable nil nil [2185 2258])
            ("anzu-mode-line-update-function" variable (:default-value (function anzu--update-mode-line-default)) nil [2260 2419])
            ("anzu-regexp-search-commands" variable (:default-value (quote (isearch-forward-regexp isearch-backward-regexp))) nil [2421 2616])
            ("anzu-input-idle-delay" variable (:default-value 0.05) nil [2618 2730])
            ("anzu-deactivate-region" variable nil nil [2732 2853])
            ("anzu-replace-at-cursor-thing" variable (:default-value (quote defun)) nil [2855 2980])
            ("anzu-replace-to-string-separator" variable nil nil [2982 3074])
            ("anzu-mode-line" variable
               (:default-value (quote ((t (:foreground "magenta" :weight bold))))
                :type "face")
                nil [3076 3172])
            ("anzu-mode-line-no-match" variable
               (:default-value (quote ((t (:inherit anzu-mode-line))))
                :type "face")
                nil [3174 3285])
            ("anzu-replace-highlight" variable
               (:default-value (quote ((t :inherit query-replace)))
                :type "face")
                nil [3287 3384])
            ("anzu-match-1" variable
               (:default-value (quote ((((class color) (background light)) :background "aquamarine" :foreground "black") (((class color) (background dark)) :background "limegreen" :foreground "black") (t :inverse-video t)))
                :type "face")
                nil [3386 3640])
            ("anzu-match-2" variable
               (:default-value (quote ((((class color) (background light)) :background "springgreen" :foreground "black") (((class color) (background dark)) :background "yellow" :foreground "black") (t :inverse-video t)))
                :type "face")
                nil [3642 3895])
            ("anzu-match-3" variable
               (:default-value (quote ((((class color) (background light)) :background "yellow" :foreground "black") (((class color) (background dark)) :background "aquamarine" :foreground "black") (t :inverse-video t)))
                :type "face")
                nil [3897 4148])
            ("anzu-replace-to" variable
               (:default-value (quote ((((class color) (background light)) :foreground "red") (((class color) (background dark)) :foreground "yellow")))
                :type "face")
                nil [4150 4338])
            ("anzu--total-matched" variable nil nil [4340 4370])
            ("anzu--current-position" variable nil nil [4371 4404])
            ("anzu--overflow-p" variable nil nil [4405 4434])
            ("anzu--last-isearch-string" variable nil nil [4435 4473])
            ("anzu--cached-positions" variable nil nil [4474 4509])
            ("anzu--last-command" variable nil nil [4510 4541])
            ("anzu--state" variable nil nil [4542 4566])
            ("anzu--cached-count" variable nil nil [4567 4596])
            ("anzu--last-replace-input" variable nil nil [4597 4633])
            ("anzu--last-search-state" variable nil nil [4634 4670])
            ("anzu--last-replaced-count" variable nil nil [4671 4709])
            ("anzu--outside-point" variable nil nil [4710 4742])
            ("anzu--history" variable nil nil [4743 4769])
            ("anzu--query-defaults" variable nil nil [4770 4803])
            ("anzu--validate-regexp" function (:arguments ("regexp")) nil [4805 4950])
            ("anzu--construct-position-info" function (:arguments ("count" "overflow" "positions")) nil [4952 5081])
            ("anzu--case-fold-search" function (:arguments ("input")) nil [5083 5228])
            ("anzu--word-search-p" function nil nil [5230 5359])
            ("anzu--isearch-regexp-function" function nil nil [5361 5492])
            ("anzu--transform-input" function (:arguments ("str")) nil [5494 5735])
            ("anzu--use-migemo-p" function nil nil [5737 5917])
            ("anzu--search-all-position" function (:arguments ("str")) nil [5919 7338])
            ("anzu--where-is-here" function (:arguments ("positions" "here")) nil [7340 7560])
            ("anzu--use-result-cache-p" function (:arguments ("input")) nil [7562 7783])
            ("anzu--update" function (:arguments ("query")) nil [7785 8445])
            ("anzu--update-post-hook" function nil nil [8447 8512])
            ("anzu--mode-line-format" variable
               (:constant-flag t
                :default-value (quote (:eval (anzu--update-mode-line))))
                nil [8514 8581])
            ("anzu--mode-line-not-set-p" function nil nil [8583 8711])
            ("anzu--cons-mode-line-search" function nil nil [8713 8784])
            ("anzu--cons-mode-line" function (:arguments ("state")) nil [8786 8995])
            ("anzu--reset-status" function nil nil [8997 9215])
            ("anzu--reset-mode-line" function nil nil [9217 9414])
            ("anzu--format-here-position" function (:arguments ("here" "total")) nil [9416 9545])
            ("anzu--update-mode-line-default" function (:arguments ("here" "total")) nil [9547 10177])
            ("anzu--update-mode-line" function nil nil [10179 10298])
            ("define-minor-mode" code nil nil [10315 10999])
            ("anzu--turn-on" function nil nil [11001 11069])
            ("define-globalized-minor-mode" code nil nil [11086 11157])
            ("anzu--query-prompt-base" function (:arguments ("use-region" "use-regexp")) nil [11159 11372])
            ("anzu--query-prompt" function (:arguments ("use-region" "use-regexp" "at-cursor" "isearch-p")) nil [11374 11789])
            ("anzu--replaced-markers" variable nil nil [11791 11826])
            ("anzu--set-marker" function (:arguments ("beg" "buf")) nil [11827 11955])
            ("anzu--make-overlay" function (:arguments ("begin" "end" "face" "prio")) nil [11957 12157])
            ("anzu--add-match-group-overlay" function (:arguments ("match-data" "groups")) nil [12159 12596])
            ("anzu--add-overlay" function (:arguments ("beg" "end")) nil [12598 12999])
            ("anzu--cleanup-markers" function nil nil [13001 13136])
            ("anzu--count-and-highlight-matched" function (:arguments ("buf" "str" "replace-beg" "replace-end" "use-regexp" "overlay-limit" "case-sensitive")) nil [13166 14583])
            ("anzu--search-outside-visible" function (:arguments ("buf" "input" "beg" "end" "use-regexp")) nil [14585 15167])
            ("anzu--from-to-separator" variable
               (:constant-flag t
                :default-value (propertize (or (ignore-errors (if (char-displayable-p 8594) " â†’ " " -> ")) " -> ") (quote face) (quote minibuffer-prompt)))
                nil [15169 15345])
            ("anzu--separator" function nil nil [15347 15442])
            ("anzu--check-minibuffer-input" function (:arguments ("buf" "beg" "end" "use-regexp" "overlay-limit")) nil [15444 16648])
            ("anzu--clear-overlays" function (:arguments ("buf" "beg" "end")) nil [16650 16866])
            ("anzu--transform-from-to-history" function nil nil [16868 17268])
            ("anzu--read-from-string" function (:arguments ("prompt" "beg" "end" "use-regexp" "overlay-limit")) nil [17270 18430])
            ("anzu--query-validate-from-regexp" function (:arguments ("from")) nil [18432 18854])
            ("anzu--query-from-string" function (:arguments ("prompt" "beg" "end" "use-regexp" "overlay-limit")) nil [18856 19652])
            ("anzu--compile-replace-text" function (:arguments ("str")) nil [19654 20037])
            ("anzu--evaluate-occurrence" function (:arguments ("ov" "to-regexp" "replacements" "fixed-case" "from-regexp")) nil [20039 20752])
            ("anzu--overlay-sort" function (:arguments ("a" "b")) nil [20754 20828])
            ("anzu--overlays-in-range" function (:arguments ("beg" "end")) nil [20830 21258])
            ("anzu--propertize-to-string" function (:arguments ("str")) nil [21260 21429])
            ("anzu--replaced-literal-string" function (:arguments ("ov" "replaced" "from")) nil [21431 21699])
            ("anzu--append-replaced-string" function (:arguments ("content" "buf" "beg" "end" "use-regexp" "overlay-limit" "from")) nil [21701 22541])
            ("anzu--outside-overlay-limit" function (:arguments ("orig-beg" "orig-limit")) nil [22543 22710])
            ("anzu--read-to-string" function (:arguments ("from" "prompt" "beg" "end" "use-regexp" "overlay-limit")) nil [22712 24220])
            ("anzu--query-replace-read-to" function (:arguments ("from" "prompt" "beg" "end" "use-regexp" "overlay-limit")) nil [24222 24578])
            ("anzu--overlay-limit" function nil nil [24580 24691])
            ("anzu--query-from-at-cursor" function (:arguments ("buf" "beg" "end" "overlay-limit")) nil [24693 25119])
            ("anzu--query-from-isearch-string" function (:arguments ("buf" "beg" "end" "use-regexp" "overlay-limit")) nil [25121 25459])
            ("anzu--thing-begin" function (:arguments ("thing")) nil [25461 25725])
            ("anzu--thing-end" function (:arguments ("thing")) nil [25727 25865])
            ("anzu--region-begin" function (:arguments ("use-region" "thing" "backward")) nil [25867 26110])
            ("anzu--line-end-position" function (:arguments ("num")) nil [26112 26223])
            ("anzu--region-end" function (:arguments ("use-region" "thing")) nil [26225 26473])
            ("anzu--begin-thing" function (:arguments ("at-cursor" "thing")) nil [26475 26619])
            ("anzu--replace-backward-p" function (:arguments ("prefix")) nil [26621 26845])
            ("anzu--construct-perform-replace-arguments" function (:arguments ("from" "to" "delimited" "beg" "end" "backward" "query")) nil [26847 27072])
            ("anzu--construct-query-replace-arguments" function (:arguments ("from" "to" "delimited" "beg" "end" "backward")) nil [27074 27259])
            ("anzu--current-replaced-index" function (:arguments ("curpoint")) nil [27261 27482])
            ("replace-highlight" function (:arguments ("before" "anzu-replace-highlight" "activate")) nil [27484 27832])
            ("anzu--set-replaced-markers" function (:arguments ("from" "beg" "end" "use-regexp")) nil [27834 28456])
            ("cl-defun" code nil nil [28458 31335])
            ("anzu-query-replace-at-cursor" function (:user-visible-flag t) nil [31352 31498])
            ("anzu-query-replace-at-cursor-thing" function (:user-visible-flag t) nil [31515 31731])
            ("anzu-query-replace" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [31748 31888])
            ("anzu-query-replace-regexp" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [31905 32057])
            ("anzu-replace-at-cursor-thing" function (:user-visible-flag t) nil [32074 32471])
            ("anzu--isearch-query-replace-common" function (:arguments ("use-regexp" "arg")) nil [32473 33134])
            ("anzu-isearch-query-replace" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [33151 33303])
            ("anzu-isearch-query-replace-regexp" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [33320 33484])
            ("anzu" package nil nil [33486 33501]))          
      :file "anzu.el"
      :pointmax 33577
      :fsize 33576
      :lastmodtime '(22659 32371 0 0)
      :unmatched-syntax nil))
  :file "!Users!bing!.emacs.d!elpa!anzu-20161017.907!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
